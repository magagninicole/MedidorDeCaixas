

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 04 18:26:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _TMR1L	set	4046
    94  0000                     _TMR1H	set	4047
    95  0000                     _PORTCbits	set	3970
    96  0000                     _RCONbits	set	4048
    97  0000                     _TMR0L	set	4054
    98  0000                     _TMR0H	set	4055
    99  0000                     _TRISC	set	3988
   100  0000                     _PORTD	set	3971
   101  0000                     _TXREG	set	4013
   102  0000                     _RCREG	set	4014
   103  0000                     _T1CON	set	4045
   104  0000                     _TMR1ON	set	32360
   105  0000                     _TRMT	set	32097
   106  0000                     _PORTBbits	set	3969
   107  0000                     _RCSTA	set	4011
   108  0000                     _TXSTA	set	4012
   109  0000                     _SPBRG	set	4015
   110  0000                     _RCIF	set	31989
   111  0000                     _ADCON1	set	4033
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISD	set	3989
   114  0000                     _T1CONbits	set	4045
   115  0000                     _T0CONbits	set	4053
   116  0000                     _INTCON3bits	set	4080
   117  0000                     _INTCON2bits	set	4081
   118  0000                     _INTCONbits	set	4082
   119                           
   120                           	psect	smallconst
   121  000600                     __psmallconst:
   122                           	callstack 0
   123  000600  00                 	db	0
   124  000601                     STR_2:
   125  000601  0D                 	db	13
   126  000602  0A                 	db	10
   127  000603  00                 	db	0
   128  000604                     STR_1:
   129  000604  25                 	db	37
   130  000605  64                 	db	100	;'d'
   131  000606  00                 	db	0
   132  000607  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137  002166                     __pcinit:
   138                           	callstack 0
   139  002166                     start_initialization:
   140                           	callstack 0
   141  002166                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Clear objects allocated to BANK1 (42 bytes)
   145  002166  EE01  F065         	lfsr	0,__pbssBANK1
   146  00216A  0E2A               	movlw	42
   147  00216C                     clear_0:
   148  00216C  6AEE               	clrf	postinc0,c
   149  00216E  06E8               	decf	wreg,f,c
   150  002170  E1FD               	bnz	clear_0
   151                           
   152                           ; Clear objects allocated to BANK0 (26 bytes)
   153  002172  EE00  F0BA         	lfsr	0,__pbssBANK0
   154  002176  0E1A               	movlw	26
   155  002178                     clear_1:
   156  002178  6AEE               	clrf	postinc0,c
   157  00217A  06E8               	decf	wreg,f,c
   158  00217C  E1FD               	bnz	clear_1
   159  00217E                     end_of_initialization:
   160                           	callstack 0
   161  00217E                     __end_of__initialization:
   162                           	callstack 0
   163  00217E  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   164  002180  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   165  002182  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166  002184  6EF8               	movwf	tblptru,c
   167  002186  0100               	movlb	0
   168  002188  EF11  F00A         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssBANK0
   171  0000BA                     __pbssBANK0:
   172                           	callstack 0
   173  0000BA                     _tempo_echo:
   174                           	callstack 0
   175  0000BA                     	ds	4
   176  0000BE                     _width:
   177                           	callstack 0
   178  0000BE                     	ds	2
   179  0000C0                     _prec:
   180                           	callstack 0
   181  0000C0                     	ds	2
   182  0000C2                     _flags:
   183                           	callstack 0
   184  0000C2                     	ds	2
   185  0000C4                     _valZ:
   186                           	callstack 0
   187  0000C4                     	ds	2
   188  0000C6                     _valY:
   189                           	callstack 0
   190  0000C6                     	ds	2
   191  0000C8                     _valX:
   192                           	callstack 0
   193  0000C8                     	ds	2
   194  0000CA                     _valor_tara:
   195                           	callstack 0
   196  0000CA                     	ds	2
   197  0000CC                     _dig_val:
   198                           	callstack 0
   199  0000CC                     	ds	2
   200  0000CE                     _medindo:
   201                           	callstack 0
   202  0000CE                     	ds	2
   203  0000D0                     _indice:
   204                           	callstack 0
   205  0000D0                     	ds	2
   206  0000D2                     _valorAMos:
   207                           	callstack 0
   208  0000D2                     	ds	2
   209                           
   210                           	psect	bssBANK1
   211  000165                     __pbssBANK1:
   212                           	callstack 0
   213  000165                     _nout:
   214                           	callstack 0
   215  000165                     	ds	2
   216  000167                     _flag_MENSURAR:
   217                           	callstack 0
   218  000167                     	ds	2
   219  000169                     _flag_TARA:
   220                           	callstack 0
   221  000169                     	ds	2
   222  00016B                     _flag_MEDIR:
   223                           	callstack 0
   224  00016B                     	ds	2
   225  00016D                     _valor_display:
   226                           	callstack 0
   227  00016D                     	ds	2
   228  00016F                     _dbuf:
   229                           	callstack 0
   230  00016F                     	ds	32
   231                           
   232                           	psect	cstackBANK1
   233  000100                     __pcstackBANK1:
   234                           	callstack 0
   235  000100                     ?___aodiv:
   236                           	callstack 0
   237  000100                     ?___aomod:
   238                           	callstack 0
   239  000100                     fputs@c:
   240                           	callstack 0
   241  000100                     UART_Init@baud_rate:
   242                           	callstack 0
   243  000100                     ___aodiv@dividend:
   244                           	callstack 0
   245  000100                     ___aomod@dividend:
   246                           	callstack 0
   247                           
   248                           ; 8 bytes @ 0x0
   249  000100                     	ds	1
   250  000101                     fputs@i:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x1
   254  000101                     	ds	2
   255  000103                     ??_UART_Init:
   256  000103                     ?_pad:
   257                           	callstack 0
   258  000103                     pad@fp:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x3
   262  000103                     	ds	2
   263  000105                     pad@buf:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x5
   267  000105                     	ds	2
   268  000107                     pad@p:
   269                           	callstack 0
   270  000107                     UART_Init@n:
   271                           	callstack 0
   272                           
   273                           ; 3 bytes @ 0x7
   274  000107                     	ds	1
   275  000108                     ___aodiv@divisor:
   276                           	callstack 0
   277  000108                     ___aomod@divisor:
   278                           	callstack 0
   279                           
   280                           ; 8 bytes @ 0x8
   281  000108                     	ds	1
   282  000109                     pad@i:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x9
   286  000109                     	ds	2
   287  00010B                     pad@w:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0xB
   291  00010B                     	ds	5
   292  000110                     ?_dtoa:
   293                           	callstack 0
   294  000110                     dtoa@fp:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x10
   298  000110                     	ds	2
   299  000112                     dtoa@d:
   300                           	callstack 0
   301                           
   302                           ; 8 bytes @ 0x12
   303  000112                     	ds	8
   304  00011A                     ??_dtoa:
   305                           
   306                           ; 1 bytes @ 0x1A
   307  00011A                     	ds	8
   308  000122                     _dtoa$1121:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x22
   312  000122                     	ds	2
   313  000124                     dtoa@p:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x24
   317  000124                     	ds	2
   318  000126                     dtoa@w:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x26
   322  000126                     	ds	2
   323  000128                     dtoa@s:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x28
   327  000128                     	ds	2
   328  00012A                     dtoa@n:
   329                           	callstack 0
   330                           
   331                           ; 8 bytes @ 0x2A
   332  00012A                     	ds	8
   333  000132                     dtoa@i:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x32
   337  000132                     	ds	2
   338  000134                     ?_vfpfcnvrt:
   339                           	callstack 0
   340  000134                     vfpfcnvrt@fp:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x34
   344  000134                     	ds	2
   345  000136                     vfpfcnvrt@fmt:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x36
   349  000136                     	ds	2
   350  000138                     vfpfcnvrt@ap:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x38
   354  000138                     	ds	2
   355  00013A                     ??_vfpfcnvrt:
   356                           
   357                           ; 1 bytes @ 0x3A
   358  00013A                     	ds	2
   359  00013C                     vfpfcnvrt@ll:
   360                           	callstack 0
   361                           
   362                           ; 8 bytes @ 0x3C
   363  00013C                     	ds	8
   364  000144                     ?_vfprintf:
   365                           	callstack 0
   366  000144                     vfprintf@fp:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x44
   370  000144                     	ds	2
   371  000146                     vfprintf@fmt:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x46
   375  000146                     	ds	1
   376  000147                     vfprintf@ap:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x47
   380  000147                     	ds	2
   381  000149                     vfprintf@cfmt:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x49
   385  000149                     	ds	1
   386  00014A                     ?_sprintf:
   387                           	callstack 0
   388  00014A                     sprintf@s:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x4A
   392  00014A                     	ds	2
   393  00014C                     sprintf@fmt:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x4C
   397  00014C                     	ds	3
   398  00014F                     sprintf@ap:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x4F
   402  00014F                     	ds	2
   403  000151                     sprintf@f:
   404                           	callstack 0
   405                           
   406                           ; 11 bytes @ 0x51
   407  000151                     	ds	11
   408  00015C                     ??_main:
   409                           
   410                           ; 1 bytes @ 0x5C
   411  00015C                     	ds	1
   412  00015D                     main@str:
   413                           	callstack 0
   414                           
   415                           ; 8 bytes @ 0x5D
   416  00015D                     	ds	8
   417                           
   418                           	psect	cstackBANK0
   419  000080                     __pcstackBANK0:
   420                           	callstack 0
   421  000080                     isr@str:
   422                           	callstack 0
   423                           
   424                           ; 20 bytes @ 0x0
   425  000080                     	ds	20
   426  000094                     isr@str_598:
   427                           	callstack 0
   428                           
   429                           ; 20 bytes @ 0x14
   430  000094                     	ds	20
   431  0000A8                     _isr$1401:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x28
   435  0000A8                     	ds	2
   436  0000AA                     _isr$1402:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2A
   440  0000AA                     	ds	2
   441  0000AC                     ?_strlen:
   442                           	callstack 0
   443  0000AC                     ?___aldiv:
   444                           	callstack 0
   445  0000AC                     UART_PutC@data:
   446                           	callstack 0
   447  0000AC                     ___aodiv@counter:
   448                           	callstack 0
   449  0000AC                     ___aomod@counter:
   450                           	callstack 0
   451  0000AC                     fputc@c:
   452                           	callstack 0
   453  0000AC                     strlen@s:
   454                           	callstack 0
   455  0000AC                     ___aldiv@dividend:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0x2C
   459  0000AC                     	ds	1
   460  0000AD                     ___aodiv@sign:
   461                           	callstack 0
   462  0000AD                     ___aomod@sign:
   463                           	callstack 0
   464  0000AD                     UART_Print@data:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x2D
   468  0000AD                     	ds	1
   469  0000AE                     ?_abs:
   470                           	callstack 0
   471  0000AE                     abs@a:
   472                           	callstack 0
   473  0000AE                     fputc@fp:
   474                           	callstack 0
   475  0000AE                     strlen@a:
   476                           	callstack 0
   477  0000AE                     ___aodiv@quotient:
   478                           	callstack 0
   479                           
   480                           ; 8 bytes @ 0x2E
   481  0000AE                     	ds	1
   482  0000AF                     UART_Print@i:
   483                           	callstack 0
   484                           
   485                           ; 3 bytes @ 0x2F
   486  0000AF                     	ds	1
   487  0000B0                     ??_fputc:
   488  0000B0                     ??_abs:
   489  0000B0                     strcpy@dest:
   490                           	callstack 0
   491  0000B0                     ___aldiv@divisor:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x30
   495  0000B0                     	ds	2
   496  0000B2                     strcpy@src:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x32
   500  0000B2                     	ds	1
   501  0000B3                     ??_strcpy:
   502                           
   503                           ; 1 bytes @ 0x33
   504  0000B3                     	ds	1
   505  0000B4                     ___aldiv@counter:
   506                           	callstack 0
   507  0000B4                     strcpy@d:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x34
   511  0000B4                     	ds	1
   512  0000B5                     ___aldiv@sign:
   513                           	callstack 0
   514  0000B5                     fputs@s:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x35
   518  0000B5                     	ds	1
   519  0000B6                     strcpy@s:
   520                           	callstack 0
   521  0000B6                     ___aldiv@quotient:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x36
   525  0000B6                     	ds	1
   526  0000B7                     fputs@fp:
   527                           	callstack 0
   528  0000B7                     strcat@dest:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x37
   532  0000B7                     	ds	2
   533  0000B9                     ??_pad:
   534  0000B9                     strcat@src:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x39
   538  0000B9                     	ds	1
   539  0000BA                     
   540                           ; 1 bytes @ 0x3A
   541                           
   542                           	psect	cstackCOMRAM
   543  000001                     __pcstackCOMRAM:
   544                           	callstack 0
   545  000001                     ?___wmul:
   546                           	callstack 0
   547  000001                     ?___awmod:
   548                           	callstack 0
   549  000001                     ?i2_strlen:
   550                           	callstack 0
   551  000001                     ?i2___aodiv:
   552                           	callstack 0
   553  000001                     ?i2___aomod:
   554                           	callstack 0
   555  000001                     i2UART_PutC@data:
   556                           	callstack 0
   557  000001                     valor_equivalente@dig:
   558                           	callstack 0
   559  000001                     ___wmul@multiplier:
   560                           	callstack 0
   561  000001                     ___awmod@dividend:
   562                           	callstack 0
   563  000001                     i2fputc@c:
   564                           	callstack 0
   565  000001                     i2strlen@s:
   566                           	callstack 0
   567  000001                     i2___aodiv@dividend:
   568                           	callstack 0
   569  000001                     i2___aomod@dividend:
   570                           	callstack 0
   571                           
   572                           ; 8 bytes @ 0x0
   573  000001                     	ds	1
   574  000002                     i2UART_Print@data:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x1
   578  000002                     	ds	1
   579  000003                     valor_equivalente@val:
   580                           	callstack 0
   581  000003                     ___wmul@multiplicand:
   582                           	callstack 0
   583  000003                     ___awmod@divisor:
   584                           	callstack 0
   585  000003                     i2fputc@fp:
   586                           	callstack 0
   587  000003                     i2strlen@a:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x2
   591  000003                     	ds	1
   592  000004                     i2UART_Print@i:
   593                           	callstack 0
   594                           
   595                           ; 3 bytes @ 0x3
   596  000004                     	ds	1
   597  000005                     ??_valor_equivalente:
   598  000005                     ??i2_fputc:
   599  000005                     ___awmod@counter:
   600                           	callstack 0
   601  000005                     ___wmul@product:
   602                           	callstack 0
   603  000005                     i2strcpy@dest:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x4
   607  000005                     	ds	1
   608  000006                     ___awmod@sign:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x5
   612  000006                     	ds	1
   613  000007                     ?___awdiv:
   614                           	callstack 0
   615  000007                     valor_equivalente@correspondencia:
   616                           	callstack 0
   617  000007                     i2strcpy@src:
   618                           	callstack 0
   619  000007                     ___awdiv@dividend:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x6
   623  000007                     	ds	1
   624  000008                     ??i2_strcpy:
   625                           
   626                           ; 1 bytes @ 0x7
   627  000008                     	ds	1
   628  000009                     ___awdiv@divisor:
   629                           	callstack 0
   630  000009                     i2strcpy@d:
   631                           	callstack 0
   632  000009                     i2___aodiv@divisor:
   633                           	callstack 0
   634  000009                     i2___aomod@divisor:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x8
   638  000009                     	ds	1
   639  00000A                     i2fputs@s:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x9
   643  00000A                     	ds	1
   644  00000B                     ___awdiv@counter:
   645                           	callstack 0
   646  00000B                     i2strcpy@s:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0xA
   650  00000B                     	ds	1
   651  00000C                     ___awdiv@sign:
   652                           	callstack 0
   653  00000C                     i2fputs@fp:
   654                           	callstack 0
   655  00000C                     i2strcat@dest:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xB
   659  00000C                     	ds	1
   660  00000D                     ___awdiv@quotient:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0xC
   664  00000D                     	ds	1
   665  00000E                     i2fputs@c:
   666                           	callstack 0
   667  00000E                     i2strcat@src:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0xD
   671  00000E                     	ds	1
   672  00000F                     i2fputs@i:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0xE
   676  00000F                     	ds	2
   677  000011                     ?i2_pad:
   678                           	callstack 0
   679  000011                     i2___aodiv@counter:
   680                           	callstack 0
   681  000011                     i2___aomod@counter:
   682                           	callstack 0
   683  000011                     i2pad@fp:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x10
   687  000011                     	ds	1
   688  000012                     i2___aodiv@sign:
   689                           	callstack 0
   690  000012                     i2___aomod@sign:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x11
   694  000012                     	ds	1
   695  000013                     ?i2_abs:
   696                           	callstack 0
   697  000013                     i2pad@buf:
   698                           	callstack 0
   699  000013                     i2abs@a:
   700                           	callstack 0
   701  000013                     i2___aodiv@quotient:
   702                           	callstack 0
   703                           
   704                           ; 8 bytes @ 0x12
   705  000013                     	ds	2
   706  000015                     ??i2_abs:
   707  000015                     i2pad@p:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x14
   711  000015                     	ds	2
   712  000017                     ??i2_pad:
   713                           
   714                           ; 1 bytes @ 0x16
   715  000017                     	ds	1
   716  000018                     i2pad@i:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x17
   720  000018                     	ds	2
   721  00001A                     i2pad@w:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x19
   725  00001A                     	ds	2
   726  00001C                     ?i2_dtoa:
   727                           	callstack 0
   728  00001C                     i2dtoa@fp:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x1B
   732  00001C                     	ds	2
   733  00001E                     i2dtoa@d:
   734                           	callstack 0
   735                           
   736                           ; 8 bytes @ 0x1D
   737  00001E                     	ds	8
   738  000026                     ??i2_dtoa:
   739                           
   740                           ; 1 bytes @ 0x25
   741  000026                     	ds	8
   742  00002E                     i2_dtoa$1121:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2D
   746  00002E                     	ds	2
   747  000030                     i2dtoa@p:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x2F
   751  000030                     	ds	2
   752  000032                     i2dtoa@w:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x31
   756  000032                     	ds	2
   757  000034                     i2dtoa@s:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x33
   761  000034                     	ds	2
   762  000036                     i2dtoa@n:
   763                           	callstack 0
   764                           
   765                           ; 8 bytes @ 0x35
   766  000036                     	ds	8
   767  00003E                     i2dtoa@i:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x3D
   771  00003E                     	ds	2
   772  000040                     ?i2_vfpfcnvrt:
   773                           	callstack 0
   774  000040                     i2vfpfcnvrt@fp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x3F
   778  000040                     	ds	2
   779  000042                     i2vfpfcnvrt@fmt:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x41
   783  000042                     	ds	2
   784  000044                     i2vfpfcnvrt@ap:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x43
   788  000044                     	ds	2
   789  000046                     ??i2_vfpfcnvrt:
   790                           
   791                           ; 1 bytes @ 0x45
   792  000046                     	ds	2
   793  000048                     i2vfpfcnvrt@ll:
   794                           	callstack 0
   795                           
   796                           ; 8 bytes @ 0x47
   797  000048                     	ds	8
   798  000050                     ?i2_vfprintf:
   799                           	callstack 0
   800  000050                     i2vfprintf@fp:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x4F
   804  000050                     	ds	2
   805  000052                     i2vfprintf@fmt:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x51
   809  000052                     	ds	1
   810  000053                     i2vfprintf@ap:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x52
   814  000053                     	ds	2
   815  000055                     i2vfprintf@cfmt:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x54
   819  000055                     	ds	1
   820  000056                     ?i2_sprintf:
   821                           	callstack 0
   822  000056                     i2sprintf@s:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x55
   826  000056                     	ds	2
   827  000058                     i2sprintf@fmt:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x57
   831  000058                     	ds	3
   832  00005B                     i2sprintf@ap:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x5A
   836  00005B                     	ds	2
   837  00005D                     i2sprintf@f:
   838                           	callstack 0
   839                           
   840                           ; 11 bytes @ 0x5C
   841  00005D                     	ds	11
   842  000068                     ??_isr:
   843                           
   844                           ; 1 bytes @ 0x67
   845  000068                     	ds	14
   846                           
   847 ;;
   848 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   849 ;;
   850 ;; *************** function _main *****************
   851 ;; Defined at:
   852 ;;		line 176 in file "pwm.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  str             8   93[BANK1 ] unsigned char [8]
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 3F/1
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   866 ;;      Params:         0       0       0       0       0       0       0
   867 ;;      Locals:         0       0       8       0       0       0       0
   868 ;;      Temps:          0       0       1       0       0       0       0
   869 ;;      Totals:         0       0       9       0       0       0       0
   870 ;;Total ram usage:        9 bytes
   871 ;; Hardware stack levels required when called: 17
   872 ;; This function calls:
   873 ;;		_UART_Init
   874 ;;		_UART_Print
   875 ;;		_sprintf
   876 ;;		_strcat
   877 ;; This function is called by:
   878 ;;		Startup code after reset
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text0
   883  001422                     __ptext0:
   884                           	callstack 0
   885  001422                     _main:
   886                           	callstack 14
   887                           
   888                           ;pwm.c: 178: 
   889                           
   890                           ;incstack = 0
   891  001422  0E00               	movlw	0
   892  001424  6E95               	movwf	149,c	;volatile
   893                           
   894                           ;pwm.c: 179:     T1CONbits.RD16 = 1;
   895  001426  0E01               	movlw	1
   896  001428  6E93               	movwf	147,c	;volatile
   897                           
   898                           ;pwm.c: 180:     T1CONbits.T1OSCEN = 1;
   899  00142A  0E07               	movlw	7
   900  00142C  6E94               	movwf	148,c	;volatile
   901                           
   902                           ;pwm.c: 181:     T1CONbits.TMR1CS = 0;
   903  00142E  0E0F               	movlw	15
   904  001430  6EC1               	movwf	193,c	;volatile
   905                           
   906                           ;pwm.c: 185:     INTCONbits.TMR0IF = 0;
   907  001432  9CD5               	bcf	213,6,c	;volatile
   908                           
   909                           ;pwm.c: 186:     INTCONbits.TMR0IE = 1;
   910  001434  9AD5               	bcf	213,5,c	;volatile
   911                           
   912                           ;pwm.c: 187:     INTCON2bits.INTEDG1 = 0;
   913  001436  96D5               	bcf	213,3,c	;volatile
   914                           
   915                           ;pwm.c: 188:     INTCON3bits.INT1IF = 0;
   916  001438  0EF8               	movlw	-8
   917  00143A  16D5               	andwf	213,f,c	;volatile
   918                           
   919                           ;pwm.c: 189:     INTCON3bits.INT1IE = 1;
   920  00143C  8ED5               	bsf	213,7,c	;volatile
   921                           
   922                           ;pwm.c: 190: 
   923  00143E  0ECF               	movlw	207
   924  001440  6ED7               	movwf	215,c	;volatile
   925                           
   926                           ;pwm.c: 191: 
   927  001442  0E2C               	movlw	44
   928  001444  6ED6               	movwf	214,c	;volatile
   929                           
   930                           ;pwm.c: 194:     INTCONbits.GIE = 1;
   931  001446  8ECD               	bsf	205,7,c	;volatile
   932                           
   933                           ;pwm.c: 195:     INTCON2bits.INTEDG0 = 1;
   934  001448  86CD               	bsf	205,3,c	;volatile
   935                           
   936                           ;pwm.c: 196:     RCONbits.IPEN=0;
   937  00144A  92CD               	bcf	205,1,c	;volatile
   938                           
   939                           ;pwm.c: 197: 
   940  00144C  0E10               	movlw	16
   941  00144E  6ECD               	movwf	205,c	;volatile
   942                           
   943                           ;pwm.c: 200:     PORTBbits.RB5 = 0;
   944  001450  94F2               	bcf	242,2,c	;volatile
   945                           
   946                           ;pwm.c: 201:     PORTBbits.RB6 = 0;
   947  001452  8AF2               	bsf	242,5,c	;volatile
   948                           
   949                           ;pwm.c: 202:     PORTBbits.RB7 = 0;
   950  001454  9AF1               	bcf	241,5,c	;volatile
   951                           
   952                           ;pwm.c: 203:     PORTD = 0b00111111;
   953  001456  90F0               	bcf	240,0,c	;volatile
   954                           
   955                           ;pwm.c: 204: 
   956  001458  86F0               	bsf	240,3,c	;volatile
   957                           
   958                           ;pwm.c: 207: 
   959  00145A  92F2               	bcf	242,1,c	;volatile
   960                           
   961                           ;pwm.c: 208:     while(1){
   962  00145C  88F2               	bsf	242,4,c	;volatile
   963                           
   964                           ;pwm.c: 209: 
   965  00145E  8EF2               	bsf	242,7,c	;volatile
   966                           
   967                           ;pwm.c: 210:         if(PORTCbits.RC0 == 1 && flag_MENSURAR == 0){
   968  001460  8CF1               	bsf	241,6,c	;volatile
   969                           
   970                           ;pwm.c: 211:             _delay((unsigned long)((20)*(16000000/4000.0)));
   971  001462  9ED0               	bcf	208,7,c	;volatile
   972                           
   973                           ;pwm.c: 214:             sprintf(str, "%d", valor_display);
   974  001464  9481               	bcf	129,2,c	;volatile
   975                           
   976                           ;pwm.c: 215:             strcat(str, "\r\n");
   977  001466  9A81               	bcf	129,5,c	;volatile
   978                           
   979                           ;pwm.c: 216:             UART_Print(str);
   980  001468  9C81               	bcf	129,6,c	;volatile
   981                           
   982                           ;pwm.c: 217:             flag_MENSURAR = 1;
   983  00146A  9E81               	bcf	129,7,c	;volatile
   984                           
   985                           ;pwm.c: 218:         }
   986  00146C  0E3F               	movlw	63
   987  00146E  6E83               	movwf	131,c	;volatile
   988                           
   989                           ;pwm.c: 220:         if(PORTCbits.RC2 == 1 && flag_MEDIR == 0){
   990  001470  0E80               	movlw	128
   991  001472  0101               	movlb	1	; () banked
   992  001474  6F00               	movwf	UART_Init@baud_rate& (0+255),b
   993  001476  0E25               	movlw	37
   994  001478  6F01               	movwf	(UART_Init@baud_rate+1)& (0+255),b
   995  00147A  0E00               	movlw	0
   996  00147C  6F02               	movwf	(UART_Init@baud_rate+2)& (0+255),b
   997  00147E  EC50  F00B         	call	_UART_Init	;wreg free
   998  001482                     l4086:
   999                           
  1000                           ;pwm.c: 225:             PORTBbits.RB2 = 0;
  1001  001482  A082               	btfss	130,0,c	;volatile
  1002  001484  D033               	goto	l4102
  1003  001486  0101               	movlb	1	; () banked
  1004  001488  5167               	movf	_flag_MENSURAR& (0+255),w,b
  1005  00148A  1168               	iorwf	(_flag_MENSURAR+1)& (0+255),w,b
  1006  00148C  A4D8               	btfss	status,2,c
  1007  00148E  D02E               	goto	l4102
  1008                           
  1009                           ; BSR set to: 1
  1010                           ;pwm.c: 226: 
  1011  001490  0E68               	movlw	104
  1012  001492  0101               	movlb	1	; () banked
  1013  001494  6F5C               	movwf	??_main& (0+255),b
  1014  001496  0EE4               	movlw	228
  1015  001498                     u4367:
  1016  001498  2EE8               	decfsz	wreg,f,c
  1017  00149A  D7FE               	bra	u4367
  1018  00149C  2F5C               	decfsz	??_main& (0+255),f,b
  1019  00149E  D7FC               	bra	u4367
  1020  0014A0  F000               	nop	
  1021                           
  1022                           ;pwm.c: 227:         }else if(PORTCbits.RC2 == 0){
  1023  0014A2  0E02               	movlw	2
  1024  0014A4  0101               	movlb	1	; () banked
  1025  0014A6  6F6E               	movwf	(_valor_display+1)& (0+255),b
  1026  0014A8  0E2B               	movlw	43
  1027  0014AA  6F6D               	movwf	_valor_display& (0+255),b
  1028                           
  1029                           ; BSR set to: 1
  1030                           ;pwm.c: 228:             flag_MEDIR = 0;;pwm.c: 229:         }
  1031  0014AC  0E5D               	movlw	low main@str
  1032  0014AE  6F4A               	movwf	sprintf@s& (0+255),b
  1033  0014B0  0E01               	movlw	high main@str
  1034  0014B2  6F4B               	movwf	(sprintf@s+1)& (0+255),b
  1035  0014B4  0E04               	movlw	low STR_1
  1036  0014B6  6F4C               	movwf	sprintf@fmt& (0+255),b
  1037  0014B8  C16D  F14D         	movff	_valor_display,?_sprintf+3
  1038  0014BC  C16E  F14E         	movff	_valor_display+1,?_sprintf+4
  1039  0014C0  EC59  F00F         	call	_sprintf	;wreg free
  1040                           
  1041                           ; BSR set to: 1
  1042                           ;pwm.c: 230: 
  1043  0014C4  0E5D               	movlw	low main@str
  1044  0014C6  0100               	movlb	0	; () banked
  1045  0014C8  6FB7               	movwf	strcat@dest& (0+255),b
  1046  0014CA  0E01               	movlw	high main@str
  1047  0014CC  6FB8               	movwf	(strcat@dest+1)& (0+255),b
  1048  0014CE  0E01               	movlw	low STR_2
  1049  0014D0  6FB9               	movwf	strcat@src& (0+255),b
  1050  0014D2  ECD9  F010         	call	_strcat	;wreg free
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;pwm.c: 231:         if(PORTCbits.RC1 == 1 && flag_TARA == 0){
  1054  0014D6  0E5D               	movlw	low main@str
  1055  0014D8  6FAD               	movwf	UART_Print@data& (0+255),b
  1056  0014DA  0E01               	movlw	high main@str
  1057  0014DC  6FAE               	movwf	(UART_Print@data+1)& (0+255),b
  1058  0014DE  ECC3  F00F         	call	_UART_Print	;wreg free
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;pwm.c: 232:             _delay((unsigned long)((20)*(16000000/4000.0)));
  1062  0014E2  0E00               	movlw	0
  1063  0014E4  0101               	movlb	1	; () banked
  1064  0014E6  6F68               	movwf	(_flag_MENSURAR+1)& (0+255),b
  1065  0014E8  0E01               	movlw	1
  1066  0014EA  6F67               	movwf	_flag_MENSURAR& (0+255),b
  1067  0014EC                     l4102:
  1068                           
  1069                           ;pwm.c: 235: 
  1070  0014EC  A482               	btfss	130,2,c	;volatile
  1071  0014EE  D01A               	goto	l151
  1072  0014F0  0101               	movlb	1	; () banked
  1073  0014F2  516B               	movf	_flag_MEDIR& (0+255),w,b
  1074  0014F4  116C               	iorwf	(_flag_MEDIR+1)& (0+255),w,b
  1075  0014F6  A4D8               	btfss	status,2,c
  1076  0014F8  D015               	goto	l151
  1077                           
  1078                           ; BSR set to: 1
  1079                           ;pwm.c: 236:         }
  1080  0014FA  0E68               	movlw	104
  1081  0014FC  0101               	movlb	1	; () banked
  1082  0014FE  6F5C               	movwf	??_main& (0+255),b
  1083  001500  0EE4               	movlw	228
  1084  001502                     u4377:
  1085  001502  2EE8               	decfsz	wreg,f,c
  1086  001504  D7FE               	bra	u4377
  1087  001506  2F5C               	decfsz	??_main& (0+255),f,b
  1088  001508  D7FC               	bra	u4377
  1089  00150A  F000               	nop	
  1090                           
  1091                           ;pwm.c: 237: 
  1092  00150C  0E00               	movlw	0
  1093  00150E  0101               	movlb	1	; () banked
  1094  001510  6F6C               	movwf	(_flag_MEDIR+1)& (0+255),b
  1095  001512  0E01               	movlw	1
  1096  001514  6F6B               	movwf	_flag_MEDIR& (0+255),b
  1097                           
  1098                           ; BSR set to: 1
  1099                           ;pwm.c: 238: 
  1100  001516  8481               	bsf	129,2,c	;volatile
  1101                           
  1102                           ; BSR set to: 1
  1103                           ;pwm.c: 239:     }
  1104  001518  0E0D               	movlw	13
  1105  00151A                     u4387:
  1106  00151A  2EE8               	decfsz	wreg,f,c
  1107  00151C  D7FE               	bra	u4387
  1108  00151E  F000               	nop	
  1109                           
  1110                           ;pwm.c: 240: }
  1111  001520  9481               	bcf	129,2,c	;volatile
  1112                           
  1113                           ;pwm.c: 242: void __attribute__((picinterrupt(("")))) isr(void){
  1114  001522  D007               	goto	l4118
  1115  001524                     l151:
  1116  001524  B482               	btfsc	130,2,c	;volatile
  1117  001526  D005               	goto	l4118
  1118                           
  1119                           ;pwm.c: 243: 
  1120  001528  0E00               	movlw	0
  1121  00152A  0101               	movlb	1	; () banked
  1122  00152C  6F6C               	movwf	(_flag_MEDIR+1)& (0+255),b
  1123  00152E  0E00               	movlw	0
  1124  001530  6F6B               	movwf	_flag_MEDIR& (0+255),b
  1125  001532                     l4118:
  1126                           
  1127                           ;pwm.c: 246:         if(medindo == 0 && PORTBbits.RB0 == 1){
  1128  001532  A282               	btfss	130,1,c	;volatile
  1129  001534  D7A6               	goto	l4086
  1130  001536  0101               	movlb	1	; () banked
  1131  001538  5169               	movf	_flag_TARA& (0+255),w,b
  1132  00153A  116A               	iorwf	(_flag_TARA+1)& (0+255),w,b
  1133  00153C  A4D8               	btfss	status,2,c
  1134  00153E  D7A1               	goto	l4086
  1135                           
  1136                           ; BSR set to: 1
  1137                           ;pwm.c: 247:             TMR1H = 0;
  1138  001540  0E68               	movlw	104
  1139  001542  0101               	movlb	1	; () banked
  1140  001544  6F5C               	movwf	??_main& (0+255),b
  1141  001546  0EE4               	movlw	228
  1142  001548                     u4397:
  1143  001548  2EE8               	decfsz	wreg,f,c
  1144  00154A  D7FE               	bra	u4397
  1145  00154C  2F5C               	decfsz	??_main& (0+255),f,b
  1146  00154E  D7FC               	bra	u4397
  1147  001550  F000               	nop	
  1148                           
  1149                           ;pwm.c: 248:             TMR1L = 0;
  1150  001552  0E00               	movlw	0
  1151  001554  0101               	movlb	1	; () banked
  1152  001556  6F6A               	movwf	(_flag_TARA+1)& (0+255),b
  1153  001558  0E01               	movlw	1
  1154  00155A  6F69               	movwf	_flag_TARA& (0+255),b
  1155                           
  1156                           ; BSR set to: 1
  1157                           ;pwm.c: 249:             TMR1ON = 1;
  1158  00155C  0E02               	movlw	2
  1159  00155E  6F6E               	movwf	(_valor_display+1)& (0+255),b
  1160  001560  0E9A               	movlw	154
  1161  001562  6F6D               	movwf	_valor_display& (0+255),b
  1162  001564  D78E               	goto	l4086
  1163  001566                     __end_of_main:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _strcat *****************
  1167 ;; Defined at:
  1168 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\strcat.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  dest            2   55[BANK0 ] PTR unsigned char 
  1171 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  1172 ;;  src             1   57[BANK0 ] PTR const unsigned char 
  1173 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  2   55[BANK0 ] PTR unsigned char 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 3F/0
  1182 ;;		On exit  : 3F/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1185 ;;      Params:         0       3       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0       0       0
  1188 ;;      Totals:         0       3       0       0       0       0       0
  1189 ;;Total ram usage:        3 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; Hardware stack levels required when called: 10
  1192 ;; This function calls:
  1193 ;;		_strcpy
  1194 ;;		_strlen
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text1
  1201  0021B2                     __ptext1:
  1202                           	callstack 0
  1203  0021B2                     _strcat:
  1204                           	callstack 20
  1205                           
  1206                           ; BSR set to: 0
  1207                           
  1208                           ; BSR set to: 1
  1209                           ;incstack = 0
  1210  0021B2  C0B7  F0AC         	movff	strcat@dest,strlen@s
  1211  0021B6  C0B8  F0AD         	movff	strcat@dest+1,strlen@s+1
  1212  0021BA  EC87  F010         	call	_strlen	;wreg free
  1213  0021BE  51AC               	movf	?_strlen& (0+255),w,b
  1214  0021C0  25B7               	addwf	strcat@dest& (0+255),w,b
  1215  0021C2  6FB0               	movwf	strcpy@dest& (0+255),b
  1216  0021C4  51AD               	movf	(?_strlen+1)& (0+255),w,b
  1217  0021C6  21B8               	addwfc	(strcat@dest+1)& (0+255),w,b
  1218  0021C8  6FB1               	movwf	(strcpy@dest+1)& (0+255),b
  1219  0021CA  C0B9  F0B2         	movff	strcat@src,strcpy@src
  1220  0021CE  EC20  F010         	call	_strcpy	;wreg free
  1221                           
  1222                           ; BSR set to: 0
  1223  0021D2  0012               	return		;funcret
  1224  0021D4                     __end_of_strcat:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _strcpy *****************
  1228 ;; Defined at:
  1229 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\strcpy.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  dest            2   48[BANK0 ] PTR unsigned char 
  1232 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  1233 ;;  src             1   50[BANK0 ] PTR const unsigned char 
  1234 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  d               2   52[BANK0 ] PTR unsigned char 
  1237 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  1238 ;;  s               1   54[BANK0 ] PTR const unsigned char 
  1239 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2   48[BANK0 ] PTR unsigned char 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1244 ;; Tracked objects:
  1245 ;;		On entry : 3F/0
  1246 ;;		On exit  : 3F/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1249 ;;      Params:         0       3       0       0       0       0       0
  1250 ;;      Locals:         0       3       0       0       0       0       0
  1251 ;;      Temps:          0       1       0       0       0       0       0
  1252 ;;      Totals:         0       7       0       0       0       0       0
  1253 ;;Total ram usage:        7 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 9
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_strcat
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text2
  1264  002040                     __ptext2:
  1265                           	callstack 0
  1266  002040                     _strcpy:
  1267                           	callstack 20
  1268                           
  1269                           ; BSR set to: 0
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;incstack = 0
  1273  002040  C0B2  F0B6         	movff	strcpy@src,strcpy@s
  1274  002044  C0B0  F0B4         	movff	strcpy@dest,strcpy@d
  1275  002048  C0B1  F0B5         	movff	strcpy@dest+1,strcpy@d+1
  1276  00204C                     l2558:
  1277                           
  1278                           ; BSR set to: 0
  1279  00204C  2BB6               	incf	strcpy@s& (0+255),f,b
  1280  00204E  05B6               	decf	strcpy@s& (0+255),w,b
  1281  002050  6FB3               	movwf	??_strcpy& (0+255),b
  1282  002052  C0B3  FFF6         	movff	??_strcpy,tblptrl
  1283  002056                     	if	1	;There is more than 1 active tblptr byte
  1284  002056  0E06               	movlw	high __smallconst
  1285  002058  6EF7               	movwf	tblptrh,c
  1286  00205A                     	endif
  1287  00205A                     	if	0	;tblptru may be non-zero
  1288  00205A                     	endif
  1289  00205A                     	if	0	;tblptru may be non-zero
  1290  00205A                     	endif
  1291  00205A  C0B4  FFD9         	movff	strcpy@d,fsr2l
  1292  00205E  C0B5  FFDA         	movff	strcpy@d+1,fsr2h
  1293  002062  4BB4               	infsnz	strcpy@d& (0+255),f,b
  1294  002064  2BB5               	incf	(strcpy@d+1)& (0+255),f,b
  1295  002066  0008               	tblrd		*
  1296  002068  CFF5 FFDF          	movff	tablat,indf2
  1297  00206C  50DF               	movf	indf2,w,c
  1298  00206E  B4D8               	btfsc	status,2,c
  1299  002070  0012               	return	
  1300  002072  D7EC               	goto	l2558
  1301  002074                     __end_of_strcpy:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _sprintf *****************
  1305 ;; Defined at:
  1306 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\nf_sprintf.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  s               2   74[BANK1 ] PTR unsigned char 
  1309 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  1310 ;;  fmt             1   76[BANK1 ] PTR const unsigned char 
  1311 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  f              11   81[BANK1 ] struct _IO_FILE
  1314 ;;  ap              2   79[BANK1 ] PTR void [1]
  1315 ;;		 -> ?_sprintf(2), 
  1316 ;;  ret             2    0        int 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  2   74[BANK1 ] int 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 3F/1
  1323 ;;		On exit  : 3F/1
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1326 ;;      Params:         0       0       5       0       0       0       0
  1327 ;;      Locals:         0       0      13       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0
  1329 ;;      Totals:         0       0      18       0       0       0       0
  1330 ;;Total ram usage:       18 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 16
  1333 ;; This function calls:
  1334 ;;		_vfprintf
  1335 ;; This function is called by:
  1336 ;;		_main
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text3
  1341  001EB2                     __ptext3:
  1342                           	callstack 0
  1343  001EB2                     _sprintf:
  1344                           	callstack 14
  1345                           
  1346                           ; BSR set to: 1
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;incstack = 0
  1350  001EB2  0E4D               	movlw	low (?_sprintf+3)
  1351  001EB4  6F4F               	movwf	sprintf@ap& (0+255),b
  1352  001EB6  0E01               	movlw	high (?_sprintf+3)
  1353  001EB8  6F50               	movwf	(sprintf@ap+1)& (0+255),b
  1354  001EBA  C14A  F151         	movff	sprintf@s,sprintf@f
  1355  001EBE  C14B  F152         	movff	sprintf@s+1,sprintf@f+1
  1356                           
  1357                           ; BSR set to: 1
  1358  001EC2  0E00               	movlw	0
  1359  001EC4  6F55               	movwf	(sprintf@f+4)& (0+255),b
  1360  001EC6  0E00               	movlw	0
  1361  001EC8  6F54               	movwf	(sprintf@f+3)& (0+255),b
  1362                           
  1363                           ; BSR set to: 1
  1364  001ECA  0E00               	movlw	0
  1365  001ECC  6F5B               	movwf	(sprintf@f+10)& (0+255),b
  1366  001ECE  0E00               	movlw	0
  1367  001ED0  6F5A               	movwf	(sprintf@f+9)& (0+255),b
  1368                           
  1369                           ; BSR set to: 1
  1370  001ED2  0E51               	movlw	low sprintf@f
  1371  001ED4  6F44               	movwf	vfprintf@fp& (0+255),b
  1372  001ED6  0E01               	movlw	high sprintf@f
  1373  001ED8  6F45               	movwf	(vfprintf@fp+1)& (0+255),b
  1374  001EDA  C14C  F146         	movff	sprintf@fmt,vfprintf@fmt
  1375  001EDE  0E4F               	movlw	low sprintf@ap
  1376  001EE0  6F47               	movwf	vfprintf@ap& (0+255),b
  1377  001EE2  0E01               	movlw	high sprintf@ap
  1378  001EE4  6F48               	movwf	(vfprintf@ap+1)& (0+255),b
  1379  001EE6  EC32  F00F         	call	_vfprintf	;wreg free
  1380                           
  1381                           ; BSR set to: 1
  1382  001EEA  5154               	movf	(sprintf@f+3)& (0+255),w,b
  1383  001EEC  254A               	addwf	sprintf@s& (0+255),w,b
  1384  001EEE  6ED9               	movwf	fsr2l,c
  1385  001EF0  5155               	movf	(sprintf@f+4)& (0+255),w,b
  1386  001EF2  214B               	addwfc	(sprintf@s+1)& (0+255),w,b
  1387  001EF4  6EDA               	movwf	fsr2h,c
  1388  001EF6  0E00               	movlw	0
  1389  001EF8  6EDF               	movwf	indf2,c
  1390                           
  1391                           ; BSR set to: 1
  1392  001EFA  0012               	return		;funcret
  1393  001EFC                     __end_of_sprintf:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _vfprintf *****************
  1397 ;; Defined at:
  1398 ;;		line 1390 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  fp              2   68[BANK1 ] PTR struct _IO_FILE
  1401 ;;		 -> sprintf@f(11), 
  1402 ;;  fmt             1   70[BANK1 ] PTR const unsigned char 
  1403 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  1404 ;;  ap              2   71[BANK1 ] PTR PTR void 
  1405 ;;		 -> sprintf@ap(2), 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  cfmt            1   73[BANK1 ] PTR unsigned char 
  1408 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  2   68[BANK1 ] int 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 3F/1
  1415 ;;		On exit  : 3F/1
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1418 ;;      Params:         0       0       5       0       0       0       0
  1419 ;;      Locals:         0       0       1       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0
  1421 ;;      Totals:         0       0       6       0       0       0       0
  1422 ;;Total ram usage:        6 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 15
  1425 ;; This function calls:
  1426 ;;		_vfpfcnvrt
  1427 ;; This function is called by:
  1428 ;;		_sprintf
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text4
  1433  001E64                     __ptext4:
  1434                           	callstack 0
  1435  001E64                     _vfprintf:
  1436                           	callstack 14
  1437                           
  1438                           ; BSR set to: 1
  1439                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FILE *fp, const char *fmt,
      +                           va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 1391: {;D:\MPLAB\pic\sources\c99\
      +                          common\doprnt.c: 1393:     char *cfmt;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1395:  
      +                             cfmt = (char *)fmt;
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;incstack = 0
  1443  001E64  C146  F149         	movff	vfprintf@fmt,vfprintf@cfmt
  1444                           
  1445                           ; BSR set to: 1
  1446                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
  1447  001E68  0E00               	movlw	0
  1448  001E6A  6F66               	movwf	(_nout+1)& (0+255),b
  1449  001E6C  0E00               	movlw	0
  1450  001E6E  6F65               	movwf	_nout& (0+255),b
  1451                           
  1452                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt) {
  1453  001E70  D012               	goto	l4006
  1454  001E72                     l4004:
  1455                           
  1456                           ; BSR set to: 1
  1457                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1398:         nout += vfpfcnvrt(fp, &cfmt, ap
      +                          );
  1458  001E72  C144  F134         	movff	vfprintf@fp,vfpfcnvrt@fp
  1459  001E76  C145  F135         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1460  001E7A  0E49               	movlw	low vfprintf@cfmt
  1461  001E7C  6F36               	movwf	vfpfcnvrt@fmt& (0+255),b
  1462  001E7E  0E01               	movlw	high vfprintf@cfmt
  1463  001E80  6F37               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1464  001E82  C147  F138         	movff	vfprintf@ap,vfpfcnvrt@ap
  1465  001E86  C148  F139         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1466  001E8A  EC48  F007         	call	_vfpfcnvrt	;wreg free
  1467  001E8E  5134               	movf	?_vfpfcnvrt& (0+255),w,b
  1468  001E90  2765               	addwf	_nout& (0+255),f,b
  1469  001E92  5135               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1470  001E94  2366               	addwfc	(_nout+1)& (0+255),f,b
  1471  001E96                     l4006:
  1472                           
  1473                           ; BSR set to: 1
  1474                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt) {
  1475  001E96  C149  FFF6         	movff	vfprintf@cfmt,tblptrl
  1476  001E9A                     	if	1	;There is more than 1 active tblptr byte
  1477  001E9A  0E06               	movlw	high __smallconst
  1478  001E9C  6EF7               	movwf	tblptrh,c
  1479  001E9E                     	endif
  1480  001E9E                     	if	0	;tblptru may be non-zero
  1481  001E9E                     	endif
  1482  001E9E                     	if	0	;tblptru may be non-zero
  1483  001E9E                     	endif
  1484  001E9E  0008               	tblrd		*
  1485  001EA0  50F5               	movf	tablat,w,c
  1486  001EA2  0900               	iorlw	0
  1487  001EA4  A4D8               	btfss	status,2,c
  1488  001EA6  D7E5               	goto	l4004
  1489                           
  1490                           ; BSR set to: 1
  1491                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1400:     return nout;
  1492  001EA8  C165  F144         	movff	_nout,?_vfprintf
  1493  001EAC  C166  F145         	movff	_nout+1,?_vfprintf+1
  1494                           
  1495                           ; BSR set to: 1
  1496  001EB0  0012               	return		;funcret
  1497  001EB2                     __end_of_vfprintf:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _vfpfcnvrt *****************
  1501 ;; Defined at:
  1502 ;;		line 692 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  fp              2   52[BANK1 ] PTR struct _IO_FILE
  1505 ;;		 -> sprintf@f(11), 
  1506 ;;  fmt             2   54[BANK1 ] PTR PTR unsigned char 
  1507 ;;		 -> vfprintf@cfmt(1), 
  1508 ;;  ap              2   56[BANK1 ] PTR PTR void 
  1509 ;;		 -> sprintf@ap(2), 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  ll              8   60[BANK1 ] long long 
  1512 ;;  llu             8    0        unsigned long long 
  1513 ;;  f               4    0        unsigned long long 
  1514 ;;  vp              3    0        PTR void 
  1515 ;;  ct              3    0        unsigned char [3]
  1516 ;;  cp              3    0        PTR unsigned char 
  1517 ;;  i               2    0        int 
  1518 ;;  done            2    0        int 
  1519 ;;  c               1    0        unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2   52[BANK1 ] int 
  1522 ;; Registers used:
  1523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 3F/1
  1526 ;;		On exit  : 3F/1
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1529 ;;      Params:         0       0       6       0       0       0       0
  1530 ;;      Locals:         0       0       8       0       0       0       0
  1531 ;;      Temps:          0       0       2       0       0       0       0
  1532 ;;      Totals:         0       0      16       0       0       0       0
  1533 ;;Total ram usage:       16 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 14
  1536 ;; This function calls:
  1537 ;;		_dtoa
  1538 ;;		_fputc
  1539 ;; This function is called by:
  1540 ;;		_vfprintf
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text5
  1545  000E90                     __ptext5:
  1546                           	callstack 0
  1547  000E90                     _vfpfcnvrt:
  1548                           	callstack 14
  1549                           
  1550                           ; BSR set to: 1
  1551                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 692: static int vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 693: {;D:\MPLAB\pic\sources\c9
      +                          9\common\doprnt.c: 694:     char c, *cp, ct[3];;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 695:     int done, i;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 696:     long long ll;
      +                          ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;;D:\MPLAB\pic
      +                          \sources\c99\common\doprnt.c: 698:     long double f;;D:\MPLAB\pic\sources\c99\common\do
      +                          prnt.c: 699:     void *vp;
  1552                           
  1553                           ; BSR set to: 1
  1554                           ;incstack = 0
  1555  000E90  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1556  000E94  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1557  000E98  CFDF FFF6          	movff	indf2,tblptrl
  1558  000E9C                     	if	1	;There is more than 1 active tblptr byte
  1559  000E9C  0E06               	movlw	high __smallconst
  1560  000E9E  6EF7               	movwf	tblptrh,c
  1561  000EA0                     	endif
  1562  000EA0                     	if	0	;tblptru may be non-zero
  1563  000EA0                     	endif
  1564  000EA0                     	if	0	;tblptru may be non-zero
  1565  000EA0                     	endif
  1566  000EA0  0008               	tblrd		*
  1567  000EA2  50F5               	movf	tablat,w,c
  1568  000EA4  0A25               	xorlw	37
  1569  000EA6  A4D8               	btfss	status,2,c
  1570  000EA8  D095               	goto	l3948
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  1574  000EAA  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1575  000EAE  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1576  000EB2  2ADF               	incf	indf2,f,c
  1577                           
  1578                           ; BSR set to: 1
  1579                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 705:         flags = width = 0;
  1580  000EB4  0E00               	movlw	0
  1581  000EB6  0100               	movlb	0	; () banked
  1582  000EB8  6FBF               	movwf	(_width+1)& (0+255),b
  1583  000EBA  0E00               	movlw	0
  1584  000EBC  6FBE               	movwf	_width& (0+255),b
  1585  000EBE  C0BE  F0C2         	movff	_width,_flags
  1586  000EC2  C0BF  F0C3         	movff	_width+1,_flags+1
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 706:         prec = -1;
  1590  000EC6  69C0               	setf	_prec& (0+255),b
  1591  000EC8  69C1               	setf	(_prec+1)& (0+255),b
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 847:         if ((*fmt[0] == 'd') || (*fmt[0]
      +                           == 'i')) {
  1595  000ECA  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1596  000ECE  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1597  000ED2  CFDF FFF6          	movff	indf2,tblptrl
  1598  000ED6                     	if	1	;There is more than 1 active tblptr byte
  1599  000ED6  0E06               	movlw	high __smallconst
  1600  000ED8  6EF7               	movwf	tblptrh,c
  1601  000EDA                     	endif
  1602  000EDA                     	if	0	;tblptru may be non-zero
  1603  000EDA                     	endif
  1604  000EDA                     	if	0	;tblptru may be non-zero
  1605  000EDA                     	endif
  1606  000EDA  0008               	tblrd		*
  1607  000EDC  50F5               	movf	tablat,w,c
  1608  000EDE  0A64               	xorlw	100
  1609  000EE0  B4D8               	btfsc	status,2,c
  1610  000EE2  D00D               	goto	u4050
  1611                           
  1612                           ; BSR set to: 0
  1613  000EE4  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1614  000EE8  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1615  000EEC  CFDF FFF6          	movff	indf2,tblptrl
  1616  000EF0                     	if	1	;There is more than 1 active tblptr byte
  1617  000EF0  0E06               	movlw	high __smallconst
  1618  000EF2  6EF7               	movwf	tblptrh,c
  1619  000EF4                     	endif
  1620  000EF4                     	if	0	;tblptru may be non-zero
  1621  000EF4                     	endif
  1622  000EF4                     	if	0	;tblptru may be non-zero
  1623  000EF4                     	endif
  1624  000EF4  0008               	tblrd		*
  1625  000EF6  50F5               	movf	tablat,w,c
  1626  000EF8  0A69               	xorlw	105
  1627  000EFA  A4D8               	btfss	status,2,c
  1628  000EFC  D03E               	goto	l3932
  1629  000EFE                     u4050:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 849:             ++*fmt;
  1633  000EFE  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1634  000F02  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1635  000F06  2ADF               	incf	indf2,f,c
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 850:             ll = (long long)(*(int *)__v
      +                          a_arg(*(int **)ap, (int)0));
  1639  000F08  C138  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1640  000F0C  C139  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1641  000F10  CFDF F13A          	movff	indf2,??_vfpfcnvrt
  1642  000F14  0E02               	movlw	2
  1643  000F16  26DE               	addwf	postinc2,f,c
  1644  000F18  CFDF F13B          	movff	indf2,??_vfpfcnvrt+1
  1645  000F1C  0E00               	movlw	0
  1646  000F1E  22DD               	addwfc	postdec2,f,c
  1647  000F20  C13A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1648  000F24  C13B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1649  000F28  CFDE F13C          	movff	postinc2,vfpfcnvrt@ll
  1650  000F2C  CFDD F13D          	movff	postdec2,vfpfcnvrt@ll+1
  1651  000F30  0101               	movlb	1	; () banked
  1652  000F32  0E00               	movlw	0
  1653  000F34  BF3D               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1654  000F36  0EFF               	movlw	-1
  1655  000F38  6F3E               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1656  000F3A  6F3F               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1657  000F3C  6F40               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1658  000F3E  6F41               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1659  000F40  6F42               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1660  000F42  6F43               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 852:             return dtoa(fp, ll);
  1664  000F44  C134  F110         	movff	vfpfcnvrt@fp,dtoa@fp
  1665  000F48  C135  F111         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1666  000F4C  C13C  F112         	movff	vfpfcnvrt@ll,dtoa@d
  1667  000F50  C13D  F113         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1668  000F54  C13E  F114         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1669  000F58  C13F  F115         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1670  000F5C  C140  F116         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1671  000F60  C141  F117         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1672  000F64  C142  F118         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1673  000F68  C143  F119         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1674  000F6C  ECF7  F004         	call	_dtoa	;wreg free
  1675  000F70  C110  F134         	movff	?_dtoa,?_vfpfcnvrt
  1676  000F74  C111  F135         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1677  000F78  0012               	return	
  1678  000F7A                     l3932:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1372:         if ((*fmt)[0] == '%') {
  1682  000F7A  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1683  000F7E  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1684  000F82  CFDF FFF6          	movff	indf2,tblptrl
  1685  000F86                     	if	1	;There is more than 1 active tblptr byte
  1686  000F86  0E06               	movlw	high __smallconst
  1687  000F88  6EF7               	movwf	tblptrh,c
  1688  000F8A                     	endif
  1689  000F8A                     	if	0	;tblptru may be non-zero
  1690  000F8A                     	endif
  1691  000F8A                     	if	0	;tblptru may be non-zero
  1692  000F8A                     	endif
  1693  000F8A  0008               	tblrd		*
  1694  000F8C  50F5               	movf	tablat,w,c
  1695  000F8E  0A25               	xorlw	37
  1696  000F90  A4D8               	btfss	status,2,c
  1697  000F92  D015               	goto	l3942
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1373:             ++*fmt;
  1701  000F94  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1702  000F98  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1703  000F9C  2ADF               	incf	indf2,f,c
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1374:             fputc((int)'%', fp);
  1707  000F9E  0E00               	movlw	0
  1708  000FA0  6FAD               	movwf	(fputc@c+1)& (0+255),b
  1709  000FA2  0E25               	movlw	37
  1710  000FA4  6FAC               	movwf	fputc@c& (0+255),b
  1711  000FA6  C134  F0AE         	movff	vfpfcnvrt@fp,fputc@fp
  1712  000FAA  C135  F0AF         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1713  000FAE  ECA3  F00D         	call	_fputc	;wreg free
  1714  000FB2                     l3938:
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1375:             return 1;
  1718  000FB2  0E00               	movlw	0
  1719  000FB4  0101               	movlb	1	; () banked
  1720  000FB6  6F35               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1721  000FB8  0E01               	movlw	1
  1722  000FBA  6F34               	movwf	?_vfpfcnvrt& (0+255),b
  1723  000FBC  0012               	return	
  1724  000FBE                     l3942:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  1728  000FBE  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1729  000FC2  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1730  000FC6  2ADF               	incf	indf2,f,c
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1380:         return 0;
  1734  000FC8  0E00               	movlw	0
  1735  000FCA  0101               	movlb	1	; () banked
  1736  000FCC  6F35               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1737  000FCE  0E00               	movlw	0
  1738  000FD0  6F34               	movwf	?_vfpfcnvrt& (0+255),b
  1739  000FD2  0012               	return	
  1740  000FD4                     l3948:
  1741                           
  1742                           ; BSR set to: 1
  1743                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(*fmt)[0], fp);
  1744  000FD4  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1745  000FD8  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1746  000FDC  CFDF FFF6          	movff	indf2,tblptrl
  1747  000FE0                     	if	1	;There is more than 1 active tblptr byte
  1748  000FE0  0E06               	movlw	high __smallconst
  1749  000FE2  6EF7               	movwf	tblptrh,c
  1750  000FE4                     	endif
  1751  000FE4                     	if	0	;tblptru may be non-zero
  1752  000FE4                     	endif
  1753  000FE4                     	if	0	;tblptru may be non-zero
  1754  000FE4                     	endif
  1755  000FE4  0008               	tblrd		*
  1756  000FE6  50F5               	movf	tablat,w,c
  1757  000FE8  0100               	movlb	0	; () banked
  1758  000FEA  6FAC               	movwf	fputc@c& (0+255),b
  1759  000FEC  6BAD               	clrf	(fputc@c+1)& (0+255),b
  1760  000FEE  C134  F0AE         	movff	vfpfcnvrt@fp,fputc@fp
  1761  000FF2  C135  F0AF         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1762  000FF6  ECA3  F00D         	call	_fputc	;wreg free
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1766  000FFA  C136  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1767  000FFE  C137  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1768  001002  2ADF               	incf	indf2,f,c
  1769  001004  D7D6               	goto	l3938
  1770  001006                     __end_of_vfpfcnvrt:
  1771                           	callstack 0
  1772                           
  1773 ;; *************** function _dtoa *****************
  1774 ;; Defined at:
  1775 ;;		line 287 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  fp              2   16[BANK1 ] PTR struct _IO_FILE
  1778 ;;		 -> sprintf@f(11), 
  1779 ;;  d               8   18[BANK1 ] long long 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  n               8   42[BANK1 ] long long 
  1782 ;;  i               2   50[BANK1 ] int 
  1783 ;;  s               2   40[BANK1 ] int 
  1784 ;;  w               2   38[BANK1 ] int 
  1785 ;;  p               2   36[BANK1 ] int 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2   16[BANK1 ] int 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 3F/1
  1792 ;;		On exit  : 3F/1
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1795 ;;      Params:         0       0      10       0       0       0       0
  1796 ;;      Locals:         0       0      18       0       0       0       0
  1797 ;;      Temps:          0       0       8       0       0       0       0
  1798 ;;      Totals:         0       0      36       0       0       0       0
  1799 ;;Total ram usage:       36 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 13
  1802 ;; This function calls:
  1803 ;;		___aodiv
  1804 ;;		___aomod
  1805 ;;		_abs
  1806 ;;		_pad
  1807 ;; This function is called by:
  1808 ;;		_vfpfcnvrt
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text6
  1813  0009EE                     __ptext6:
  1814                           	callstack 0
  1815  0009EE                     _dtoa:
  1816                           	callstack 14
  1817                           
  1818                           ; BSR set to: 1
  1819                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 287: static int dtoa(FILE *fp, long long d);D
      +                          :\MPLAB\pic\sources\c99\common\doprnt.c: 288: {;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 289:     int i, p, s, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 290:     long long 
      +                          n;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 293:     n = d;
  1820                           
  1821                           ; BSR set to: 1
  1822                           ;incstack = 0
  1823  0009EE  C112  F12A         	movff	dtoa@d,dtoa@n
  1824  0009F2  C113  F12B         	movff	dtoa@d+1,dtoa@n+1
  1825  0009F6  C114  F12C         	movff	dtoa@d+2,dtoa@n+2
  1826  0009FA  C115  F12D         	movff	dtoa@d+3,dtoa@n+3
  1827  0009FE  C116  F12E         	movff	dtoa@d+4,dtoa@n+4
  1828  000A02  C117  F12F         	movff	dtoa@d+5,dtoa@n+5
  1829  000A06  C118  F130         	movff	dtoa@d+6,dtoa@n+6
  1830  000A0A  C119  F131         	movff	dtoa@d+7,dtoa@n+7
  1831                           
  1832                           ; BSR set to: 1
  1833                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 294:     s = n < 0 ? 1 : 0;
  1834  000A0E  AF31               	btfss	(dtoa@n+7)& (0+255),7,b
  1835  000A10  D002               	goto	u3290
  1836  000A12  0E01               	movlw	1
  1837  000A14  D001               	goto	u3300
  1838  000A16                     u3290:
  1839  000A16  0E00               	movlw	0
  1840  000A18                     u3300:
  1841  000A18  6F28               	movwf	dtoa@s& (0+255),b
  1842  000A1A  6B29               	clrf	(dtoa@s+1)& (0+255),b
  1843                           
  1844                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1845  000A1C  5128               	movf	dtoa@s& (0+255),w,b
  1846  000A1E  1129               	iorwf	(dtoa@s+1)& (0+255),w,b
  1847  000A20  B4D8               	btfsc	status,2,c
  1848  000A22  D010               	goto	l3326
  1849                           
  1850                           ; BSR set to: 1
  1851                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 296:         n = -n;
  1852  000A24  1F31               	comf	(dtoa@n+7)& (0+255),f,b
  1853  000A26  1F30               	comf	(dtoa@n+6)& (0+255),f,b
  1854  000A28  1F2F               	comf	(dtoa@n+5)& (0+255),f,b
  1855  000A2A  1F2E               	comf	(dtoa@n+4)& (0+255),f,b
  1856  000A2C  1F2D               	comf	(dtoa@n+3)& (0+255),f,b
  1857  000A2E  1F2C               	comf	(dtoa@n+2)& (0+255),f,b
  1858  000A30  1F2B               	comf	(dtoa@n+1)& (0+255),f,b
  1859  000A32  6D2A               	negf	dtoa@n& (0+255),b
  1860  000A34  0E00               	movlw	0
  1861  000A36  232B               	addwfc	(dtoa@n+1)& (0+255),f,b
  1862  000A38  232C               	addwfc	(dtoa@n+2)& (0+255),f,b
  1863  000A3A  232D               	addwfc	(dtoa@n+3)& (0+255),f,b
  1864  000A3C  232E               	addwfc	(dtoa@n+4)& (0+255),f,b
  1865  000A3E  232F               	addwfc	(dtoa@n+5)& (0+255),f,b
  1866  000A40  2330               	addwfc	(dtoa@n+6)& (0+255),f,b
  1867  000A42  2331               	addwfc	(dtoa@n+7)& (0+255),f,b
  1868  000A44                     l3326:
  1869                           
  1870                           ; BSR set to: 1
  1871                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 300:     if (!(prec < 0)) {
  1872  000A44  0100               	movlb	0	; () banked
  1873  000A46  AFC1               	btfss	(_prec+1)& (0+255),7,b
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 301:         flags &= ~(1 << 1);
  1877  000A48  93C2               	bcf	_flags& (0+255),1,b
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 303:     p = (0 < prec) ? prec : 1;
  1881  000A4A  BFC1               	btfsc	(_prec+1)& (0+255),7,b
  1882  000A4C  D005               	goto	u3330
  1883  000A4E  51C1               	movf	(_prec+1)& (0+255),w,b
  1884  000A50  E109               	bnz	l903
  1885  000A52  05C0               	decf	_prec& (0+255),w,b
  1886  000A54  B0D8               	btfsc	status,0,c
  1887  000A56  D006               	goto	l903
  1888  000A58                     u3330:
  1889                           
  1890                           ; BSR set to: 0
  1891  000A58  0E00               	movlw	0
  1892  000A5A  0101               	movlb	1	; () banked
  1893  000A5C  6F25               	movwf	(dtoa@p+1)& (0+255),b
  1894  000A5E  0E01               	movlw	1
  1895  000A60  6F24               	movwf	dtoa@p& (0+255),b
  1896  000A62  D004               	goto	l905
  1897  000A64                     l903:
  1898                           
  1899                           ; BSR set to: 0
  1900  000A64  C0C0  F124         	movff	_prec,dtoa@p
  1901  000A68  C0C1  F125         	movff	_prec+1,dtoa@p+1
  1902  000A6C                     l905:
  1903                           
  1904                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 304:     w = width;
  1905  000A6C  C0BE  F126         	movff	_width,dtoa@w
  1906  000A70  C0BF  F127         	movff	_width+1,dtoa@w+1
  1907                           
  1908                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 305:     if (s || (flags & (1 << 2))) {
  1909  000A74  0101               	movlb	1	; () banked
  1910  000A76  5128               	movf	dtoa@s& (0+255),w,b
  1911  000A78  1129               	iorwf	(dtoa@s+1)& (0+255),w,b
  1912  000A7A  A4D8               	btfss	status,2,c
  1913  000A7C  D003               	goto	u3350
  1914                           
  1915                           ; BSR set to: 1
  1916  000A7E  0100               	movlb	0	; () banked
  1917  000A80  A5C2               	btfss	_flags& (0+255),2,b
  1918  000A82  D004               	goto	l3340
  1919  000A84                     u3350:
  1920                           
  1921                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 306:         --w;
  1922  000A84  0101               	movlb	1	; () banked
  1923  000A86  0726               	decf	dtoa@w& (0+255),f,b
  1924  000A88  A0D8               	btfss	status,0,c
  1925  000A8A  0727               	decf	(dtoa@w+1)& (0+255),f,b
  1926  000A8C                     l3340:
  1927                           
  1928                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 310:     i = sizeof(dbuf) - 1;
  1929  000A8C  0E00               	movlw	0
  1930  000A8E  0101               	movlb	1	; () banked
  1931  000A90  6F33               	movwf	(dtoa@i+1)& (0+255),b
  1932  000A92  0E1F               	movlw	31
  1933  000A94  6F32               	movwf	dtoa@i& (0+255),b
  1934                           
  1935                           ; BSR set to: 1
  1936                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] = '\0';
  1937  000A96  0E00               	movlw	0
  1938  000A98  6F8E               	movwf	(_dbuf+31)& (0+255),b
  1939                           
  1940                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  1941  000A9A  D07E               	goto	l3354
  1942  000A9C                     l3344:
  1943                           
  1944                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 313:         --i;
  1945  000A9C  0101               	movlb	1	; () banked
  1946  000A9E  0732               	decf	dtoa@i& (0+255),f,b
  1947  000AA0  A0D8               	btfss	status,0,c
  1948  000AA2  0733               	decf	(dtoa@i+1)& (0+255),f,b
  1949                           
  1950                           ; BSR set to: 1
  1951                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 314:         dbuf[i] = (char)((int)'0' + abs(
      +                          n % 10));
  1952  000AA4  0E6F               	movlw	low _dbuf
  1953  000AA6  2532               	addwf	dtoa@i& (0+255),w,b
  1954  000AA8  6ED9               	movwf	fsr2l,c
  1955  000AAA  0E01               	movlw	high _dbuf
  1956  000AAC  2133               	addwfc	(dtoa@i+1)& (0+255),w,b
  1957  000AAE  6EDA               	movwf	fsr2h,c
  1958  000AB0  C12A  F100         	movff	dtoa@n,___aomod@dividend
  1959  000AB4  C12B  F101         	movff	dtoa@n+1,___aomod@dividend+1
  1960  000AB8  C12C  F102         	movff	dtoa@n+2,___aomod@dividend+2
  1961  000ABC  C12D  F103         	movff	dtoa@n+3,___aomod@dividend+3
  1962  000AC0  C12E  F104         	movff	dtoa@n+4,___aomod@dividend+4
  1963  000AC4  C12F  F105         	movff	dtoa@n+5,___aomod@dividend+5
  1964  000AC8  C130  F106         	movff	dtoa@n+6,___aomod@dividend+6
  1965  000ACC  C131  F107         	movff	dtoa@n+7,___aomod@dividend+7
  1966  000AD0  0E0A               	movlw	10
  1967  000AD2  6F08               	movwf	___aomod@divisor& (0+255),b
  1968  000AD4  0E00               	movlw	0
  1969  000AD6  6F09               	movwf	(___aomod@divisor+1)& (0+255),b
  1970  000AD8  0E00               	movlw	0
  1971  000ADA  6F0A               	movwf	(___aomod@divisor+2)& (0+255),b
  1972  000ADC  0E00               	movlw	0
  1973  000ADE  6F0B               	movwf	(___aomod@divisor+3)& (0+255),b
  1974  000AE0  0E00               	movlw	0
  1975  000AE2  6F0C               	movwf	(___aomod@divisor+4)& (0+255),b
  1976  000AE4  0E00               	movlw	0
  1977  000AE6  6F0D               	movwf	(___aomod@divisor+5)& (0+255),b
  1978  000AE8  0E00               	movlw	0
  1979  000AEA  6F0E               	movwf	(___aomod@divisor+6)& (0+255),b
  1980  000AEC  0E00               	movlw	0
  1981  000AEE  6F0F               	movwf	(___aomod@divisor+7)& (0+255),b
  1982  000AF0  ECB3  F00A         	call	___aomod	;wreg free
  1983  000AF4  C100  F11A         	movff	?___aomod,??_dtoa
  1984  000AF8  C101  F11B         	movff	?___aomod+1,??_dtoa+1
  1985  000AFC  C102  F11C         	movff	?___aomod+2,??_dtoa+2
  1986  000B00  C103  F11D         	movff	?___aomod+3,??_dtoa+3
  1987  000B04  C104  F11E         	movff	?___aomod+4,??_dtoa+4
  1988  000B08  C105  F11F         	movff	?___aomod+5,??_dtoa+5
  1989  000B0C  C106  F120         	movff	?___aomod+6,??_dtoa+6
  1990  000B10  C107  F121         	movff	?___aomod+7,??_dtoa+7
  1991  000B14  C11A  F0AE         	movff	??_dtoa,abs@a
  1992  000B18  C11C  F0AF         	movff	??_dtoa+2,abs@a+1
  1993  000B1C  EC3A  F010         	call	_abs	;wreg free
  1994  000B20  51AE               	movf	?_abs& (0+255),w,b
  1995  000B22  0F30               	addlw	48
  1996  000B24  6EDF               	movwf	indf2,c
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 315:         --p;
  2000  000B26  0101               	movlb	1	; () banked
  2001  000B28  0724               	decf	dtoa@p& (0+255),f,b
  2002  000B2A  A0D8               	btfss	status,0,c
  2003  000B2C  0725               	decf	(dtoa@p+1)& (0+255),f,b
  2004                           
  2005                           ; BSR set to: 1
  2006                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 316:         --w;
  2007  000B2E  0726               	decf	dtoa@w& (0+255),f,b
  2008  000B30  A0D8               	btfss	status,0,c
  2009  000B32  0727               	decf	(dtoa@w+1)& (0+255),f,b
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 317:         n = n / 10;
  2013  000B34  C12A  F100         	movff	dtoa@n,___aodiv@dividend
  2014  000B38  C12B  F101         	movff	dtoa@n+1,___aodiv@dividend+1
  2015  000B3C  C12C  F102         	movff	dtoa@n+2,___aodiv@dividend+2
  2016  000B40  C12D  F103         	movff	dtoa@n+3,___aodiv@dividend+3
  2017  000B44  C12E  F104         	movff	dtoa@n+4,___aodiv@dividend+4
  2018  000B48  C12F  F105         	movff	dtoa@n+5,___aodiv@dividend+5
  2019  000B4C  C130  F106         	movff	dtoa@n+6,___aodiv@dividend+6
  2020  000B50  C131  F107         	movff	dtoa@n+7,___aodiv@dividend+7
  2021  000B54  0E0A               	movlw	10
  2022  000B56  6F08               	movwf	___aodiv@divisor& (0+255),b
  2023  000B58  0E00               	movlw	0
  2024  000B5A  6F09               	movwf	(___aodiv@divisor+1)& (0+255),b
  2025  000B5C  0E00               	movlw	0
  2026  000B5E  6F0A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2027  000B60  0E00               	movlw	0
  2028  000B62  6F0B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2029  000B64  0E00               	movlw	0
  2030  000B66  6F0C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2031  000B68  0E00               	movlw	0
  2032  000B6A  6F0D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2033  000B6C  0E00               	movlw	0
  2034  000B6E  6F0E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2035  000B70  0E00               	movlw	0
  2036  000B72  6F0F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2037  000B74  ECBA  F008         	call	___aodiv	;wreg free
  2038  000B78  C100  F12A         	movff	?___aodiv,dtoa@n
  2039  000B7C  C101  F12B         	movff	?___aodiv+1,dtoa@n+1
  2040  000B80  C102  F12C         	movff	?___aodiv+2,dtoa@n+2
  2041  000B84  C103  F12D         	movff	?___aodiv+3,dtoa@n+3
  2042  000B88  C104  F12E         	movff	?___aodiv+4,dtoa@n+4
  2043  000B8C  C105  F12F         	movff	?___aodiv+5,dtoa@n+5
  2044  000B90  C106  F130         	movff	?___aodiv+6,dtoa@n+6
  2045  000B94  C107  F131         	movff	?___aodiv+7,dtoa@n+7
  2046  000B98                     l3354:
  2047                           
  2048                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  2049  000B98  0101               	movlb	1	; () banked
  2050  000B9A  BF33               	btfsc	(dtoa@i+1)& (0+255),7,b
  2051  000B9C  D020               	goto	u3400
  2052  000B9E  5133               	movf	(dtoa@i+1)& (0+255),w,b
  2053  000BA0  E103               	bnz	u3360
  2054  000BA2  0532               	decf	dtoa@i& (0+255),w,b
  2055  000BA4  A0D8               	btfss	status,0,c
  2056  000BA6  D01B               	goto	u3400
  2057  000BA8                     u3360:
  2058                           
  2059                           ; BSR set to: 1
  2060  000BA8  512A               	movf	dtoa@n& (0+255),w,b
  2061  000BAA  112B               	iorwf	(dtoa@n+1)& (0+255),w,b
  2062  000BAC  112C               	iorwf	(dtoa@n+2)& (0+255),w,b
  2063  000BAE  112D               	iorwf	(dtoa@n+3)& (0+255),w,b
  2064  000BB0  112E               	iorwf	(dtoa@n+4)& (0+255),w,b
  2065  000BB2  112F               	iorwf	(dtoa@n+5)& (0+255),w,b
  2066  000BB4  1130               	iorwf	(dtoa@n+6)& (0+255),w,b
  2067  000BB6  1131               	iorwf	(dtoa@n+7)& (0+255),w,b
  2068  000BB8  A4D8               	btfss	status,2,c
  2069  000BBA  D770               	goto	l3344
  2070                           
  2071                           ; BSR set to: 1
  2072  000BBC  BF25               	btfsc	(dtoa@p+1)& (0+255),7,b
  2073  000BBE  D005               	goto	u3380
  2074  000BC0  5125               	movf	(dtoa@p+1)& (0+255),w,b
  2075  000BC2  E102               	bnz	u3381
  2076  000BC4  0524               	decf	dtoa@p& (0+255),w,b
  2077  000BC6  B0D8               	btfsc	status,0,c
  2078  000BC8                     u3381:
  2079  000BC8  D769               	goto	l3344
  2080  000BCA                     u3380:
  2081                           
  2082                           ; BSR set to: 1
  2083  000BCA  BF27               	btfsc	(dtoa@w+1)& (0+255),7,b
  2084  000BCC  D008               	goto	u3400
  2085  000BCE  5127               	movf	(dtoa@w+1)& (0+255),w,b
  2086  000BD0  E103               	bnz	u3390
  2087  000BD2  0526               	decf	dtoa@w& (0+255),w,b
  2088  000BD4  A0D8               	btfss	status,0,c
  2089  000BD6  D003               	goto	u3400
  2090  000BD8                     u3390:
  2091                           
  2092                           ; BSR set to: 1
  2093  000BD8  0100               	movlb	0	; () banked
  2094  000BDA  B3C2               	btfsc	_flags& (0+255),1,b
  2095  000BDC  D75F               	goto	l3344
  2096  000BDE                     u3400:
  2097                           
  2098                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 321:     if (s || (flags & (1 << 2))) {
  2099  000BDE  0101               	movlb	1	; () banked
  2100  000BE0  5128               	movf	dtoa@s& (0+255),w,b
  2101  000BE2  1129               	iorwf	(dtoa@s+1)& (0+255),w,b
  2102  000BE4  A4D8               	btfss	status,2,c
  2103  000BE6  D003               	goto	u3420
  2104                           
  2105                           ; BSR set to: 1
  2106  000BE8  0100               	movlb	0	; () banked
  2107  000BEA  A5C2               	btfss	_flags& (0+255),2,b
  2108  000BEC  D018               	goto	l3378
  2109  000BEE                     u3420:
  2110                           
  2111                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 322:         --i;
  2112  000BEE  0101               	movlb	1	; () banked
  2113  000BF0  0732               	decf	dtoa@i& (0+255),f,b
  2114  000BF2  A0D8               	btfss	status,0,c
  2115  000BF4  0733               	decf	(dtoa@i+1)& (0+255),f,b
  2116                           
  2117                           ; BSR set to: 1
  2118                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 323:         dbuf[i] = s ? '-' : '+';
  2119  000BF6  5128               	movf	dtoa@s& (0+255),w,b
  2120  000BF8  1129               	iorwf	(dtoa@s+1)& (0+255),w,b
  2121  000BFA  A4D8               	btfss	status,2,c
  2122  000BFC  D004               	goto	l3374
  2123                           
  2124                           ; BSR set to: 1
  2125  000BFE  0E00               	movlw	0
  2126  000C00  6F23               	movwf	(_dtoa$1121+1)& (0+255),b
  2127  000C02  0E2B               	movlw	43
  2128  000C04  D003               	goto	L1
  2129  000C06                     l3374:
  2130                           
  2131                           ; BSR set to: 1
  2132  000C06  0E00               	movlw	0
  2133  000C08  6F23               	movwf	(_dtoa$1121+1)& (0+255),b
  2134  000C0A  0E2D               	movlw	45
  2135  000C0C                     L1:
  2136  000C0C  6F22               	movwf	_dtoa$1121& (0+255),b
  2137                           
  2138                           ; BSR set to: 1
  2139  000C0E  0E6F               	movlw	low _dbuf
  2140  000C10  2532               	addwf	dtoa@i& (0+255),w,b
  2141  000C12  6ED9               	movwf	fsr2l,c
  2142  000C14  0E01               	movlw	high _dbuf
  2143  000C16  2133               	addwfc	(dtoa@i+1)& (0+255),w,b
  2144  000C18  6EDA               	movwf	fsr2h,c
  2145  000C1A  C122  FFDF         	movff	_dtoa$1121,indf2
  2146  000C1E                     l3378:
  2147                           
  2148                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 327:     return pad(fp, &dbuf[i], w);
  2149  000C1E  C110  F103         	movff	dtoa@fp,pad@fp
  2150  000C22  C111  F104         	movff	dtoa@fp+1,pad@fp+1
  2151  000C26  0E6F               	movlw	low _dbuf
  2152  000C28  0101               	movlb	1	; () banked
  2153  000C2A  2532               	addwf	dtoa@i& (0+255),w,b
  2154  000C2C  6F05               	movwf	pad@buf& (0+255),b
  2155  000C2E  0E01               	movlw	high _dbuf
  2156  000C30  2133               	addwfc	(dtoa@i+1)& (0+255),w,b
  2157  000C32  6F06               	movwf	(pad@buf+1)& (0+255),b
  2158  000C34  C126  F107         	movff	dtoa@w,pad@p
  2159  000C38  C127  F108         	movff	dtoa@w+1,pad@p+1
  2160  000C3C  EC4D  F00D         	call	_pad	;wreg free
  2161  000C40  C103  F110         	movff	?_pad,?_dtoa
  2162  000C44  C104  F111         	movff	?_pad+1,?_dtoa+1
  2163                           
  2164                           ; BSR set to: 1
  2165  000C48  0012               	return		;funcret
  2166  000C4A                     __end_of_dtoa:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function _pad *****************
  2170 ;; Defined at:
  2171 ;;		line 72 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  fp              2    3[BANK1 ] PTR struct _IO_FILE
  2174 ;;		 -> sprintf@f(11), 
  2175 ;;  buf             2    5[BANK1 ] PTR unsigned char 
  2176 ;;		 -> dbuf(32), 
  2177 ;;  p               2    7[BANK1 ] int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  w               2   11[BANK1 ] int 
  2180 ;;  i               2    9[BANK1 ] int 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  2    3[BANK1 ] int 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 3F/1
  2187 ;;		On exit  : 3F/1
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2190 ;;      Params:         0       0       6       0       0       0       0
  2191 ;;      Locals:         0       0       4       0       0       0       0
  2192 ;;      Temps:          0       1       0       0       0       0       0
  2193 ;;      Totals:         0       1      10       0       0       0       0
  2194 ;;Total ram usage:       11 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 12
  2197 ;; This function calls:
  2198 ;;		_fputc
  2199 ;;		_fputs
  2200 ;;		_strlen
  2201 ;; This function is called by:
  2202 ;;		_dtoa
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text7
  2207  001A9A                     __ptext7:
  2208                           	callstack 0
  2209  001A9A                     _pad:
  2210                           	callstack 14
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, char *buf, int p
      +                          );D:\MPLAB\pic\sources\c99\common\doprnt.c: 73: {;D:\MPLAB\pic\sources\c99\common\doprnt
      +                          .c: 74:     int i, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 <
      +                          < 0)) {
  2214                           
  2215                           ; BSR set to: 1
  2216                           ;incstack = 0
  2217  001A9A  0100               	movlb	0	; () banked
  2218  001A9C  A1C2               	btfss	_flags& (0+255),0,b
  2219  001A9E  D00A               	goto	l3192
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *)buf, fp);
  2223  001AA0  C105  F0B5         	movff	pad@buf,fputs@s
  2224  001AA4  C106  F0B6         	movff	pad@buf+1,fputs@s+1
  2225  001AA8  C103  F0B7         	movff	pad@fp,fputs@fp
  2226  001AAC  C104  F0B8         	movff	pad@fp+1,fputs@fp+1
  2227  001AB0  EC7E  F00F         	call	_fputs	;wreg free
  2228  001AB4                     l3192:
  2229                           
  2230                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
  2231  001AB4  0101               	movlb	1	; () banked
  2232  001AB6  BF08               	btfsc	(pad@p+1)& (0+255),7,b
  2233  001AB8  D005               	goto	l3196
  2234                           
  2235                           ; BSR set to: 1
  2236  001ABA  C107  F10B         	movff	pad@p,pad@w
  2237  001ABE  C108  F10C         	movff	pad@p+1,pad@w+1
  2238  001AC2  D004               	goto	l892
  2239  001AC4                     l3196:
  2240                           
  2241                           ; BSR set to: 1
  2242  001AC4  0E00               	movlw	0
  2243  001AC6  6F0C               	movwf	(pad@w+1)& (0+255),b
  2244  001AC8  0E00               	movlw	0
  2245  001ACA  6F0B               	movwf	pad@w& (0+255),b
  2246  001ACC                     l892:
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2250  001ACC  0E00               	movlw	0
  2251  001ACE  6F0A               	movwf	(pad@i+1)& (0+255),b
  2252  001AD0  0E00               	movlw	0
  2253  001AD2  6F09               	movwf	pad@i& (0+255),b
  2254                           
  2255                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  2256  001AD4  D00D               	goto	l3202
  2257  001AD6                     l3198:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
  2261  001AD6  0E00               	movlw	0
  2262  001AD8  6FAD               	movwf	(fputc@c+1)& (0+255),b
  2263  001ADA  0E20               	movlw	32
  2264  001ADC  6FAC               	movwf	fputc@c& (0+255),b
  2265  001ADE  C103  F0AE         	movff	pad@fp,fputc@fp
  2266  001AE2  C104  F0AF         	movff	pad@fp+1,fputc@fp+1
  2267  001AE6  ECA3  F00D         	call	_fputc	;wreg free
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2271  001AEA  0101               	movlb	1	; () banked
  2272  001AEC  4B09               	infsnz	pad@i& (0+255),f,b
  2273  001AEE  2B0A               	incf	(pad@i+1)& (0+255),f,b
  2274  001AF0                     l3202:
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  2278  001AF0  510B               	movf	pad@w& (0+255),w,b
  2279  001AF2  5D09               	subwf	pad@i& (0+255),w,b
  2280  001AF4  510A               	movf	(pad@i+1)& (0+255),w,b
  2281  001AF6  0A80               	xorlw	128
  2282  001AF8  0100               	movlb	0	; () banked
  2283  001AFA  6FB9               	movwf	??_pad& (0+255),b
  2284  001AFC  0101               	movlb	1	; () banked
  2285  001AFE  510C               	movf	(pad@w+1)& (0+255),w,b
  2286  001B00  0A80               	xorlw	128
  2287  001B02  0100               	movlb	0	; () banked
  2288  001B04  59B9               	subwfb	??_pad& (0+255),w,b
  2289  001B06  A0D8               	btfss	status,0,c
  2290  001B08  D7E6               	goto	l3198
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))) {
  2294  001B0A  B1C2               	btfsc	_flags& (0+255),0,b
  2295  001B0C  D00A               	goto	l3206
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *)buf, fp);
  2299  001B0E  C105  F0B5         	movff	pad@buf,fputs@s
  2300  001B12  C106  F0B6         	movff	pad@buf+1,fputs@s+1
  2301  001B16  C103  F0B7         	movff	pad@fp,fputs@fp
  2302  001B1A  C104  F0B8         	movff	pad@fp+1,fputs@fp+1
  2303  001B1E  EC7E  F00F         	call	_fputs	;wreg free
  2304  001B22                     l3206:
  2305                           
  2306                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 94:     return (int)(strlen(buf) + (size_t)w)
      +                          ;
  2307  001B22  C105  F0AC         	movff	pad@buf,strlen@s
  2308  001B26  C106  F0AD         	movff	pad@buf+1,strlen@s+1
  2309  001B2A  EC87  F010         	call	_strlen	;wreg free
  2310  001B2E  0101               	movlb	1	; () banked
  2311  001B30  510B               	movf	pad@w& (0+255),w,b
  2312  001B32  0100               	movlb	0	; () banked
  2313  001B34  25AC               	addwf	?_strlen& (0+255),w,b
  2314  001B36  0101               	movlb	1	; () banked
  2315  001B38  6F03               	movwf	?_pad& (0+255),b
  2316  001B3A  510C               	movf	(pad@w+1)& (0+255),w,b
  2317  001B3C  0100               	movlb	0	; () banked
  2318  001B3E  21AD               	addwfc	(?_strlen+1)& (0+255),w,b
  2319  001B40  0101               	movlb	1	; () banked
  2320  001B42  6F04               	movwf	(?_pad+1)& (0+255),b
  2321                           
  2322                           ; BSR set to: 1
  2323  001B44  0012               	return		;funcret
  2324  001B46                     __end_of_pad:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _strlen *****************
  2328 ;; Defined at:
  2329 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\strlen.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  s               2   44[BANK0 ] PTR const unsigned char 
  2332 ;;		 -> dbuf(32), isr@str_598(20), isr@str(20), main@str(8), 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  a               2   46[BANK0 ] PTR const unsigned char 
  2335 ;;		 -> dbuf(32), isr@str_598(20), isr@str(20), main@str(8), 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2   44[BANK0 ] unsigned int 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 3E/0
  2342 ;;		On exit  : 3F/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2345 ;;      Params:         0       2       0       0       0       0       0
  2346 ;;      Locals:         0       2       0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0
  2348 ;;      Totals:         0       4       0       0       0       0       0
  2349 ;;Total ram usage:        4 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 9
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_pad
  2356 ;;		_strcat
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text8
  2361  00210E                     __ptext8:
  2362                           	callstack 0
  2363  00210E                     _strlen:
  2364                           	callstack 20
  2365                           
  2366                           ; BSR set to: 1
  2367                           ;incstack = 0
  2368  00210E  C0AC  F0AE         	movff	strlen@s,strlen@a
  2369  002112  C0AD  F0AF         	movff	strlen@s+1,strlen@a+1
  2370  002116  D003               	goto	l3084
  2371  002118                     l3082:
  2372  002118  0100               	movlb	0	; () banked
  2373  00211A  4BAC               	infsnz	strlen@s& (0+255),f,b
  2374  00211C  2BAD               	incf	(strlen@s+1)& (0+255),f,b
  2375  00211E                     l3084:
  2376  00211E  C0AC  FFD9         	movff	strlen@s,fsr2l
  2377  002122  C0AD  FFDA         	movff	strlen@s+1,fsr2h
  2378  002126  50DF               	movf	indf2,w,c
  2379  002128  A4D8               	btfss	status,2,c
  2380  00212A  D7F6               	goto	l3082
  2381  00212C  0100               	movlb	0	; () banked
  2382  00212E  51AE               	movf	strlen@a& (0+255),w,b
  2383  002130  5DAC               	subwf	strlen@s& (0+255),w,b
  2384  002132  6FAC               	movwf	?_strlen& (0+255),b
  2385  002134  51AF               	movf	(strlen@a+1)& (0+255),w,b
  2386  002136  59AD               	subwfb	(strlen@s+1)& (0+255),w,b
  2387  002138  6FAD               	movwf	(?_strlen+1)& (0+255),b
  2388                           
  2389                           ; BSR set to: 0
  2390  00213A  0012               	return		;funcret
  2391  00213C                     __end_of_strlen:
  2392                           	callstack 0
  2393                           
  2394 ;; *************** function _fputs *****************
  2395 ;; Defined at:
  2396 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputs.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  2399 ;;		 -> dbuf(32), 
  2400 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  2401 ;;		 -> sprintf@f(11), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  i               2    1[BANK1 ] int 
  2404 ;;  c               1    0[BANK1 ] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2   53[BANK0 ] int 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 3F/0
  2411 ;;		On exit  : 3F/1
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         0       4       0       0       0       0       0
  2415 ;;      Locals:         0       0       3       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0
  2417 ;;      Totals:         0       4       3       0       0       0       0
  2418 ;;Total ram usage:        7 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 11
  2421 ;; This function calls:
  2422 ;;		_fputc
  2423 ;; This function is called by:
  2424 ;;		_pad
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text9
  2429  001EFC                     __ptext9:
  2430                           	callstack 0
  2431  001EFC                     _fputs:
  2432                           	callstack 14
  2433                           
  2434                           ; BSR set to: 0
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;incstack = 0
  2438  001EFC  0E00               	movlw	0
  2439  001EFE  0101               	movlb	1	; () banked
  2440  001F00  6F02               	movwf	(fputs@i+1)& (0+255),b
  2441  001F02  0E00               	movlw	0
  2442  001F04  6F01               	movwf	fputs@i& (0+255),b
  2443  001F06  D00D               	goto	l3078
  2444  001F08                     l3074:
  2445                           
  2446                           ; BSR set to: 1
  2447  001F08  C100  F0AC         	movff	fputs@c,fputc@c
  2448  001F0C  0100               	movlb	0	; () banked
  2449  001F0E  6BAD               	clrf	(fputc@c+1)& (0+255),b
  2450  001F10  C0B7  F0AE         	movff	fputs@fp,fputc@fp
  2451  001F14  C0B8  F0AF         	movff	fputs@fp+1,fputc@fp+1
  2452  001F18  ECA3  F00D         	call	_fputc	;wreg free
  2453                           
  2454                           ; BSR set to: 0
  2455  001F1C  0101               	movlb	1	; () banked
  2456  001F1E  4B01               	infsnz	fputs@i& (0+255),f,b
  2457  001F20  2B02               	incf	(fputs@i+1)& (0+255),f,b
  2458  001F22                     l3078:
  2459                           
  2460                           ; BSR set to: 1
  2461  001F22  5101               	movf	fputs@i& (0+255),w,b
  2462  001F24  0100               	movlb	0	; () banked
  2463  001F26  25B5               	addwf	fputs@s& (0+255),w,b
  2464  001F28  6ED9               	movwf	fsr2l,c
  2465  001F2A  0101               	movlb	1	; () banked
  2466  001F2C  5102               	movf	(fputs@i+1)& (0+255),w,b
  2467  001F2E  0100               	movlb	0	; () banked
  2468  001F30  21B6               	addwfc	(fputs@s+1)& (0+255),w,b
  2469  001F32  6EDA               	movwf	fsr2h,c
  2470  001F34  50DF               	movf	indf2,w,c
  2471  001F36  0101               	movlb	1	; () banked
  2472  001F38  6F00               	movwf	fputs@c& (0+255),b
  2473  001F3A  5100               	movf	fputs@c& (0+255),w,b
  2474  001F3C  B4D8               	btfsc	status,2,c
  2475  001F3E  0012               	return	
  2476  001F40  D7E3               	goto	l3074
  2477  001F42                     __end_of_fputs:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _fputc *****************
  2481 ;; Defined at:
  2482 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputc.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  c               2   44[BANK0 ] int 
  2485 ;;  fp              2   46[BANK0 ] PTR struct _IO_FILE
  2486 ;;		 -> sprintf@f(11), 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2   44[BANK0 ] int 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 3F/0
  2495 ;;		On exit  : 3F/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2498 ;;      Params:         0       4       0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0
  2500 ;;      Temps:          0       5       0       0       0       0       0
  2501 ;;      Totals:         0       9       0       0       0       0       0
  2502 ;;Total ram usage:        9 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 10
  2505 ;; This function calls:
  2506 ;;		_putch
  2507 ;; This function is called by:
  2508 ;;		_pad
  2509 ;;		_vfpfcnvrt
  2510 ;;		_fputs
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text10
  2515  001B46                     __ptext10:
  2516                           	callstack 0
  2517  001B46                     _fputc:
  2518                           	callstack 17
  2519                           
  2520                           ; BSR set to: 0
  2521                           
  2522                           ; BSR set to: 1
  2523                           ;incstack = 0
  2524  001B46  51AE               	movf	fputc@fp& (0+255),w,b
  2525  001B48  11AF               	iorwf	(fputc@fp+1)& (0+255),w,b
  2526  001B4A  B4D8               	btfsc	status,2,c
  2527  001B4C  D004               	goto	u2820
  2528                           
  2529                           ; BSR set to: 0
  2530  001B4E  51AE               	movf	fputc@fp& (0+255),w,b
  2531  001B50  11AF               	iorwf	(fputc@fp+1)& (0+255),w,b
  2532  001B52  A4D8               	btfss	status,2,c
  2533  001B54  D004               	goto	l3050
  2534  001B56                     u2820:
  2535                           
  2536                           ; BSR set to: 0
  2537  001B56  51AC               	movf	fputc@c& (0+255),w,b
  2538  001B58  EC07  F011         	call	_putch
  2539  001B5C  0012               	return	
  2540  001B5E                     l3050:
  2541                           
  2542                           ; BSR set to: 0
  2543  001B5E  EE20 F009          	lfsr	2,9
  2544  001B62  51AE               	movf	fputc@fp& (0+255),w,b
  2545  001B64  26D9               	addwf	fsr2l,f,c
  2546  001B66  51AF               	movf	(fputc@fp+1)& (0+255),w,b
  2547  001B68  22DA               	addwfc	fsr2h,f,c
  2548  001B6A  50DE               	movf	postinc2,w,c
  2549  001B6C  10DE               	iorwf	postinc2,w,c
  2550  001B6E  B4D8               	btfsc	status,2,c
  2551  001B70  D016               	goto	u2840
  2552                           
  2553                           ; BSR set to: 0
  2554  001B72  EE20 F009          	lfsr	2,9
  2555  001B76  51AE               	movf	fputc@fp& (0+255),w,b
  2556  001B78  26D9               	addwf	fsr2l,f,c
  2557  001B7A  51AF               	movf	(fputc@fp+1)& (0+255),w,b
  2558  001B7C  22DA               	addwfc	fsr2h,f,c
  2559  001B7E  EE10 F003          	lfsr	1,3
  2560  001B82  51AE               	movf	fputc@fp& (0+255),w,b
  2561  001B84  26E1               	addwf	fsr1l,f,c
  2562  001B86  51AF               	movf	(fputc@fp+1)& (0+255),w,b
  2563  001B88  22E2               	addwfc	fsr1h,f,c
  2564  001B8A  50DE               	movf	postinc2,w,c
  2565  001B8C  5CE6               	subwf	postinc1,w,c
  2566  001B8E  50E6               	movf	postinc1,w,c
  2567  001B90  0A80               	xorlw	128
  2568  001B92  6FB4               	movwf	(??_fputc+4)& (0+255),b
  2569  001B94  50DE               	movf	postinc2,w,c
  2570  001B96  0A80               	xorlw	128
  2571  001B98  59B4               	subwfb	(??_fputc+4)& (0+255),w,b
  2572  001B9A  B0D8               	btfsc	status,0,c
  2573  001B9C  0012               	return	
  2574  001B9E                     u2840:
  2575                           
  2576                           ; BSR set to: 0
  2577  001B9E  EE20 F003          	lfsr	2,3
  2578  001BA2  51AE               	movf	fputc@fp& (0+255),w,b
  2579  001BA4  26D9               	addwf	fsr2l,f,c
  2580  001BA6  51AF               	movf	(fputc@fp+1)& (0+255),w,b
  2581  001BA8  22DA               	addwfc	fsr2h,f,c
  2582  001BAA  CFDE F0B0          	movff	postinc2,??_fputc
  2583  001BAE  CFDD F0B1          	movff	postdec2,??_fputc+1
  2584  001BB2  C0AE  FFD9         	movff	fputc@fp,fsr2l
  2585  001BB6  C0AF  FFDA         	movff	fputc@fp+1,fsr2h
  2586  001BBA  CFDE F0B2          	movff	postinc2,??_fputc+2
  2587  001BBE  CFDD F0B3          	movff	postdec2,??_fputc+3
  2588  001BC2  51B0               	movf	??_fputc& (0+255),w,b
  2589  001BC4  25B2               	addwf	(??_fputc+2)& (0+255),w,b
  2590  001BC6  6ED9               	movwf	fsr2l,c
  2591  001BC8  51B1               	movf	(??_fputc+1)& (0+255),w,b
  2592  001BCA  21B3               	addwfc	(??_fputc+3)& (0+255),w,b
  2593  001BCC  6EDA               	movwf	fsr2h,c
  2594  001BCE  C0AC  FFDF         	movff	fputc@c,indf2
  2595  001BD2  EE20 F003          	lfsr	2,3
  2596  001BD6  51AE               	movf	fputc@fp& (0+255),w,b
  2597  001BD8  26D9               	addwf	fsr2l,f,c
  2598  001BDA  51AF               	movf	(fputc@fp+1)& (0+255),w,b
  2599  001BDC  22DA               	addwfc	fsr2h,f,c
  2600  001BDE  2ADE               	incf	postinc2,f,c
  2601  001BE0  0E00               	movlw	0
  2602  001BE2  22DD               	addwfc	postdec2,f,c
  2603                           
  2604                           ; BSR set to: 0
  2605  001BE4  0012               	return		;funcret
  2606  001BE6                     __end_of_fputc:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _putch *****************
  2610 ;; Defined at:
  2611 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\putch.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  c               1    wreg     unsigned char 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  c               1    0[COMRAM] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg
  2620 ;; Tracked objects:
  2621 ;;		On entry : 3F/0
  2622 ;;		On exit  : 3F/0
  2623 ;;		Unchanged: 3F/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2625 ;;      Params:         0       0       0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0
  2628 ;;      Totals:         0       0       0       0       0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 9
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_fputc
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text11
  2640  00220E                     __ptext11:
  2641                           	callstack 0
  2642  00220E                     _putch:
  2643                           	callstack 17
  2644                           
  2645                           ; BSR set to: 0
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;incstack = 0
  2649  00220E  0012               	return		;funcret
  2650  002210                     __end_of_putch:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _abs *****************
  2654 ;; Defined at:
  2655 ;;		line 1 in file "D:\MPLAB\pic\sources\c99\common\abs.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  a               2   46[BANK0 ] int 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2   46[BANK0 ] int 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 3E/1
  2666 ;;		On exit  : 3F/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2669 ;;      Params:         0       2       0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0
  2671 ;;      Temps:          0       2       0       0       0       0       0
  2672 ;;      Totals:         0       4       0       0       0       0       0
  2673 ;;Total ram usage:        4 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 9
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_dtoa
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text12
  2684  002074                     __ptext12:
  2685                           	callstack 0
  2686  002074                     _abs:
  2687                           	callstack 17
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;incstack = 0
  2691  002074  0100               	movlb	0	; () banked
  2692  002076  BFAF               	btfsc	(abs@a+1)& (0+255),7,b
  2693  002078  D005               	goto	u3100
  2694  00207A  51AF               	movf	(abs@a+1)& (0+255),w,b
  2695  00207C  E110               	bnz	l941
  2696  00207E  05AE               	decf	abs@a& (0+255),w,b
  2697  002080  B0D8               	btfsc	status,0,c
  2698  002082  D00D               	goto	l941
  2699  002084                     u3100:
  2700                           
  2701                           ; BSR set to: 0
  2702  002084  C0AE  F0B0         	movff	abs@a,??_abs
  2703  002088  C0AF  F0B1         	movff	abs@a+1,??_abs+1
  2704  00208C  1FB0               	comf	??_abs& (0+255),f,b
  2705  00208E  1FB1               	comf	(??_abs+1)& (0+255),f,b
  2706  002090  4BB0               	infsnz	??_abs& (0+255),f,b
  2707  002092  2BB1               	incf	(??_abs+1)& (0+255),f,b
  2708  002094  C0B0  F0AE         	movff	??_abs,?_abs
  2709  002098  C0B1  F0AF         	movff	??_abs+1,?_abs+1
  2710  00209C  0012               	return	
  2711  00209E                     l941:
  2712                           
  2713                           ; BSR set to: 0
  2714  00209E  C0AE  F0AE         	movff	abs@a,?_abs
  2715  0020A2  C0AF  F0AF         	movff	abs@a+1,?_abs+1
  2716                           
  2717                           ; BSR set to: 0
  2718  0020A6  0012               	return		;funcret
  2719  0020A8                     __end_of_abs:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function ___aomod *****************
  2723 ;; Defined at:
  2724 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aomod.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  dividend        8    0[BANK1 ] long long 
  2727 ;;  divisor         8    8[BANK1 ] long long 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  sign            1   45[BANK0 ] unsigned char 
  2730 ;;  counter         1   44[BANK0 ] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  8    0[BANK1 ] long long 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 3F/1
  2737 ;;		On exit  : 3E/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2740 ;;      Params:         0       0      16       0       0       0       0
  2741 ;;      Locals:         0       2       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0
  2743 ;;      Totals:         0       2      16       0       0       0       0
  2744 ;;Total ram usage:       18 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 9
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_dtoa
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text13
  2755  001566                     __ptext13:
  2756                           	callstack 0
  2757  001566                     ___aomod:
  2758                           	callstack 17
  2759                           
  2760                           ; BSR set to: 1
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;incstack = 0
  2764  001566  0E00               	movlw	0
  2765  001568  0100               	movlb	0	; () banked
  2766  00156A  6FAD               	movwf	___aomod@sign& (0+255),b
  2767                           
  2768                           ; BSR set to: 0
  2769  00156C  0101               	movlb	1	; () banked
  2770  00156E  AF07               	btfss	(___aomod@dividend+7)& (0+255),7,b
  2771  001570  D013               	goto	l3160
  2772                           
  2773                           ; BSR set to: 1
  2774  001572  1F07               	comf	(___aomod@dividend+7)& (0+255),f,b
  2775  001574  1F06               	comf	(___aomod@dividend+6)& (0+255),f,b
  2776  001576  1F05               	comf	(___aomod@dividend+5)& (0+255),f,b
  2777  001578  1F04               	comf	(___aomod@dividend+4)& (0+255),f,b
  2778  00157A  1F03               	comf	(___aomod@dividend+3)& (0+255),f,b
  2779  00157C  1F02               	comf	(___aomod@dividend+2)& (0+255),f,b
  2780  00157E  1F01               	comf	(___aomod@dividend+1)& (0+255),f,b
  2781  001580  6D00               	negf	___aomod@dividend& (0+255),b
  2782  001582  0E00               	movlw	0
  2783  001584  2301               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2784  001586  2302               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2785  001588  2303               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2786  00158A  2304               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2787  00158C  2305               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2788  00158E  2306               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2789  001590  2307               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2790                           
  2791                           ; BSR set to: 1
  2792  001592  0E01               	movlw	1
  2793  001594  0100               	movlb	0	; () banked
  2794  001596  6FAD               	movwf	___aomod@sign& (0+255),b
  2795  001598                     l3160:
  2796  001598  0101               	movlb	1	; () banked
  2797  00159A  AF0F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2798  00159C  D010               	goto	l3164
  2799                           
  2800                           ; BSR set to: 1
  2801  00159E  1F0F               	comf	(___aomod@divisor+7)& (0+255),f,b
  2802  0015A0  1F0E               	comf	(___aomod@divisor+6)& (0+255),f,b
  2803  0015A2  1F0D               	comf	(___aomod@divisor+5)& (0+255),f,b
  2804  0015A4  1F0C               	comf	(___aomod@divisor+4)& (0+255),f,b
  2805  0015A6  1F0B               	comf	(___aomod@divisor+3)& (0+255),f,b
  2806  0015A8  1F0A               	comf	(___aomod@divisor+2)& (0+255),f,b
  2807  0015AA  1F09               	comf	(___aomod@divisor+1)& (0+255),f,b
  2808  0015AC  6D08               	negf	___aomod@divisor& (0+255),b
  2809  0015AE  0E00               	movlw	0
  2810  0015B0  2309               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2811  0015B2  230A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2812  0015B4  230B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2813  0015B6  230C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2814  0015B8  230D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2815  0015BA  230E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2816  0015BC  230F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2817  0015BE                     l3164:
  2818                           
  2819                           ; BSR set to: 1
  2820  0015BE  5108               	movf	___aomod@divisor& (0+255),w,b
  2821  0015C0  1109               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2822  0015C2  110A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2823  0015C4  110B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2824  0015C6  110C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2825  0015C8  110D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2826  0015CA  110E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2827  0015CC  110F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2828  0015CE  B4D8               	btfsc	status,2,c
  2829  0015D0  D041               	goto	l3180
  2830                           
  2831                           ; BSR set to: 1
  2832  0015D2  0E01               	movlw	1
  2833  0015D4  0100               	movlb	0	; () banked
  2834  0015D6  6FAC               	movwf	___aomod@counter& (0+255),b
  2835  0015D8  D00B               	goto	l3170
  2836  0015DA                     l3168:
  2837                           
  2838                           ; BSR set to: 1
  2839  0015DA  90D8               	bcf	status,0,c
  2840  0015DC  3708               	rlcf	___aomod@divisor& (0+255),f,b
  2841  0015DE  3709               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2842  0015E0  370A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2843  0015E2  370B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2844  0015E4  370C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2845  0015E6  370D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2846  0015E8  370E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2847  0015EA  370F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2848  0015EC  0100               	movlb	0	; () banked
  2849  0015EE  2BAC               	incf	___aomod@counter& (0+255),f,b
  2850  0015F0                     l3170:
  2851                           
  2852                           ; BSR set to: 0
  2853  0015F0  0101               	movlb	1	; () banked
  2854  0015F2  AF0F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2855  0015F4  D7F2               	goto	l3168
  2856  0015F6                     u3030:
  2857  0015F6  0101               	movlb	1	; () banked
  2858  0015F8  5108               	movf	___aomod@divisor& (0+255),w,b
  2859  0015FA  5D00               	subwf	___aomod@dividend& (0+255),w,b
  2860  0015FC  5109               	movf	(___aomod@divisor+1)& (0+255),w,b
  2861  0015FE  5901               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2862  001600  510A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2863  001602  5902               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2864  001604  510B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2865  001606  5903               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2866  001608  510C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2867  00160A  5904               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2868  00160C  510D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2869  00160E  5905               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2870  001610  510E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2871  001612  5906               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2872  001614  510F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2873  001616  5907               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2874  001618  A0D8               	btfss	status,0,c
  2875  00161A  D010               	goto	l3176
  2876                           
  2877                           ; BSR set to: 1
  2878  00161C  5108               	movf	___aomod@divisor& (0+255),w,b
  2879  00161E  5F00               	subwf	___aomod@dividend& (0+255),f,b
  2880  001620  5109               	movf	(___aomod@divisor+1)& (0+255),w,b
  2881  001622  5B01               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2882  001624  510A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2883  001626  5B02               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2884  001628  510B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2885  00162A  5B03               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2886  00162C  510C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2887  00162E  5B04               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2888  001630  510D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2889  001632  5B05               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2890  001634  510E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2891  001636  5B06               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2892  001638  510F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2893  00163A  5B07               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2894  00163C                     l3176:
  2895                           
  2896                           ; BSR set to: 1
  2897  00163C  90D8               	bcf	status,0,c
  2898  00163E  330F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2899  001640  330E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2900  001642  330D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2901  001644  330C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2902  001646  330B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2903  001648  330A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2904  00164A  3309               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2905  00164C  3308               	rrcf	___aomod@divisor& (0+255),f,b
  2906                           
  2907                           ; BSR set to: 1
  2908  00164E  0100               	movlb	0	; () banked
  2909  001650  2FAC               	decfsz	___aomod@counter& (0+255),f,b
  2910  001652  D7D1               	goto	u3030
  2911  001654                     l3180:
  2912  001654  0100               	movlb	0	; () banked
  2913  001656  51AD               	movf	___aomod@sign& (0+255),w,b
  2914  001658  B4D8               	btfsc	status,2,c
  2915  00165A  D011               	goto	l3184
  2916                           
  2917                           ; BSR set to: 0
  2918  00165C  0101               	movlb	1	; () banked
  2919  00165E  1F07               	comf	(___aomod@dividend+7)& (0+255),f,b
  2920  001660  1F06               	comf	(___aomod@dividend+6)& (0+255),f,b
  2921  001662  1F05               	comf	(___aomod@dividend+5)& (0+255),f,b
  2922  001664  1F04               	comf	(___aomod@dividend+4)& (0+255),f,b
  2923  001666  1F03               	comf	(___aomod@dividend+3)& (0+255),f,b
  2924  001668  1F02               	comf	(___aomod@dividend+2)& (0+255),f,b
  2925  00166A  1F01               	comf	(___aomod@dividend+1)& (0+255),f,b
  2926  00166C  6D00               	negf	___aomod@dividend& (0+255),b
  2927  00166E  0E00               	movlw	0
  2928  001670  2301               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2929  001672  2302               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2930  001674  2303               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2931  001676  2304               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2932  001678  2305               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2933  00167A  2306               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2934  00167C  2307               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2935  00167E                     l3184:
  2936  00167E  C100  F100         	movff	___aomod@dividend,?___aomod
  2937  001682  C101  F101         	movff	___aomod@dividend+1,?___aomod+1
  2938  001686  C102  F102         	movff	___aomod@dividend+2,?___aomod+2
  2939  00168A  C103  F103         	movff	___aomod@dividend+3,?___aomod+3
  2940  00168E  C104  F104         	movff	___aomod@dividend+4,?___aomod+4
  2941  001692  C105  F105         	movff	___aomod@dividend+5,?___aomod+5
  2942  001696  C106  F106         	movff	___aomod@dividend+6,?___aomod+6
  2943  00169A  C107  F107         	movff	___aomod@dividend+7,?___aomod+7
  2944  00169E  0012               	return		;funcret
  2945  0016A0                     __end_of___aomod:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function ___aodiv *****************
  2949 ;; Defined at:
  2950 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aodiv.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  dividend        8    0[BANK1 ] long long 
  2953 ;;  divisor         8    8[BANK1 ] long long 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  quotient        8   46[BANK0 ] long long 
  2956 ;;  sign            1   45[BANK0 ] unsigned char 
  2957 ;;  counter         1   44[BANK0 ] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  8    0[BANK1 ] long long 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2962 ;; Tracked objects:
  2963 ;;		On entry : 3F/1
  2964 ;;		On exit  : 3F/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2967 ;;      Params:         0       0      16       0       0       0       0
  2968 ;;      Locals:         0      10       0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0
  2970 ;;      Totals:         0      10      16       0       0       0       0
  2971 ;;Total ram usage:       26 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 9
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_dtoa
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text14
  2982  001174                     __ptext14:
  2983                           	callstack 0
  2984  001174                     ___aodiv:
  2985                           	callstack 17
  2986                           
  2987                           ; BSR set to: 1
  2988                           
  2989                           ;incstack = 0
  2990  001174  0E00               	movlw	0
  2991  001176  0100               	movlb	0	; () banked
  2992  001178  6FAD               	movwf	___aodiv@sign& (0+255),b
  2993                           
  2994                           ; BSR set to: 0
  2995  00117A  0101               	movlb	1	; () banked
  2996  00117C  AF0F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2997  00117E  D013               	goto	l3116
  2998                           
  2999                           ; BSR set to: 1
  3000  001180  1F0F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3001  001182  1F0E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3002  001184  1F0D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3003  001186  1F0C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3004  001188  1F0B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3005  00118A  1F0A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3006  00118C  1F09               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3007  00118E  6D08               	negf	___aodiv@divisor& (0+255),b
  3008  001190  0E00               	movlw	0
  3009  001192  2309               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3010  001194  230A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3011  001196  230B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3012  001198  230C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3013  00119A  230D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3014  00119C  230E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3015  00119E  230F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3016                           
  3017                           ; BSR set to: 1
  3018  0011A0  0E01               	movlw	1
  3019  0011A2  0100               	movlb	0	; () banked
  3020  0011A4  6FAD               	movwf	___aodiv@sign& (0+255),b
  3021  0011A6                     l3116:
  3022  0011A6  0101               	movlb	1	; () banked
  3023  0011A8  AF07               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3024  0011AA  D013               	goto	l3122
  3025                           
  3026                           ; BSR set to: 1
  3027  0011AC  1F07               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3028  0011AE  1F06               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3029  0011B0  1F05               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3030  0011B2  1F04               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3031  0011B4  1F03               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3032  0011B6  1F02               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3033  0011B8  1F01               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3034  0011BA  6D00               	negf	___aodiv@dividend& (0+255),b
  3035  0011BC  0E00               	movlw	0
  3036  0011BE  2301               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3037  0011C0  2302               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3038  0011C2  2303               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3039  0011C4  2304               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3040  0011C6  2305               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3041  0011C8  2306               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3042  0011CA  2307               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3043                           
  3044                           ; BSR set to: 1
  3045  0011CC  0E01               	movlw	1
  3046  0011CE  0100               	movlb	0	; () banked
  3047  0011D0  1BAD               	xorwf	___aodiv@sign& (0+255),f,b
  3048  0011D2                     l3122:
  3049  0011D2  EE20  F0AE         	lfsr	2,___aodiv@quotient
  3050  0011D6  0E07               	movlw	7
  3051  0011D8                     u2951:
  3052  0011D8  6ADE               	clrf	postinc2,c
  3053  0011DA  06E8               	decf	wreg,f,c
  3054  0011DC  E2FD               	bc	u2951
  3055  0011DE  0101               	movlb	1	; () banked
  3056  0011E0  5108               	movf	___aodiv@divisor& (0+255),w,b
  3057  0011E2  1109               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3058  0011E4  110A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3059  0011E6  110B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3060  0011E8  110C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3061  0011EA  110D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3062  0011EC  110E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3063  0011EE  110F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3064  0011F0  B4D8               	btfsc	status,2,c
  3065  0011F2  D04E               	goto	l3144
  3066                           
  3067                           ; BSR set to: 1
  3068  0011F4  0E01               	movlw	1
  3069  0011F6  0100               	movlb	0	; () banked
  3070  0011F8  6FAC               	movwf	___aodiv@counter& (0+255),b
  3071  0011FA  D00B               	goto	l3130
  3072  0011FC                     l3128:
  3073                           
  3074                           ; BSR set to: 1
  3075  0011FC  90D8               	bcf	status,0,c
  3076  0011FE  3708               	rlcf	___aodiv@divisor& (0+255),f,b
  3077  001200  3709               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3078  001202  370A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3079  001204  370B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3080  001206  370C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3081  001208  370D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3082  00120A  370E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3083  00120C  370F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3084  00120E  0100               	movlb	0	; () banked
  3085  001210  2BAC               	incf	___aodiv@counter& (0+255),f,b
  3086  001212                     l3130:
  3087                           
  3088                           ; BSR set to: 0
  3089  001212  0101               	movlb	1	; () banked
  3090  001214  AF0F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3091  001216  D7F2               	goto	l3128
  3092  001218                     u2970:
  3093  001218  0100               	movlb	0	; () banked
  3094  00121A  90D8               	bcf	status,0,c
  3095  00121C  37AE               	rlcf	___aodiv@quotient& (0+255),f,b
  3096  00121E  37AF               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3097  001220  37B0               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3098  001222  37B1               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3099  001224  37B2               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3100  001226  37B3               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3101  001228  37B4               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3102  00122A  37B5               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3103                           
  3104                           ; BSR set to: 0
  3105  00122C  0101               	movlb	1	; () banked
  3106  00122E  5108               	movf	___aodiv@divisor& (0+255),w,b
  3107  001230  5D00               	subwf	___aodiv@dividend& (0+255),w,b
  3108  001232  5109               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3109  001234  5901               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3110  001236  510A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3111  001238  5902               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3112  00123A  510B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3113  00123C  5903               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3114  00123E  510C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3115  001240  5904               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3116  001242  510D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3117  001244  5905               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3118  001246  510E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3119  001248  5906               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3120  00124A  510F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3121  00124C  5907               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3122  00124E  A0D8               	btfss	status,0,c
  3123  001250  D012               	goto	l3140
  3124                           
  3125                           ; BSR set to: 1
  3126  001252  5108               	movf	___aodiv@divisor& (0+255),w,b
  3127  001254  5F00               	subwf	___aodiv@dividend& (0+255),f,b
  3128  001256  5109               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3129  001258  5B01               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3130  00125A  510A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3131  00125C  5B02               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3132  00125E  510B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3133  001260  5B03               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3134  001262  510C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3135  001264  5B04               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3136  001266  510D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3137  001268  5B05               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3138  00126A  510E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3139  00126C  5B06               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3140  00126E  510F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3141  001270  5B07               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3142                           
  3143                           ; BSR set to: 1
  3144  001272  0100               	movlb	0	; () banked
  3145  001274  81AE               	bsf	___aodiv@quotient& (0+255),0,b
  3146  001276                     l3140:
  3147  001276  0101               	movlb	1	; () banked
  3148  001278  90D8               	bcf	status,0,c
  3149  00127A  330F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3150  00127C  330E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3151  00127E  330D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3152  001280  330C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3153  001282  330B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3154  001284  330A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3155  001286  3309               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3156  001288  3308               	rrcf	___aodiv@divisor& (0+255),f,b
  3157                           
  3158                           ; BSR set to: 1
  3159  00128A  0100               	movlb	0	; () banked
  3160  00128C  2FAC               	decfsz	___aodiv@counter& (0+255),f,b
  3161  00128E  D7C4               	goto	u2970
  3162  001290                     l3144:
  3163  001290  0100               	movlb	0	; () banked
  3164  001292  51AD               	movf	___aodiv@sign& (0+255),w,b
  3165  001294  B4D8               	btfsc	status,2,c
  3166  001296  D010               	goto	l3148
  3167                           
  3168                           ; BSR set to: 0
  3169  001298  1FB5               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3170  00129A  1FB4               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3171  00129C  1FB3               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3172  00129E  1FB2               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3173  0012A0  1FB1               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3174  0012A2  1FB0               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3175  0012A4  1FAF               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3176  0012A6  6DAE               	negf	___aodiv@quotient& (0+255),b
  3177  0012A8  0E00               	movlw	0
  3178  0012AA  23AF               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3179  0012AC  23B0               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3180  0012AE  23B1               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3181  0012B0  23B2               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3182  0012B2  23B3               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3183  0012B4  23B4               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3184  0012B6  23B5               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3185  0012B8                     l3148:
  3186                           
  3187                           ; BSR set to: 0
  3188  0012B8  C0AE  F100         	movff	___aodiv@quotient,?___aodiv
  3189  0012BC  C0AF  F101         	movff	___aodiv@quotient+1,?___aodiv+1
  3190  0012C0  C0B0  F102         	movff	___aodiv@quotient+2,?___aodiv+2
  3191  0012C4  C0B1  F103         	movff	___aodiv@quotient+3,?___aodiv+3
  3192  0012C8  C0B2  F104         	movff	___aodiv@quotient+4,?___aodiv+4
  3193  0012CC  C0B3  F105         	movff	___aodiv@quotient+5,?___aodiv+5
  3194  0012D0  C0B4  F106         	movff	___aodiv@quotient+6,?___aodiv+6
  3195  0012D4  C0B5  F107         	movff	___aodiv@quotient+7,?___aodiv+7
  3196                           
  3197                           ; BSR set to: 0
  3198  0012D8  0012               	return		;funcret
  3199  0012DA                     __end_of___aodiv:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _UART_Print *****************
  3203 ;; Defined at:
  3204 ;;		line 81 in file "pwm.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  data            2   45[BANK0 ] PTR const unsigned char 
  3207 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  i               3   47[BANK0 ] unsigned um
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 3F/0
  3216 ;;		On exit  : 3F/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3219 ;;      Params:         0       2       0       0       0       0       0
  3220 ;;      Locals:         0       3       0       0       0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0
  3222 ;;      Totals:         0       5       0       0       0       0       0
  3223 ;;Total ram usage:        5 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 10
  3226 ;; This function calls:
  3227 ;;		_UART_PutC
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text15
  3234  001F86                     __ptext15:
  3235                           	callstack 0
  3236  001F86                     _UART_Print:
  3237                           	callstack 20
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;pwm.c: 81:             correspondencia = 0b00000110;;pwm.c: 82:         break;;pwm.c: 8
      +                          3: 
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;incstack = 0
  3244  001F86  0E00               	movlw	0
  3245  001F88  6FAF               	movwf	UART_Print@i& (0+255),b
  3246  001F8A  0E00               	movlw	0
  3247  001F8C  6FB0               	movwf	(UART_Print@i+1)& (0+255),b
  3248  001F8E  0E00               	movlw	0
  3249  001F90  6FB1               	movwf	(UART_Print@i+2)& (0+255),b
  3250                           
  3251                           ;pwm.c: 84:         case 2:
  3252  001F92  D010               	goto	l2600
  3253  001F94                     l2596:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;pwm.c: 85:             correspondencia = 0b01011011;
  3257  001F94  51AF               	movf	UART_Print@i& (0+255),w,b
  3258  001F96  25AD               	addwf	UART_Print@data& (0+255),w,b
  3259  001F98  6ED9               	movwf	fsr2l,c
  3260  001F9A  51B0               	movf	(UART_Print@i+1)& (0+255),w,b
  3261  001F9C  21AE               	addwfc	(UART_Print@data+1)& (0+255),w,b
  3262  001F9E  6EDA               	movwf	fsr2h,c
  3263  001FA0  50DF               	movf	indf2,w,c
  3264  001FA2  ECFB  F010         	call	_UART_PutC
  3265  001FA6  0E01               	movlw	1
  3266  001FA8  0100               	movlb	0	; () banked
  3267  001FAA  27AF               	addwf	UART_Print@i& (0+255),f,b
  3268  001FAC  0E00               	movlw	0
  3269  001FAE  23B0               	addwfc	(UART_Print@i+1)& (0+255),f,b
  3270  001FB0  0E00               	movlw	0
  3271  001FB2  23B1               	addwfc	(UART_Print@i+2)& (0+255),f,b
  3272  001FB4                     l2600:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;pwm.c: 84:         case 2:
  3276  001FB4  51AF               	movf	UART_Print@i& (0+255),w,b
  3277  001FB6  25AD               	addwf	UART_Print@data& (0+255),w,b
  3278  001FB8  6ED9               	movwf	fsr2l,c
  3279  001FBA  51B0               	movf	(UART_Print@i+1)& (0+255),w,b
  3280  001FBC  21AE               	addwfc	(UART_Print@data+1)& (0+255),w,b
  3281  001FBE  6EDA               	movwf	fsr2h,c
  3282  001FC0  50DF               	movf	indf2,w,c
  3283  001FC2  B4D8               	btfsc	status,2,c
  3284  001FC4  0012               	return	
  3285  001FC6  D7E6               	goto	l2596
  3286  001FC8                     __end_of_UART_Print:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _UART_PutC *****************
  3290 ;; Defined at:
  3291 ;;		line 75 in file "pwm.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  data            1    wreg     const unsigned char 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  data            1   44[BANK0 ] const unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg
  3300 ;; Tracked objects:
  3301 ;;		On entry : 3F/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3305 ;;      Params:         0       0       0       0       0       0       0
  3306 ;;      Locals:         0       1       0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0
  3308 ;;      Totals:         0       1       0       0       0       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 9
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_UART_Print
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text16
  3320  0021F6                     __ptext16:
  3321                           	callstack 0
  3322  0021F6                     _UART_PutC:
  3323                           	callstack 20
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;incstack = 0
  3327                           ;UART_PutC@data stored from wreg
  3328  0021F6  6FAC               	movwf	UART_PutC@data& (0+255),b
  3329  0021F8                     
  3330                           ;pwm.c: 75:     switch (val) {;pwm.c: 76:         case 0:;pwm.c: 77:             corresp
      +                          ondencia = 0b00111111;
  3331  0021F8  A2AC               	btfss	4012,1,c	;volatile
  3332  0021FA  D7FE               	goto	l2500
  3333                           
  3334                           ;pwm.c: 78:         break;
  3335  0021FC  C0AC  FFAD         	movff	UART_PutC@data,4013	;volatile
  3336  002200  0012               	return		;funcret
  3337  002202                     __end_of_UART_PutC:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _UART_Init *****************
  3341 ;; Defined at:
  3342 ;;		line 33 in file "pwm.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  baud_rate       3    0[BANK1 ] const unsigned um
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  n               3    7[BANK1 ] m
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 3F/1
  3353 ;;		On exit  : 3F/1
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3356 ;;      Params:         0       0       3       0       0       0       0
  3357 ;;      Locals:         0       0       3       0       0       0       0
  3358 ;;      Temps:          0       0       4       0       0       0       0
  3359 ;;      Totals:         0       0      10       0       0       0       0
  3360 ;;Total ram usage:       10 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; Hardware stack levels required when called: 10
  3363 ;; This function calls:
  3364 ;;		___aldiv
  3365 ;; This function is called by:
  3366 ;;		_main
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text17
  3371  0016A0                     __ptext17:
  3372                           	callstack 0
  3373  0016A0                     _UART_Init:
  3374                           	callstack 20
  3375                           
  3376                           ; BSR set to: 1
  3377                           ;pwm.c: 33: ;pwm.c: 34:   else;pwm.c: 35:   {
  3378                           
  3379                           ;incstack = 0
  3380  0016A0  0E00               	movlw	0
  3381  0016A2  0100               	movlb	0	; () banked
  3382  0016A4  6FAC               	movwf	___aldiv@dividend& (0+255),b
  3383  0016A6  0E24               	movlw	36
  3384  0016A8  6FAD               	movwf	(___aldiv@dividend+1)& (0+255),b
  3385  0016AA  0EF4               	movlw	244
  3386  0016AC  6FAE               	movwf	(___aldiv@dividend+2)& (0+255),b
  3387  0016AE  0E00               	movlw	0
  3388  0016B0  6FAF               	movwf	(___aldiv@dividend+3)& (0+255),b
  3389  0016B2  0E04               	movlw	4
  3390  0016B4  0101               	movlb	1	; () banked
  3391  0016B6  6F03               	movwf	??_UART_Init& (0+255),b
  3392  0016B8  C100  F104         	movff	UART_Init@baud_rate,??_UART_Init+1
  3393  0016BC  C101  F105         	movff	UART_Init@baud_rate+1,??_UART_Init+2
  3394  0016C0  C102  F106         	movff	UART_Init@baud_rate+2,??_UART_Init+3
  3395  0016C4  2903               	incf	??_UART_Init& (0+255),w,b
  3396  0016C6  D004               	goto	u3750
  3397  0016C8                     u3755:
  3398  0016C8  90D8               	bcf	status,0,c
  3399  0016CA  3704               	rlcf	(??_UART_Init+1)& (0+255),f,b
  3400  0016CC  3705               	rlcf	(??_UART_Init+2)& (0+255),f,b
  3401  0016CE  3706               	rlcf	(??_UART_Init+3)& (0+255),f,b
  3402  0016D0                     u3750:
  3403  0016D0  2EE8               	decfsz	wreg,f,c
  3404  0016D2  D7FA               	goto	u3755
  3405  0016D4  0101               	movlb	1	; () banked
  3406  0016D6  5104               	movf	(??_UART_Init+1)& (0+255),w,b
  3407  0016D8  0100               	movlb	0	; () banked
  3408  0016DA  6FB0               	movwf	___aldiv@divisor& (0+255),b
  3409  0016DC  0101               	movlb	1	; () banked
  3410  0016DE  5105               	movf	(??_UART_Init+2)& (0+255),w,b
  3411  0016E0  0100               	movlb	0	; () banked
  3412  0016E2  6FB1               	movwf	(___aldiv@divisor+1)& (0+255),b
  3413  0016E4  0101               	movlb	1	; () banked
  3414  0016E6  5106               	movf	(??_UART_Init+3)& (0+255),w,b
  3415  0016E8  0100               	movlb	0	; () banked
  3416  0016EA  6FB2               	movwf	(___aldiv@divisor+2)& (0+255),b
  3417  0016EC  6BB3               	clrf	(___aldiv@divisor+3)& (0+255),b
  3418  0016EE  ECE7  F00C         	call	___aldiv	;wreg free
  3419  0016F2  0EFF               	movlw	255
  3420  0016F4  25AC               	addwf	?___aldiv& (0+255),w,b
  3421  0016F6  0101               	movlb	1	; () banked
  3422  0016F8  6F07               	movwf	UART_Init@n& (0+255),b
  3423  0016FA  0EFF               	movlw	255
  3424  0016FC  0100               	movlb	0	; () banked
  3425  0016FE  21AD               	addwfc	(?___aldiv+1)& (0+255),w,b
  3426  001700  0101               	movlb	1	; () banked
  3427  001702  6F08               	movwf	(UART_Init@n+1)& (0+255),b
  3428  001704  0EFF               	movlw	255
  3429  001706  0100               	movlb	0	; () banked
  3430  001708  21AE               	addwfc	(?___aldiv+2)& (0+255),w,b
  3431  00170A  0101               	movlb	1	; () banked
  3432  00170C  6F09               	movwf	(UART_Init@n+2)& (0+255),b
  3433                           
  3434                           ; BSR set to: 1
  3435                           ;pwm.c: 37:     TXSTA = 0x24;
  3436  00170E  AF09               	btfss	(UART_Init@n+2)& (0+255),7,b
  3437  001710  D006               	goto	l3598
  3438                           
  3439                           ; BSR set to: 1
  3440                           ;pwm.c: 38:   }
  3441  001712  0E00               	movlw	0
  3442  001714  6F07               	movwf	UART_Init@n& (0+255),b
  3443  001716  0E00               	movlw	0
  3444  001718  6F08               	movwf	(UART_Init@n+1)& (0+255),b
  3445  00171A  0E00               	movlw	0
  3446  00171C  6F09               	movwf	(UART_Init@n+2)& (0+255),b
  3447  00171E                     l3598:
  3448                           
  3449                           ; BSR set to: 1
  3450                           ;pwm.c: 40:   RCSTA = 0x90;
  3451  00171E  BF09               	btfsc	(UART_Init@n+2)& (0+255),7,b
  3452  001720  D04D               	goto	l92
  3453  001722  5109               	movf	(UART_Init@n+2)& (0+255),w,b
  3454  001724  E103               	bnz	u3770
  3455  001726  0508               	decf	(UART_Init@n+1)& (0+255),w,b
  3456  001728  A0D8               	btfss	status,0,c
  3457  00172A  D048               	goto	l92
  3458  00172C                     u3770:
  3459                           
  3460                           ; BSR set to: 1
  3461                           ;pwm.c: 41: ;pwm.c: 42: }
  3462  00172C  0E00               	movlw	0
  3463  00172E  0100               	movlb	0	; () banked
  3464  001730  6FAC               	movwf	___aldiv@dividend& (0+255),b
  3465  001732  0E24               	movlw	36
  3466  001734  6FAD               	movwf	(___aldiv@dividend+1)& (0+255),b
  3467  001736  0EF4               	movlw	244
  3468  001738  6FAE               	movwf	(___aldiv@dividend+2)& (0+255),b
  3469  00173A  0E00               	movlw	0
  3470  00173C  6FAF               	movwf	(___aldiv@dividend+3)& (0+255),b
  3471  00173E  0E06               	movlw	6
  3472  001740  0101               	movlb	1	; () banked
  3473  001742  6F03               	movwf	??_UART_Init& (0+255),b
  3474  001744  C100  F104         	movff	UART_Init@baud_rate,??_UART_Init+1
  3475  001748  C101  F105         	movff	UART_Init@baud_rate+1,??_UART_Init+2
  3476  00174C  C102  F106         	movff	UART_Init@baud_rate+2,??_UART_Init+3
  3477  001750  2903               	incf	??_UART_Init& (0+255),w,b
  3478  001752  D004               	goto	u3780
  3479  001754                     u3785:
  3480  001754  90D8               	bcf	status,0,c
  3481  001756  3704               	rlcf	(??_UART_Init+1)& (0+255),f,b
  3482  001758  3705               	rlcf	(??_UART_Init+2)& (0+255),f,b
  3483  00175A  3706               	rlcf	(??_UART_Init+3)& (0+255),f,b
  3484  00175C                     u3780:
  3485  00175C  2EE8               	decfsz	wreg,f,c
  3486  00175E  D7FA               	goto	u3785
  3487  001760  0101               	movlb	1	; () banked
  3488  001762  5104               	movf	(??_UART_Init+1)& (0+255),w,b
  3489  001764  0100               	movlb	0	; () banked
  3490  001766  6FB0               	movwf	___aldiv@divisor& (0+255),b
  3491  001768  0101               	movlb	1	; () banked
  3492  00176A  5105               	movf	(??_UART_Init+2)& (0+255),w,b
  3493  00176C  0100               	movlb	0	; () banked
  3494  00176E  6FB1               	movwf	(___aldiv@divisor+1)& (0+255),b
  3495  001770  0101               	movlb	1	; () banked
  3496  001772  5106               	movf	(??_UART_Init+3)& (0+255),w,b
  3497  001774  0100               	movlb	0	; () banked
  3498  001776  6FB2               	movwf	(___aldiv@divisor+2)& (0+255),b
  3499  001778  6BB3               	clrf	(___aldiv@divisor+3)& (0+255),b
  3500  00177A  ECE7  F00C         	call	___aldiv	;wreg free
  3501  00177E  0EFF               	movlw	255
  3502  001780  25AC               	addwf	?___aldiv& (0+255),w,b
  3503  001782  0101               	movlb	1	; () banked
  3504  001784  6F07               	movwf	UART_Init@n& (0+255),b
  3505  001786  0EFF               	movlw	255
  3506  001788  0100               	movlb	0	; () banked
  3507  00178A  21AD               	addwfc	(?___aldiv+1)& (0+255),w,b
  3508  00178C  0101               	movlb	1	; () banked
  3509  00178E  6F08               	movwf	(UART_Init@n+1)& (0+255),b
  3510  001790  0EFF               	movlw	255
  3511  001792  0100               	movlb	0	; () banked
  3512  001794  21AE               	addwfc	(?___aldiv+2)& (0+255),w,b
  3513  001796  0101               	movlb	1	; () banked
  3514  001798  6F09               	movwf	(UART_Init@n+2)& (0+255),b
  3515                           
  3516                           ; BSR set to: 1
  3517                           ;pwm.c: 43: 
  3518  00179A  BF09               	btfsc	(UART_Init@n+2)& (0+255),7,b
  3519  00179C  D00B               	goto	l3606
  3520  00179E  5109               	movf	(UART_Init@n+2)& (0+255),w,b
  3521  0017A0  E103               	bnz	u3790
  3522  0017A2  0508               	decf	(UART_Init@n+1)& (0+255),w,b
  3523  0017A4  A0D8               	btfss	status,0,c
  3524  0017A6  D006               	goto	l3606
  3525  0017A8                     u3790:
  3526                           
  3527                           ; BSR set to: 1
  3528                           ;pwm.c: 44: __bit UART_Data_Ready()
  3529  0017A8  0EFF               	movlw	255
  3530  0017AA  6F07               	movwf	UART_Init@n& (0+255),b
  3531  0017AC  0E00               	movlw	0
  3532  0017AE  6F08               	movwf	(UART_Init@n+1)& (0+255),b
  3533  0017B0  0E00               	movlw	0
  3534  0017B2  6F09               	movwf	(UART_Init@n+2)& (0+255),b
  3535  0017B4                     l3606:
  3536                           
  3537                           ; BSR set to: 1
  3538                           ;pwm.c: 45: {
  3539  0017B4  C107  FFAF         	movff	UART_Init@n,4015	;volatile
  3540                           
  3541                           ;pwm.c: 46:   return RCIF;
  3542  0017B8  0E20               	movlw	32
  3543  0017BA  D003               	goto	L2
  3544  0017BC                     l92:
  3545                           
  3546                           ; BSR set to: 1
  3547                           ;pwm.c: 50: {;pwm.c: 51:   while (RCIF == 0) ;
  3548  0017BC  C107  FFAF         	movff	UART_Init@n,4015	;volatile
  3549                           
  3550                           ; BSR set to: 1
  3551                           ;pwm.c: 52:   if (OERR)
  3552  0017C0  0E24               	movlw	36
  3553  0017C2                     L2:
  3554  0017C2  6EAC               	movwf	172,c	;volatile
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;pwm.c: 55:     CREN = 1;
  3558                           
  3559                           ;pwm.c: 53:   {
  3560  0017C4  0E90               	movlw	144
  3561  0017C6  6EAB               	movwf	171,c	;volatile
  3562                           
  3563                           ; BSR set to: 1
  3564  0017C8  0012               	return		;funcret
  3565  0017CA                     __end_of_UART_Init:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function ___aldiv *****************
  3569 ;; Defined at:
  3570 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\aldiv.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  dividend        4   44[BANK0 ] long 
  3573 ;;  divisor         4   48[BANK0 ] long 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  quotient        4   54[BANK0 ] long 
  3576 ;;  sign            1   53[BANK0 ] unsigned char 
  3577 ;;  counter         1   52[BANK0 ] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  4   44[BANK0 ] long 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 3F/0
  3584 ;;		On exit  : 3F/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         0       8       0       0       0       0       0
  3588 ;;      Locals:         0       6       0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0
  3590 ;;      Totals:         0      14       0       0       0       0       0
  3591 ;;Total ram usage:       14 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 9
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_UART_Init
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text18
  3602  0019CE                     __ptext18:
  3603                           	callstack 0
  3604  0019CE                     ___aldiv:
  3605                           	callstack 20
  3606                           
  3607                           ; BSR set to: 0
  3608                           
  3609                           ; BSR set to: 1
  3610                           ;incstack = 0
  3611  0019CE  0E00               	movlw	0
  3612  0019D0  6FB5               	movwf	___aldiv@sign& (0+255),b
  3613                           
  3614                           ; BSR set to: 0
  3615  0019D2  AFB3               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  3616  0019D4  D00A               	goto	l3540
  3617                           
  3618                           ; BSR set to: 0
  3619  0019D6  1FB3               	comf	(___aldiv@divisor+3)& (0+255),f,b
  3620  0019D8  1FB2               	comf	(___aldiv@divisor+2)& (0+255),f,b
  3621  0019DA  1FB1               	comf	(___aldiv@divisor+1)& (0+255),f,b
  3622  0019DC  6DB0               	negf	___aldiv@divisor& (0+255),b
  3623  0019DE  0E00               	movlw	0
  3624  0019E0  23B1               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  3625  0019E2  23B2               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  3626  0019E4  23B3               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  3627                           
  3628                           ; BSR set to: 0
  3629  0019E6  0E01               	movlw	1
  3630  0019E8  6FB5               	movwf	___aldiv@sign& (0+255),b
  3631  0019EA                     l3540:
  3632                           
  3633                           ; BSR set to: 0
  3634  0019EA  AFAF               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  3635  0019EC  D00A               	goto	l3546
  3636                           
  3637                           ; BSR set to: 0
  3638  0019EE  1FAF               	comf	(___aldiv@dividend+3)& (0+255),f,b
  3639  0019F0  1FAE               	comf	(___aldiv@dividend+2)& (0+255),f,b
  3640  0019F2  1FAD               	comf	(___aldiv@dividend+1)& (0+255),f,b
  3641  0019F4  6DAC               	negf	___aldiv@dividend& (0+255),b
  3642  0019F6  0E00               	movlw	0
  3643  0019F8  23AD               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  3644  0019FA  23AE               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  3645  0019FC  23AF               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  3646                           
  3647                           ; BSR set to: 0
  3648  0019FE  0E01               	movlw	1
  3649  001A00  1BB5               	xorwf	___aldiv@sign& (0+255),f,b
  3650  001A02                     l3546:
  3651                           
  3652                           ; BSR set to: 0
  3653  001A02  0E00               	movlw	0
  3654  001A04  6FB6               	movwf	___aldiv@quotient& (0+255),b
  3655  001A06  0E00               	movlw	0
  3656  001A08  6FB7               	movwf	(___aldiv@quotient+1)& (0+255),b
  3657  001A0A  0E00               	movlw	0
  3658  001A0C  6FB8               	movwf	(___aldiv@quotient+2)& (0+255),b
  3659  001A0E  0E00               	movlw	0
  3660  001A10  6FB9               	movwf	(___aldiv@quotient+3)& (0+255),b
  3661                           
  3662                           ; BSR set to: 0
  3663  001A12  51B0               	movf	___aldiv@divisor& (0+255),w,b
  3664  001A14  11B1               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  3665  001A16  11B2               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  3666  001A18  11B3               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  3667  001A1A  B4D8               	btfsc	status,2,c
  3668  001A1C  D02A               	goto	l3568
  3669                           
  3670                           ; BSR set to: 0
  3671  001A1E  0E01               	movlw	1
  3672  001A20  6FB4               	movwf	___aldiv@counter& (0+255),b
  3673  001A22  D006               	goto	l3554
  3674  001A24                     l3552:
  3675                           
  3676                           ; BSR set to: 0
  3677  001A24  90D8               	bcf	status,0,c
  3678  001A26  37B0               	rlcf	___aldiv@divisor& (0+255),f,b
  3679  001A28  37B1               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  3680  001A2A  37B2               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  3681  001A2C  37B3               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  3682  001A2E  2BB4               	incf	___aldiv@counter& (0+255),f,b
  3683  001A30                     l3554:
  3684                           
  3685                           ; BSR set to: 0
  3686  001A30  AFB3               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  3687  001A32  D7F8               	goto	l3552
  3688  001A34                     u3700:
  3689                           
  3690                           ; BSR set to: 0
  3691  001A34  90D8               	bcf	status,0,c
  3692  001A36  37B6               	rlcf	___aldiv@quotient& (0+255),f,b
  3693  001A38  37B7               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  3694  001A3A  37B8               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  3695  001A3C  37B9               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  3696                           
  3697                           ; BSR set to: 0
  3698  001A3E  51B0               	movf	___aldiv@divisor& (0+255),w,b
  3699  001A40  5DAC               	subwf	___aldiv@dividend& (0+255),w,b
  3700  001A42  51B1               	movf	(___aldiv@divisor+1)& (0+255),w,b
  3701  001A44  59AD               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  3702  001A46  51B2               	movf	(___aldiv@divisor+2)& (0+255),w,b
  3703  001A48  59AE               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  3704  001A4A  51B3               	movf	(___aldiv@divisor+3)& (0+255),w,b
  3705  001A4C  59AF               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  3706  001A4E  A0D8               	btfss	status,0,c
  3707  001A50  D009               	goto	l3564
  3708                           
  3709                           ; BSR set to: 0
  3710  001A52  51B0               	movf	___aldiv@divisor& (0+255),w,b
  3711  001A54  5FAC               	subwf	___aldiv@dividend& (0+255),f,b
  3712  001A56  51B1               	movf	(___aldiv@divisor+1)& (0+255),w,b
  3713  001A58  5BAD               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  3714  001A5A  51B2               	movf	(___aldiv@divisor+2)& (0+255),w,b
  3715  001A5C  5BAE               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  3716  001A5E  51B3               	movf	(___aldiv@divisor+3)& (0+255),w,b
  3717  001A60  5BAF               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  3718                           
  3719                           ; BSR set to: 0
  3720  001A62  81B6               	bsf	___aldiv@quotient& (0+255),0,b
  3721  001A64                     l3564:
  3722                           
  3723                           ; BSR set to: 0
  3724  001A64  90D8               	bcf	status,0,c
  3725  001A66  33B3               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  3726  001A68  33B2               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  3727  001A6A  33B1               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  3728  001A6C  33B0               	rrcf	___aldiv@divisor& (0+255),f,b
  3729                           
  3730                           ; BSR set to: 0
  3731  001A6E  2FB4               	decfsz	___aldiv@counter& (0+255),f,b
  3732  001A70  D7E1               	goto	u3700
  3733  001A72                     l3568:
  3734                           
  3735                           ; BSR set to: 0
  3736  001A72  51B5               	movf	___aldiv@sign& (0+255),w,b
  3737  001A74  B4D8               	btfsc	status,2,c
  3738  001A76  D008               	goto	l3572
  3739                           
  3740                           ; BSR set to: 0
  3741  001A78  1FB9               	comf	(___aldiv@quotient+3)& (0+255),f,b
  3742  001A7A  1FB8               	comf	(___aldiv@quotient+2)& (0+255),f,b
  3743  001A7C  1FB7               	comf	(___aldiv@quotient+1)& (0+255),f,b
  3744  001A7E  6DB6               	negf	___aldiv@quotient& (0+255),b
  3745  001A80  0E00               	movlw	0
  3746  001A82  23B7               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  3747  001A84  23B8               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  3748  001A86  23B9               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  3749  001A88                     l3572:
  3750                           
  3751                           ; BSR set to: 0
  3752  001A88  C0B6  F0AC         	movff	___aldiv@quotient,?___aldiv
  3753  001A8C  C0B7  F0AD         	movff	___aldiv@quotient+1,?___aldiv+1
  3754  001A90  C0B8  F0AE         	movff	___aldiv@quotient+2,?___aldiv+2
  3755  001A94  C0B9  F0AF         	movff	___aldiv@quotient+3,?___aldiv+3
  3756                           
  3757                           ; BSR set to: 0
  3758  001A98  0012               	return		;funcret
  3759  001A9A                     __end_of___aldiv:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _isr *****************
  3763 ;; Defined at:
  3764 ;;		line 257 in file "pwm.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  str            20   20[BANK0 ] unsigned char [20]
  3769 ;;  str            20    0[BANK0 ] unsigned char [20]
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3779 ;;      Params:         0       0       0       0       0       0       0
  3780 ;;      Locals:         0      44       0       0       0       0       0
  3781 ;;      Temps:         14       0       0       0       0       0       0
  3782 ;;      Totals:        14      44       0       0       0       0       0
  3783 ;;Total ram usage:       58 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; Hardware stack levels required when called: 8
  3786 ;; This function calls:
  3787 ;;		___awdiv
  3788 ;;		___awmod
  3789 ;;		___wmul
  3790 ;;		_valor_equivalente
  3791 ;;		i2_UART_Print
  3792 ;;		i2_sprintf
  3793 ;;		i2_strcat
  3794 ;; This function is called by:
  3795 ;;		Interrupt level 2
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	intcode
  3800  000008                     __pintcode:
  3801                           	callstack 0
  3802  000008                     _isr:
  3803                           	callstack 14
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;incstack = 0
  3807  000008  8276               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3808  00000A  ED04  F003         	call	int_func,f	;refresh shadow registers
  3809                           
  3810                           	psect	intcode_body
  3811  000608                     __pintcode_body:
  3812                           	callstack 14
  3813  000608                     int_func:
  3814                           	callstack 14
  3815  000608  0006               	pop		; remove dummy address from shadow register refresh
  3816  00060A  CFE1 F06C          	movff	fsr1l,??_isr+4
  3817  00060E  CFE2 F06D          	movff	fsr1h,??_isr+5
  3818  000612  CFD9 F06E          	movff	fsr2l,??_isr+6
  3819  000616  CFDA F06F          	movff	fsr2h,??_isr+7
  3820  00061A  CFF3 F070          	movff	prodl,??_isr+8
  3821  00061E  CFF4 F071          	movff	prodh,??_isr+9
  3822  000622  CFF6 F072          	movff	tblptrl,??_isr+10
  3823  000626  CFF7 F073          	movff	tblptrh,??_isr+11
  3824  00062A  CFF8 F074          	movff	tblptru,??_isr+12
  3825  00062E  CFF5 F075          	movff	tablat,??_isr+13
  3826                           
  3827                           ;pwm.c: 259:                 valor_display = valor_tara - tempo_echo;
  3828  000632  A2F2               	btfss	242,1,c	;volatile
  3829  000634  D10A               	goto	i2l4216
  3830                           
  3831                           ;pwm.c: 260: 
  3832  000636  98F2               	bcf	242,4,c	;volatile
  3833                           
  3834                           ;pwm.c: 261:             if(flag_MENSURAR == 4){
  3835  000638  0100               	movlb	0	; () banked
  3836  00063A  51CE               	movf	_medindo& (0+255),w,b
  3837  00063C  11CF               	iorwf	(_medindo+1)& (0+255),w,b
  3838  00063E  B4D8               	btfsc	status,2,c
  3839                           
  3840                           ; BSR set to: 0
  3841  000640  A081               	btfss	129,0,c	;volatile
  3842  000642  D00B               	goto	i2l163
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;pwm.c: 262:                 flag_MENSURAR = 5;
  3846  000644  0E00               	movlw	0
  3847  000646  6ECF               	movwf	207,c	;volatile
  3848                           
  3849                           ;pwm.c: 263:             }
  3850  000648  0E00               	movlw	0
  3851  00064A  6ECE               	movwf	206,c	;volatile
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;pwm.c: 264:             if(flag_MENSURAR == 3){
  3855  00064C  80CD               	bsf	4045,0,c	;volatile
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;pwm.c: 265:                 valZ = valor_display;
  3859  00064E  9CF1               	bcf	241,6,c	;volatile
  3860                           
  3861                           ;pwm.c: 266:                 flag_MENSURAR = 4;
  3862  000650  0E00               	movlw	0
  3863  000652  6FCF               	movwf	(_medindo+1)& (0+255),b
  3864  000654  0E01               	movlw	1
  3865  000656  6FCE               	movwf	_medindo& (0+255),b
  3866                           
  3867                           ;pwm.c: 267:             }
  3868  000658  D0F6               	goto	i2l4212
  3869  00065A                     i2l163:
  3870                           
  3871                           ; BSR set to: 0
  3872  00065A  B081               	btfsc	129,0,c	;volatile
  3873  00065C  D0F4               	goto	i2l4212
  3874                           
  3875                           ; BSR set to: 0
  3876  00065E  05CE               	decf	_medindo& (0+255),w,b
  3877  000660  11CF               	iorwf	(_medindo+1)& (0+255),w,b
  3878  000662  A4D8               	btfss	status,2,c
  3879  000664  D0F0               	goto	i2l4212
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;pwm.c: 268:             if(flag_MENSURAR == 2){
  3883  000666  90CD               	bcf	4045,0,c	;volatile
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;pwm.c: 269:                 valY = valor_display;
  3887  000668  50CF               	movf	207,w,c	;volatile
  3888  00066A  6E69               	movwf	(??_isr+1)^0,c
  3889  00066C  6A68               	clrf	??_isr^0,c
  3890  00066E  50CE               	movf	206,w,c	;volatile
  3891  000670  6E6A               	movwf	(??_isr+2)^0,c
  3892  000672  6A6B               	clrf	(??_isr+3)^0,c
  3893  000674  5068               	movf	??_isr^0,w,c
  3894  000676  106A               	iorwf	(??_isr+2)^0,w,c
  3895  000678  6E07               	movwf	___awdiv@dividend^0,c
  3896  00067A  5069               	movf	(??_isr+1)^0,w,c
  3897  00067C  106B               	iorwf	(??_isr+3)^0,w,c
  3898  00067E  6E08               	movwf	(___awdiv@dividend+1)^0,c
  3899  000680  0E00               	movlw	0
  3900  000682  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3901  000684  0E6E               	movlw	110
  3902  000686  6E09               	movwf	___awdiv@divisor^0,c
  3903  000688  EC90  F00E         	call	___awdiv	;wreg free
  3904  00068C  C007  F0BA         	movff	?___awdiv,_tempo_echo
  3905  000690  C008  F0BB         	movff	?___awdiv+1,_tempo_echo+1
  3906  000694  0100               	movlb	0	; () banked
  3907  000696  0E00               	movlw	0
  3908  000698  BFBB               	btfsc	(_tempo_echo+1)& (0+255),7,b
  3909  00069A  0EFF               	movlw	-1
  3910  00069C  6FBC               	movwf	(_tempo_echo+2)& (0+255),b
  3911  00069E  6FBD               	movwf	(_tempo_echo+3)& (0+255),b
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;pwm.c: 270:                 flag_MENSURAR = 3;
  3915  0006A0  C0BA  F16D         	movff	_tempo_echo,_valor_display
  3916  0006A4  C0BB  F16E         	movff	_tempo_echo+1,_valor_display+1
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;pwm.c: 273:                 valX = valor_display;
  3920  0006A8  0101               	movlb	1	; () banked
  3921  0006AA  5169               	movf	_flag_TARA& (0+255),w,b
  3922  0006AC  116A               	iorwf	(_flag_TARA+1)& (0+255),w,b
  3923  0006AE  A4D8               	btfss	status,2,c
  3924  0006B0  D011               	goto	i2l166
  3925                           
  3926                           ; BSR set to: 1
  3927  0006B2  0100               	movlb	0	; () banked
  3928  0006B4  BFCB               	btfsc	(_valor_tara+1)& (0+255),7,b
  3929  0006B6  D00E               	goto	i2l166
  3930  0006B8  51CB               	movf	(_valor_tara+1)& (0+255),w,b
  3931  0006BA  E103               	bnz	i2u426_40
  3932  0006BC  05CA               	decf	_valor_tara& (0+255),w,b
  3933  0006BE  A0D8               	btfss	status,0,c
  3934  0006C0  D009               	goto	i2l166
  3935  0006C2                     i2u426_40:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;pwm.c: 274:                 flag_MENSURAR = 2;
  3939  0006C2  51BA               	movf	_tempo_echo& (0+255),w,b
  3940  0006C4  5DCA               	subwf	_valor_tara& (0+255),w,b
  3941  0006C6  0101               	movlb	1	; () banked
  3942  0006C8  6F6D               	movwf	_valor_display& (0+255),b
  3943  0006CA  0100               	movlb	0	; () banked
  3944  0006CC  51BB               	movf	(_tempo_echo+1)& (0+255),w,b
  3945  0006CE  59CB               	subwfb	(_valor_tara+1)& (0+255),w,b
  3946  0006D0  0101               	movlb	1	; () banked
  3947  0006D2  6F6E               	movwf	(_valor_display+1)& (0+255),b
  3948  0006D4                     i2l166:
  3949                           
  3950                           ;pwm.c: 276:             if(flag_MENSURAR == 5){
  3951  0006D4  0E04               	movlw	4
  3952  0006D6  0101               	movlb	1	; () banked
  3953  0006D8  1967               	xorwf	_flag_MENSURAR& (0+255),w,b
  3954  0006DA  1168               	iorwf	(_flag_MENSURAR+1)& (0+255),w,b
  3955  0006DC  A4D8               	btfss	status,2,c
  3956  0006DE  D004               	goto	i2l4158
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;pwm.c: 277:                 valor_display = valX*valY*valZ;
  3960  0006E0  0E00               	movlw	0
  3961  0006E2  6F68               	movwf	(_flag_MENSURAR+1)& (0+255),b
  3962  0006E4  0E05               	movlw	5
  3963  0006E6  6F67               	movwf	_flag_MENSURAR& (0+255),b
  3964  0006E8                     i2l4158:
  3965                           
  3966                           ; BSR set to: 1
  3967                           ;pwm.c: 279:                 _delay((unsigned long)((20)*(16000000/4000.0)));
  3968  0006E8  0E03               	movlw	3
  3969  0006EA  1967               	xorwf	_flag_MENSURAR& (0+255),w,b
  3970  0006EC  1168               	iorwf	(_flag_MENSURAR+1)& (0+255),w,b
  3971  0006EE  A4D8               	btfss	status,2,c
  3972  0006F0  D008               	goto	i2l4164
  3973                           
  3974                           ; BSR set to: 1
  3975                           ;pwm.c: 280:                 char str[20];
  3976  0006F2  C16D  F0C4         	movff	_valor_display,_valZ
  3977  0006F6  C16E  F0C5         	movff	_valor_display+1,_valZ+1
  3978                           
  3979                           ; BSR set to: 1
  3980                           ;pwm.c: 281:                 sprintf(str, "%d", valor_display);
  3981  0006FA  0E00               	movlw	0
  3982  0006FC  6F68               	movwf	(_flag_MENSURAR+1)& (0+255),b
  3983  0006FE  0E04               	movlw	4
  3984  000700  6F67               	movwf	_flag_MENSURAR& (0+255),b
  3985  000702                     i2l4164:
  3986                           
  3987                           ; BSR set to: 1
  3988                           ;pwm.c: 283:                 UART_Print(str);
  3989  000702  0E02               	movlw	2
  3990  000704  1967               	xorwf	_flag_MENSURAR& (0+255),w,b
  3991  000706  1168               	iorwf	(_flag_MENSURAR+1)& (0+255),w,b
  3992  000708  A4D8               	btfss	status,2,c
  3993  00070A  D008               	goto	i2l4170
  3994                           
  3995                           ; BSR set to: 1
  3996                           ;pwm.c: 284:             }else{
  3997  00070C  C16D  F0C6         	movff	_valor_display,_valY
  3998  000710  C16E  F0C7         	movff	_valor_display+1,_valY+1
  3999                           
  4000                           ; BSR set to: 1
  4001                           ;pwm.c: 285:                  _delay((unsigned long)((20)*(16000000/4000.0)));
  4002  000714  0E00               	movlw	0
  4003  000716  6F68               	movwf	(_flag_MENSURAR+1)& (0+255),b
  4004  000718  0E03               	movlw	3
  4005  00071A  6F67               	movwf	_flag_MENSURAR& (0+255),b
  4006  00071C                     i2l4170:
  4007                           
  4008                           ; BSR set to: 1
  4009                           ;pwm.c: 287:                 sprintf(str, "%d", valor_display);
  4010  00071C  0567               	decf	_flag_MENSURAR& (0+255),w,b
  4011  00071E  1168               	iorwf	(_flag_MENSURAR+1)& (0+255),w,b
  4012  000720  A4D8               	btfss	status,2,c
  4013  000722  D008               	goto	i2l4176
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;pwm.c: 288:                 strcat(str, "\r\n");
  4017  000724  C16D  F0C8         	movff	_valor_display,_valX
  4018  000728  C16E  F0C9         	movff	_valor_display+1,_valX+1
  4019                           
  4020                           ; BSR set to: 1
  4021                           ;pwm.c: 289:                 UART_Print(str);
  4022  00072C  0E00               	movlw	0
  4023  00072E  6F68               	movwf	(_flag_MENSURAR+1)& (0+255),b
  4024  000730  0E02               	movlw	2
  4025  000732  6F67               	movwf	_flag_MENSURAR& (0+255),b
  4026  000734                     i2l4176:
  4027                           
  4028                           ; BSR set to: 1
  4029                           ;pwm.c: 291: 
  4030  000734  0E05               	movlw	5
  4031  000736  1967               	xorwf	_flag_MENSURAR& (0+255),w,b
  4032  000738  1168               	iorwf	(_flag_MENSURAR+1)& (0+255),w,b
  4033  00073A  A4D8               	btfss	status,2,c
  4034  00073C  D041               	goto	i2l4190
  4035                           
  4036                           ; BSR set to: 1
  4037                           ;pwm.c: 292:             INTCON2bits.INTEDG0 = 1;
  4038  00073E  C0C8  F001         	movff	_valX,___wmul@multiplier
  4039  000742  C0C9  F002         	movff	_valX+1,___wmul@multiplier+1
  4040  000746  C0C6  F003         	movff	_valY,___wmul@multiplicand
  4041  00074A  C0C7  F004         	movff	_valY+1,___wmul@multiplicand+1
  4042  00074E  ECC6  F010         	call	___wmul	;wreg free
  4043  000752  C001  F0A8         	movff	?___wmul,_isr$1401
  4044  000756  C002  F0A9         	movff	?___wmul+1,_isr$1401+1
  4045                           
  4046                           ;pwm.c: 292:             INTCON2bits.INTEDG0 = 1;
  4047  00075A  C0A8  F001         	movff	_isr$1401,___wmul@multiplier
  4048  00075E  C0A9  F002         	movff	_isr$1401+1,___wmul@multiplier+1
  4049  000762  C0C4  F003         	movff	_valZ,___wmul@multiplicand
  4050  000766  C0C5  F004         	movff	_valZ+1,___wmul@multiplicand+1
  4051  00076A  ECC6  F010         	call	___wmul	;wreg free
  4052  00076E  C001  F16D         	movff	?___wmul,_valor_display
  4053  000772  C002  F16E         	movff	?___wmul+1,_valor_display+1
  4054                           
  4055                           ;pwm.c: 293:             medindo = 0;
  4056  000776  0E00               	movlw	0
  4057  000778  0101               	movlb	1	; () banked
  4058  00077A  6F68               	movwf	(_flag_MENSURAR+1)& (0+255),b
  4059  00077C  0E00               	movlw	0
  4060  00077E  6F67               	movwf	_flag_MENSURAR& (0+255),b
  4061                           
  4062                           ; BSR set to: 1
  4063                           ;pwm.c: 294:             if(flag_TARA == 1){
  4064  000780  0E68               	movlw	104
  4065  000782  6E68               	movwf	??_isr^0,c
  4066  000784  0EE4               	movlw	228
  4067  000786                     i2u440_47:
  4068  000786  2EE8               	decfsz	wreg,f,c
  4069  000788  D7FE               	bra	i2u440_47
  4070  00078A  2E68               	decfsz	??_isr^0,f,c
  4071  00078C  D7FC               	bra	i2u440_47
  4072  00078E  D000               	nop2	
  4073                           
  4074                           ;pwm.c: 295:                 valor_tara = tempo_echo;;pwm.c: 296:                 valor_
      +                          display = valor_tara - valor_display;
  4075  000790  0E80               	movlw	low isr@str
  4076  000792  6E56               	movwf	i2sprintf@s^0,c
  4077  000794  6A57               	clrf	(i2sprintf@s+1)^0,c
  4078  000796  0E04               	movlw	low STR_1
  4079  000798  6E58               	movwf	i2sprintf@fmt^0,c
  4080  00079A  C16D  F059         	movff	_valor_display,?i2_sprintf+3
  4081  00079E  C16E  F05A         	movff	_valor_display+1,?i2_sprintf+4
  4082  0007A2  ECA1  F00F         	call	i2_sprintf	;wreg free
  4083                           
  4084                           ; BSR set to: 1
  4085                           ;pwm.c: 297:                 flag_TARA = 0;
  4086  0007A6  0E80               	movlw	low isr@str
  4087  0007A8  6E0C               	movwf	i2strcat@dest^0,c
  4088  0007AA  6A0D               	clrf	(i2strcat@dest+1)^0,c
  4089  0007AC  0E01               	movlw	low STR_2
  4090  0007AE  6E0E               	movwf	i2strcat@src^0,c
  4091  0007B0  ECEA  F010         	call	i2_strcat	;wreg free
  4092                           
  4093                           ;pwm.c: 298:                 _delay((unsigned long)((40)*(16000000/4000.0)));
  4094  0007B4  0E80               	movlw	low isr@str
  4095  0007B6  6E02               	movwf	i2UART_Print@data^0,c
  4096  0007B8  6A03               	clrf	(i2UART_Print@data+1)^0,c
  4097  0007BA  ECE4  F00F         	call	i2_UART_Print	;wreg free
  4098                           
  4099                           ;pwm.c: 299:             }
  4100  0007BE  D01F               	goto	i2l4198
  4101  0007C0                     i2l4190:
  4102                           
  4103                           ; BSR set to: 1
  4104                           ;pwm.c: 300: 
  4105  0007C0  0E68               	movlw	104
  4106  0007C2  6E68               	movwf	??_isr^0,c
  4107  0007C4  0EE4               	movlw	228
  4108  0007C6                     i2u441_47:
  4109  0007C6  2EE8               	decfsz	wreg,f,c
  4110  0007C8  D7FE               	bra	i2u441_47
  4111  0007CA  2E68               	decfsz	??_isr^0,f,c
  4112  0007CC  D7FC               	bra	i2u441_47
  4113  0007CE  D000               	nop2	
  4114                           
  4115                           ;pwm.c: 301:         };pwm.c: 302:         INTCONbits.INT0IE = 1;
  4116  0007D0  0E94               	movlw	low isr@str_598
  4117  0007D2  6E56               	movwf	i2sprintf@s^0,c
  4118  0007D4  6A57               	clrf	(i2sprintf@s+1)^0,c
  4119  0007D6  0E04               	movlw	low STR_1
  4120  0007D8  6E58               	movwf	i2sprintf@fmt^0,c
  4121  0007DA  C16D  F059         	movff	_valor_display,?i2_sprintf+3
  4122  0007DE  C16E  F05A         	movff	_valor_display+1,?i2_sprintf+4
  4123  0007E2  ECA1  F00F         	call	i2_sprintf	;wreg free
  4124                           
  4125                           ; BSR set to: 1
  4126                           ;pwm.c: 303:         INTCONbits.INT0IF = 0;
  4127  0007E6  0E94               	movlw	low isr@str_598
  4128  0007E8  6E0C               	movwf	i2strcat@dest^0,c
  4129  0007EA  6A0D               	clrf	(i2strcat@dest+1)^0,c
  4130  0007EC  0E01               	movlw	low STR_2
  4131  0007EE  6E0E               	movwf	i2strcat@src^0,c
  4132  0007F0  ECEA  F010         	call	i2_strcat	;wreg free
  4133                           
  4134                           ;pwm.c: 304:     }
  4135  0007F4  0E94               	movlw	low isr@str_598
  4136  0007F6  6E02               	movwf	i2UART_Print@data^0,c
  4137  0007F8  6A03               	clrf	(i2UART_Print@data+1)^0,c
  4138  0007FA  ECE4  F00F         	call	i2_UART_Print	;wreg free
  4139  0007FE                     i2l4198:
  4140                           
  4141                           ;pwm.c: 307:         TMR0H = 207;
  4142  0007FE  8CF1               	bsf	241,6,c	;volatile
  4143                           
  4144                           ;pwm.c: 308:         TMR0L = 44;
  4145  000800  0E00               	movlw	0
  4146  000802  0100               	movlb	0	; () banked
  4147  000804  6FCF               	movwf	(_medindo+1)& (0+255),b
  4148  000806  0E00               	movlw	0
  4149  000808  6FCE               	movwf	_medindo& (0+255),b
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;pwm.c: 309: 
  4153  00080A  0101               	movlb	1	; () banked
  4154  00080C  0569               	decf	_flag_TARA& (0+255),w,b
  4155  00080E  116A               	iorwf	(_flag_TARA+1)& (0+255),w,b
  4156  000810  A4D8               	btfss	status,2,c
  4157  000812  D019               	goto	i2l4212
  4158                           
  4159                           ; BSR set to: 1
  4160                           ;pwm.c: 310:         if( medindo == 0 ){
  4161  000814  C0BA  F0CA         	movff	_tempo_echo,_valor_tara
  4162  000818  C0BB  F0CB         	movff	_tempo_echo+1,_valor_tara+1
  4163                           
  4164                           ; BSR set to: 1
  4165                           ;pwm.c: 311:             dig_val = 0;
  4166  00081C  516D               	movf	_valor_display& (0+255),w,b
  4167  00081E  0100               	movlb	0	; () banked
  4168  000820  5DCA               	subwf	_valor_tara& (0+255),w,b
  4169  000822  0101               	movlb	1	; () banked
  4170  000824  6F6D               	movwf	_valor_display& (0+255),b
  4171  000826  516E               	movf	(_valor_display+1)& (0+255),w,b
  4172  000828  0100               	movlb	0	; () banked
  4173  00082A  59CB               	subwfb	(_valor_tara+1)& (0+255),w,b
  4174  00082C  0101               	movlb	1	; () banked
  4175  00082E  6F6E               	movwf	(_valor_display+1)& (0+255),b
  4176                           
  4177                           ; BSR set to: 1
  4178                           ;pwm.c: 312:             valorAMos = valor_display;
  4179  000830  0E00               	movlw	0
  4180  000832  6F6A               	movwf	(_flag_TARA+1)& (0+255),b
  4181  000834  0E00               	movlw	0
  4182  000836  6F69               	movwf	_flag_TARA& (0+255),b
  4183                           
  4184                           ; BSR set to: 1
  4185                           ;pwm.c: 313:             switch(indice){
  4186  000838  0ED0               	movlw	208
  4187  00083A  6E68               	movwf	??_isr^0,c
  4188  00083C  0ECA               	movlw	202
  4189  00083E                     i2u442_47:
  4190  00083E  2EE8               	decfsz	wreg,f,c
  4191  000840  D7FE               	bra	i2u442_47
  4192  000842  2E68               	decfsz	??_isr^0,f,c
  4193  000844  D7FC               	bra	i2u442_47
  4194  000846                     i2l4212:
  4195                           
  4196                           ;pwm.c: 317:                     break;
  4197  000846  88F2               	bsf	242,4,c	;volatile
  4198                           
  4199                           ;pwm.c: 318: 
  4200  000848  92F2               	bcf	242,1,c	;volatile
  4201  00084A                     i2l4216:
  4202                           
  4203                           ;pwm.c: 321:                     valor_equivalente(1, dig_val);
  4204  00084A  A4F2               	btfss	242,2,c	;volatile
  4205  00084C  D0BA               	goto	i2l184
  4206                           
  4207                           ;pwm.c: 322:                     break;
  4208  00084E  0ECF               	movlw	207
  4209  000850  6ED7               	movwf	215,c	;volatile
  4210                           
  4211                           ;pwm.c: 323: 
  4212  000852  0E2C               	movlw	44
  4213  000854  6ED6               	movwf	214,c	;volatile
  4214                           
  4215                           ;pwm.c: 325:                     dig_val = (valorAMos%1000) / 100;
  4216  000856  0100               	movlb	0	; () banked
  4217  000858  51CE               	movf	_medindo& (0+255),w,b
  4218  00085A  11CF               	iorwf	(_medindo+1)& (0+255),w,b
  4219  00085C  A4D8               	btfss	status,2,c
  4220  00085E  D0B0               	goto	i2l4244
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;pwm.c: 326:                     valor_equivalente(2, dig_val);
  4224  000860  0E00               	movlw	0
  4225  000862  6FCD               	movwf	(_dig_val+1)& (0+255),b
  4226  000864  0E00               	movlw	0
  4227  000866  6FCC               	movwf	_dig_val& (0+255),b
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;pwm.c: 327:                     break;
  4231  000868  C16D  F0D2         	movff	_valor_display,_valorAMos
  4232  00086C  C16E  F0D3         	movff	_valor_display+1,_valorAMos+1
  4233                           
  4234                           ;pwm.c: 328: 
  4235  000870  D086               	goto	i2l4236
  4236  000872                     i2l4226:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;pwm.c: 330:                     dig_val = valorAMos / 1000;
  4240  000872  0E00               	movlw	0
  4241  000874  6E04               	movwf	(___awmod@divisor+1)^0,c
  4242  000876  0E64               	movlw	100
  4243  000878  6E03               	movwf	___awmod@divisor^0,c
  4244  00087A  C0D2  F001         	movff	_valorAMos,___awmod@dividend
  4245  00087E  C0D3  F002         	movff	_valorAMos+1,___awmod@dividend+1
  4246  000882  ECD2  F00E         	call	___awmod	;wreg free
  4247  000886  C001  F0AA         	movff	?___awmod,_isr$1402
  4248  00088A  C002  F0AB         	movff	?___awmod+1,_isr$1402+1
  4249                           
  4250                           ;pwm.c: 330:                     dig_val = valorAMos / 1000;
  4251  00088E  C0AA  F001         	movff	_isr$1402,___awmod@dividend
  4252  000892  C0AB  F002         	movff	_isr$1402+1,___awmod@dividend+1
  4253  000896  0E00               	movlw	0
  4254  000898  6E04               	movwf	(___awmod@divisor+1)^0,c
  4255  00089A  0E0A               	movlw	10
  4256  00089C  6E03               	movwf	___awmod@divisor^0,c
  4257  00089E  ECD2  F00E         	call	___awmod	;wreg free
  4258  0008A2  C001  F0CC         	movff	?___awmod,_dig_val
  4259  0008A6  C002  F0CD         	movff	?___awmod+1,_dig_val+1
  4260                           
  4261                           ;pwm.c: 331:                     valor_equivalente(3, dig_val);
  4262  0008AA  0E00               	movlw	0
  4263  0008AC  6E02               	movwf	(valor_equivalente@dig+1)^0,c
  4264  0008AE  0E00               	movlw	0
  4265  0008B0  6E01               	movwf	valor_equivalente@dig^0,c
  4266  0008B2  C0CC  F003         	movff	_dig_val,valor_equivalente@val
  4267  0008B6  C0CD  F004         	movff	_dig_val+1,valor_equivalente@val+1
  4268  0008BA  EC77  F00C         	call	_valor_equivalente	;wreg free
  4269                           
  4270                           ;pwm.c: 332:                     break;
  4271  0008BE  D074               	goto	i2l4238
  4272  0008C0                     i2l4228:
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;pwm.c: 335:                     break;
  4276  0008C0  0E00               	movlw	0
  4277  0008C2  6E04               	movwf	(___awmod@divisor+1)^0,c
  4278  0008C4  0E64               	movlw	100
  4279  0008C6  6E03               	movwf	___awmod@divisor^0,c
  4280  0008C8  C0D2  F001         	movff	_valorAMos,___awmod@dividend
  4281  0008CC  C0D3  F002         	movff	_valorAMos+1,___awmod@dividend+1
  4282  0008D0  ECD2  F00E         	call	___awmod	;wreg free
  4283  0008D4  C001  F007         	movff	?___awmod,___awdiv@dividend
  4284  0008D8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  4285  0008DC  0E00               	movlw	0
  4286  0008DE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4287  0008E0  0E0A               	movlw	10
  4288  0008E2  6E09               	movwf	___awdiv@divisor^0,c
  4289  0008E4  EC90  F00E         	call	___awdiv	;wreg free
  4290  0008E8  C007  F0CC         	movff	?___awdiv,_dig_val
  4291  0008EC  C008  F0CD         	movff	?___awdiv+1,_dig_val+1
  4292                           
  4293                           ;pwm.c: 336:             }
  4294  0008F0  0E00               	movlw	0
  4295  0008F2  6E02               	movwf	(valor_equivalente@dig+1)^0,c
  4296  0008F4  0E01               	movlw	1
  4297  0008F6  6E01               	movwf	valor_equivalente@dig^0,c
  4298  0008F8  C0CC  F003         	movff	_dig_val,valor_equivalente@val
  4299  0008FC  C0CD  F004         	movff	_dig_val+1,valor_equivalente@val+1
  4300  000900  EC77  F00C         	call	_valor_equivalente	;wreg free
  4301                           
  4302                           ;pwm.c: 337: 
  4303  000904  D051               	goto	i2l4238
  4304  000906                     i2l4230:
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;pwm.c: 340:                 indice = 0;
  4308  000906  0E03               	movlw	3
  4309  000908  6E04               	movwf	(___awmod@divisor+1)^0,c
  4310  00090A  0EE8               	movlw	232
  4311  00090C  6E03               	movwf	___awmod@divisor^0,c
  4312  00090E  C0D2  F001         	movff	_valorAMos,___awmod@dividend
  4313  000912  C0D3  F002         	movff	_valorAMos+1,___awmod@dividend+1
  4314  000916  ECD2  F00E         	call	___awmod	;wreg free
  4315  00091A  C001  F007         	movff	?___awmod,___awdiv@dividend
  4316  00091E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  4317  000922  0E00               	movlw	0
  4318  000924  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4319  000926  0E64               	movlw	100
  4320  000928  6E09               	movwf	___awdiv@divisor^0,c
  4321  00092A  EC90  F00E         	call	___awdiv	;wreg free
  4322  00092E  C007  F0CC         	movff	?___awdiv,_dig_val
  4323  000932  C008  F0CD         	movff	?___awdiv+1,_dig_val+1
  4324                           
  4325                           ;pwm.c: 341:             }
  4326  000936  0E00               	movlw	0
  4327  000938  6E02               	movwf	(valor_equivalente@dig+1)^0,c
  4328  00093A  0E02               	movlw	2
  4329  00093C  6E01               	movwf	valor_equivalente@dig^0,c
  4330  00093E  C0CC  F003         	movff	_dig_val,valor_equivalente@val
  4331  000942  C0CD  F004         	movff	_dig_val+1,valor_equivalente@val+1
  4332  000946  EC77  F00C         	call	_valor_equivalente	;wreg free
  4333                           
  4334                           ;pwm.c: 342:         }
  4335  00094A  D02E               	goto	i2l4238
  4336  00094C                     i2l4232:
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;pwm.c: 345:     }
  4340  00094C  C0D2  F007         	movff	_valorAMos,___awdiv@dividend
  4341  000950  C0D3  F008         	movff	_valorAMos+1,___awdiv@dividend+1
  4342  000954  0E03               	movlw	3
  4343  000956  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4344  000958  0EE8               	movlw	232
  4345  00095A  6E09               	movwf	___awdiv@divisor^0,c
  4346  00095C  EC90  F00E         	call	___awdiv	;wreg free
  4347  000960  C007  F0CC         	movff	?___awdiv,_dig_val
  4348  000964  C008  F0CD         	movff	?___awdiv+1,_dig_val+1
  4349                           
  4350                           ;pwm.c: 346: }
  4351  000968  0E00               	movlw	0
  4352  00096A  6E02               	movwf	(valor_equivalente@dig+1)^0,c
  4353  00096C  0E03               	movlw	3
  4354  00096E  6E01               	movwf	valor_equivalente@dig^0,c
  4355  000970  C0CC  F003         	movff	_dig_val,valor_equivalente@val
  4356  000974  C0CD  F004         	movff	_dig_val+1,valor_equivalente@val+1
  4357  000978  EC77  F00C         	call	_valor_equivalente	;wreg free
  4358  00097C  D015               	goto	i2l4238
  4359  00097E                     i2l4236:
  4360                           
  4361                           ; BSR set to: 0
  4362  00097E  C0D0  F068         	movff	_indice,??_isr
  4363  000982  C0D1  F069         	movff	_indice+1,??_isr+1
  4364                           
  4365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4366                           ; Switch size 1, requested type "simple"
  4367                           ; Number of cases is 1, Range of values is 0 to 0
  4368                           ; switch strategies available:
  4369                           ; Name         Instructions Cycles
  4370                           ; simple_byte            4     3 (average)
  4371                           ;	Chosen strategy is simple_byte
  4372  000986  5069               	movf	(??_isr+1)^0,w,c
  4373  000988  0A00               	xorlw	0	; case 0
  4374  00098A  A4D8               	btfss	status,2,c
  4375  00098C  D00D               	goto	i2l4238
  4376                           
  4377                           ; BSR set to: 0
  4378                           ; Switch size 1, requested type "simple"
  4379                           ; Number of cases is 4, Range of values is 0 to 3
  4380                           ; switch strategies available:
  4381                           ; Name         Instructions Cycles
  4382                           ; simple_byte           13     7 (average)
  4383                           ;	Chosen strategy is simple_byte
  4384  00098E  5068               	movf	??_isr^0,w,c
  4385  000990  0A00               	xorlw	0	; case 0
  4386  000992  B4D8               	btfsc	status,2,c
  4387  000994  D76E               	goto	i2l4226
  4388  000996  0A01               	xorlw	1	; case 1
  4389  000998  B4D8               	btfsc	status,2,c
  4390  00099A  D792               	goto	i2l4228
  4391  00099C  0A03               	xorlw	3	; case 2
  4392  00099E  B4D8               	btfsc	status,2,c
  4393  0009A0  D7B2               	goto	i2l4230
  4394  0009A2  0A01               	xorlw	1	; case 3
  4395  0009A4  B4D8               	btfsc	status,2,c
  4396  0009A6  D7D2               	goto	i2l4232
  4397  0009A8                     i2l4238:
  4398  0009A8  0100               	movlb	0	; () banked
  4399  0009AA  4BD0               	infsnz	_indice& (0+255),f,b
  4400  0009AC  2BD1               	incf	(_indice+1)& (0+255),f,b
  4401                           
  4402                           ; BSR set to: 0
  4403  0009AE  0E04               	movlw	4
  4404  0009B0  19D0               	xorwf	_indice& (0+255),w,b
  4405  0009B2  11D1               	iorwf	(_indice+1)& (0+255),w,b
  4406  0009B4  A4D8               	btfss	status,2,c
  4407  0009B6  D004               	goto	i2l4244
  4408                           
  4409                           ; BSR set to: 0
  4410  0009B8  0E00               	movlw	0
  4411  0009BA  6FD1               	movwf	(_indice+1)& (0+255),b
  4412  0009BC  0E00               	movlw	0
  4413  0009BE  6FD0               	movwf	_indice& (0+255),b
  4414  0009C0                     i2l4244:
  4415                           
  4416                           ; BSR set to: 0
  4417  0009C0  94F2               	bcf	242,2,c	;volatile
  4418  0009C2                     i2l184:
  4419  0009C2  C075  FFF5         	movff	??_isr+13,tablat
  4420  0009C6  C074  FFF8         	movff	??_isr+12,tblptru
  4421  0009CA  C073  FFF7         	movff	??_isr+11,tblptrh
  4422  0009CE  C072  FFF6         	movff	??_isr+10,tblptrl
  4423  0009D2  C071  FFF4         	movff	??_isr+9,prodh
  4424  0009D6  C070  FFF3         	movff	??_isr+8,prodl
  4425  0009DA  C06F  FFDA         	movff	??_isr+7,fsr2h
  4426  0009DE  C06E  FFD9         	movff	??_isr+6,fsr2l
  4427  0009E2  C06D  FFE2         	movff	??_isr+5,fsr1h
  4428  0009E6  C06C  FFE1         	movff	??_isr+4,fsr1l
  4429  0009EA  9276               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4430  0009EC  0011               	retfie		f
  4431  0009EE                     __end_of_isr:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function i2_strcat *****************
  4435 ;; Defined at:
  4436 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\strcat.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  dest            2   11[COMRAM] PTR unsigned char 
  4439 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  4440 ;;  src             1   13[COMRAM] PTR const unsigned char 
  4441 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  2   11[COMRAM] PTR unsigned char 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 3F/1
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4453 ;;      Params:         3       0       0       0       0       0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0
  4456 ;;      Totals:         3       0       0       0       0       0       0
  4457 ;;Total ram usage:        3 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 1
  4460 ;; This function calls:
  4461 ;;		i2_strcpy
  4462 ;;		i2_strlen
  4463 ;; This function is called by:
  4464 ;;		_isr
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text20
  4469  0021D4                     __ptext20:
  4470                           	callstack 0
  4471  0021D4                     i2_strcat:
  4472                           	callstack 20
  4473                           
  4474                           ; BSR set to: 1
  4475                           
  4476                           ;incstack = 0
  4477  0021D4  C00C  F001         	movff	i2strcat@dest,i2strlen@s
  4478  0021D8  C00D  F002         	movff	i2strcat@dest+1,i2strlen@s+1
  4479  0021DC  EC9E  F010         	call	i2_strlen	;wreg free
  4480  0021E0  5001               	movf	?i2_strlen^0,w,c
  4481  0021E2  240C               	addwf	i2strcat@dest^0,w,c
  4482  0021E4  6E05               	movwf	i2strcpy@dest^0,c
  4483  0021E6  5002               	movf	(?i2_strlen+1)^0,w,c
  4484  0021E8  200D               	addwfc	(i2strcat@dest+1)^0,w,c
  4485  0021EA  6E06               	movwf	(i2strcpy@dest+1)^0,c
  4486  0021EC  C00E  F007         	movff	i2strcat@src,i2strcpy@src
  4487  0021F0  EC54  F010         	call	i2_strcpy	;wreg free
  4488  0021F4  0012               	return		;funcret
  4489  0021F6                     __end_ofi2_strcat:
  4490                           	callstack 0
  4491                           
  4492 ;; *************** function i2_strcpy *****************
  4493 ;; Defined at:
  4494 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\strcpy.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4497 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  4498 ;;  src             1    6[COMRAM] PTR const unsigned char 
  4499 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  d               2    8[COMRAM] PTR unsigned char 
  4502 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  4503 ;;  s               1   10[COMRAM] PTR const unsigned char 
  4504 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2    4[COMRAM] PTR unsigned char 
  4507 ;; Registers used:
  4508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/1
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4514 ;;      Params:         3       0       0       0       0       0       0
  4515 ;;      Locals:         3       0       0       0       0       0       0
  4516 ;;      Temps:          1       0       0       0       0       0       0
  4517 ;;      Totals:         7       0       0       0       0       0       0
  4518 ;;Total ram usage:        7 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		i2_strcat
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text21
  4528  0020A8                     __ptext21:
  4529                           	callstack 0
  4530  0020A8                     i2_strcpy:
  4531                           	callstack 20
  4532                           
  4533                           ;incstack = 0
  4534  0020A8  C007  F00B         	movff	i2strcpy@src,i2strcpy@s
  4535  0020AC  C005  F009         	movff	i2strcpy@dest,i2strcpy@d
  4536  0020B0  C006  F00A         	movff	i2strcpy@dest+1,i2strcpy@d+1
  4537  0020B4                     i2l2574:
  4538  0020B4  2A0B               	incf	i2strcpy@s^0,f,c
  4539  0020B6  040B               	decf	i2strcpy@s^0,w,c
  4540  0020B8  6E08               	movwf	??i2_strcpy^0,c
  4541  0020BA  C008  FFF6         	movff	??i2_strcpy,tblptrl
  4542  0020BE                     	if	1	;There is more than 1 active tblptr byte
  4543  0020BE  0E06               	movlw	high __smallconst
  4544  0020C0  6EF7               	movwf	tblptrh,c
  4545  0020C2                     	endif
  4546  0020C2                     	if	0	;tblptru may be non-zero
  4547  0020C2                     	endif
  4548  0020C2                     	if	0	;tblptru may be non-zero
  4549  0020C2                     	endif
  4550  0020C2  C009  FFD9         	movff	i2strcpy@d,fsr2l
  4551  0020C6  C00A  FFDA         	movff	i2strcpy@d+1,fsr2h
  4552  0020CA  4A09               	infsnz	i2strcpy@d^0,f,c
  4553  0020CC  2A0A               	incf	(i2strcpy@d+1)^0,f,c
  4554  0020CE  0008               	tblrd		*
  4555  0020D0  CFF5 FFDF          	movff	tablat,indf2
  4556  0020D4  50DF               	movf	indf2,w,c
  4557  0020D6  B4D8               	btfsc	status,2,c
  4558  0020D8  0012               	return	
  4559  0020DA  D7EC               	goto	i2l2574
  4560  0020DC                     __end_ofi2_strcpy:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function i2_sprintf *****************
  4564 ;; Defined at:
  4565 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\nf_sprintf.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  s               2   85[COMRAM] PTR unsigned char 
  4568 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  4569 ;;  fmt             1   87[COMRAM] PTR const unsigned char 
  4570 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  f              11   92[COMRAM] struct _IO_FILE
  4573 ;;  ap              2   90[COMRAM] PTR void [1]
  4574 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  4575 ;;  ret             2    0        int 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  2   85[COMRAM] int 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/1
  4582 ;;		On exit  : 3F/1
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4585 ;;      Params:         5       0       0       0       0       0       0
  4586 ;;      Locals:        13       0       0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0
  4588 ;;      Totals:        18       0       0       0       0       0       0
  4589 ;;Total ram usage:       18 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 7
  4592 ;; This function calls:
  4593 ;;		i2_vfprintf
  4594 ;; This function is called by:
  4595 ;;		_isr
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text22
  4600  001F42                     __ptext22:
  4601                           	callstack 0
  4602  001F42                     i2_sprintf:
  4603                           	callstack 14
  4604                           
  4605                           ;incstack = 0
  4606  001F42  0E59               	movlw	low (?i2_sprintf+3)
  4607  001F44  6E5B               	movwf	i2sprintf@ap^0,c
  4608  001F46  6A5C               	clrf	(i2sprintf@ap+1)^0,c
  4609  001F48  C056  F05D         	movff	i2sprintf@s,i2sprintf@f
  4610  001F4C  C057  F05E         	movff	i2sprintf@s+1,i2sprintf@f+1
  4611  001F50  0E00               	movlw	0
  4612  001F52  6E61               	movwf	(i2sprintf@f+4)^0,c
  4613  001F54  0E00               	movlw	0
  4614  001F56  6E60               	movwf	(i2sprintf@f+3)^0,c
  4615  001F58  0E00               	movlw	0
  4616  001F5A  6E67               	movwf	(i2sprintf@f+10)^0,c
  4617  001F5C  0E00               	movlw	0
  4618  001F5E  6E66               	movwf	(i2sprintf@f+9)^0,c
  4619  001F60  0E5D               	movlw	low i2sprintf@f
  4620  001F62  6E50               	movwf	i2vfprintf@fp^0,c
  4621  001F64  6A51               	clrf	(i2vfprintf@fp+1)^0,c
  4622  001F66  C058  F052         	movff	i2sprintf@fmt,i2vfprintf@fmt
  4623  001F6A  0E5B               	movlw	low i2sprintf@ap
  4624  001F6C  6E53               	movwf	i2vfprintf@ap^0,c
  4625  001F6E  6A54               	clrf	(i2vfprintf@ap+1)^0,c
  4626  001F70  EC0A  F00F         	call	i2_vfprintf	;wreg free
  4627                           
  4628                           ; BSR set to: 1
  4629  001F74  5060               	movf	(i2sprintf@f+3)^0,w,c
  4630  001F76  2456               	addwf	i2sprintf@s^0,w,c
  4631  001F78  6ED9               	movwf	fsr2l,c
  4632  001F7A  5061               	movf	(i2sprintf@f+4)^0,w,c
  4633  001F7C  2057               	addwfc	(i2sprintf@s+1)^0,w,c
  4634  001F7E  6EDA               	movwf	fsr2h,c
  4635  001F80  0E00               	movlw	0
  4636  001F82  6EDF               	movwf	indf2,c
  4637                           
  4638                           ; BSR set to: 1
  4639  001F84  0012               	return		;funcret
  4640  001F86                     __end_ofi2_sprintf:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function i2_vfprintf *****************
  4644 ;; Defined at:
  4645 ;;		line 1390 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  4648 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4649 ;;  fmt             1   81[COMRAM] PTR const unsigned char 
  4650 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  4651 ;;  ap              2   82[COMRAM] PTR PTR void 
  4652 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  4655 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2   79[COMRAM] int 
  4658 ;; Registers used:
  4659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/1
  4662 ;;		On exit  : 3F/1
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4665 ;;      Params:         5       0       0       0       0       0       0
  4666 ;;      Locals:         1       0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0
  4668 ;;      Totals:         6       0       0       0       0       0       0
  4669 ;;Total ram usage:        6 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 6
  4672 ;; This function calls:
  4673 ;;		i2_vfpfcnvrt
  4674 ;; This function is called by:
  4675 ;;		i2_sprintf
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text23
  4680  001E14                     __ptext23:
  4681                           	callstack 0
  4682  001E14                     i2_vfprintf:
  4683                           	callstack 14
  4684                           
  4685                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FILE *fp, const char *fmt,
      +                           va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 1391: {;D:\MPLAB\pic\sources\c99\
      +                          common\doprnt.c: 1393:     char *cfmt;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1395:  
      +                             cfmt = (char *)fmt;
  4686                           
  4687                           ; BSR set to: 1
  4688                           ;incstack = 0
  4689  001E14  C052  F055         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4690                           
  4691                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
  4692  001E18  0E00               	movlw	0
  4693  001E1A  0101               	movlb	1	; () banked
  4694  001E1C  6F66               	movwf	(_nout+1)& (0+255),b
  4695  001E1E  0E00               	movlw	0
  4696  001E20  6F65               	movwf	_nout& (0+255),b
  4697                           
  4698                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt) {
  4699  001E22  D012               	goto	i2l4014
  4700  001E24                     i2l4012:
  4701                           
  4702                           ; BSR set to: 1
  4703                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1398:         nout += vfpfcnvrt(fp, &cfmt, ap
      +                          );
  4704  001E24  C050  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4705  001E28  C051  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  4706  001E2C  0E55               	movlw	low i2vfprintf@cfmt
  4707  001E2E  6E42               	movwf	i2vfpfcnvrt@fmt^0,c
  4708  001E30  6A43               	clrf	(i2vfpfcnvrt@fmt+1)^0,c
  4709  001E32  C053  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4710  001E36  C054  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  4711  001E3A  EC03  F008         	call	i2_vfpfcnvrt	;wreg free
  4712  001E3E  5040               	movf	?i2_vfpfcnvrt^0,w,c
  4713  001E40  0101               	movlb	1	; () banked
  4714  001E42  2765               	addwf	_nout& (0+255),f,b
  4715  001E44  5041               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  4716  001E46  2366               	addwfc	(_nout+1)& (0+255),f,b
  4717  001E48                     i2l4014:
  4718                           
  4719                           ; BSR set to: 1
  4720                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt) {
  4721  001E48  C055  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4722  001E4C                     	if	1	;There is more than 1 active tblptr byte
  4723  001E4C  0E06               	movlw	high __smallconst
  4724  001E4E  6EF7               	movwf	tblptrh,c
  4725  001E50                     	endif
  4726  001E50                     	if	0	;tblptru may be non-zero
  4727  001E50                     	endif
  4728  001E50                     	if	0	;tblptru may be non-zero
  4729  001E50                     	endif
  4730  001E50  0008               	tblrd		*
  4731  001E52  50F5               	movf	tablat,w,c
  4732  001E54  0900               	iorlw	0
  4733  001E56  A4D8               	btfss	status,2,c
  4734  001E58  D7E5               	goto	i2l4012
  4735                           
  4736                           ; BSR set to: 1
  4737                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1400:     return nout;
  4738  001E5A  C165  F050         	movff	_nout,?i2_vfprintf
  4739  001E5E  C166  F051         	movff	_nout+1,?i2_vfprintf+1
  4740                           
  4741                           ; BSR set to: 1
  4742  001E62  0012               	return		;funcret
  4743  001E64                     __end_ofi2_vfprintf:
  4744                           	callstack 0
  4745                           
  4746 ;; *************** function i2_vfpfcnvrt *****************
  4747 ;; Defined at:
  4748 ;;		line 692 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  4751 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4752 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  4753 ;;		 -> i2vfprintf@cfmt(1), vfprintf@cfmt(1), 
  4754 ;;  ap              2   67[COMRAM] PTR PTR void 
  4755 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  ll              8   71[COMRAM] long long 
  4758 ;;  llu             8    0        unsigned long long 
  4759 ;;  f               4    0        unsigned long long 
  4760 ;;  vp              3    0        PTR void 
  4761 ;;  ct              3    0        unsigned char [3]
  4762 ;;  cp              3    0        PTR unsigned char 
  4763 ;;  i               2    0        int 
  4764 ;;  done            2    0        int 
  4765 ;;  c               1    0        unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  2   63[COMRAM] int 
  4768 ;; Registers used:
  4769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/1
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4775 ;;      Params:         6       0       0       0       0       0       0
  4776 ;;      Locals:         8       0       0       0       0       0       0
  4777 ;;      Temps:          2       0       0       0       0       0       0
  4778 ;;      Totals:        16       0       0       0       0       0       0
  4779 ;;Total ram usage:       16 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 5
  4782 ;; This function calls:
  4783 ;;		i2_dtoa
  4784 ;;		i2_fputc
  4785 ;; This function is called by:
  4786 ;;		i2_vfprintf
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text24
  4791  001006                     __ptext24:
  4792                           	callstack 0
  4793  001006                     i2_vfpfcnvrt:
  4794                           	callstack 14
  4795                           
  4796                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 692: static int vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 693: {;D:\MPLAB\pic\sources\c9
      +                          9\common\doprnt.c: 694:     char c, *cp, ct[3];;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 695:     int done, i;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 696:     long long ll;
      +                          ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;;D:\MPLAB\pic
      +                          \sources\c99\common\doprnt.c: 698:     long double f;;D:\MPLAB\pic\sources\c99\common\do
      +                          prnt.c: 699:     void *vp;
  4797                           
  4798                           ; BSR set to: 1
  4799                           ;incstack = 0
  4800  001006  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4801  00100A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4802  00100E  CFDF FFF6          	movff	indf2,tblptrl
  4803  001012                     	if	1	;There is more than 1 active tblptr byte
  4804  001012  0E06               	movlw	high __smallconst
  4805  001014  6EF7               	movwf	tblptrh,c
  4806  001016                     	endif
  4807  001016                     	if	0	;tblptru may be non-zero
  4808  001016                     	endif
  4809  001016                     	if	0	;tblptru may be non-zero
  4810  001016                     	endif
  4811  001016  0008               	tblrd		*
  4812  001018  50F5               	movf	tablat,w,c
  4813  00101A  0A25               	xorlw	37
  4814  00101C  A4D8               	btfss	status,2,c
  4815  00101E  D092               	goto	i2l3992
  4816                           
  4817                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  4818  001020  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4819  001024  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4820  001028  2ADF               	incf	indf2,f,c
  4821                           
  4822                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 705:         flags = width = 0;
  4823  00102A  0E00               	movlw	0
  4824  00102C  0100               	movlb	0	; () banked
  4825  00102E  6FBF               	movwf	(_width+1)& (0+255),b
  4826  001030  0E00               	movlw	0
  4827  001032  6FBE               	movwf	_width& (0+255),b
  4828  001034  C0BE  F0C2         	movff	_width,_flags
  4829  001038  C0BF  F0C3         	movff	_width+1,_flags+1
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 706:         prec = -1;
  4833  00103C  69C0               	setf	_prec& (0+255),b
  4834  00103E  69C1               	setf	(_prec+1)& (0+255),b
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 847:         if ((*fmt[0] == 'd') || (*fmt[0]
      +                           == 'i')) {
  4838  001040  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4839  001044  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4840  001048  CFDF FFF6          	movff	indf2,tblptrl
  4841  00104C                     	if	1	;There is more than 1 active tblptr byte
  4842  00104C  0E06               	movlw	high __smallconst
  4843  00104E  6EF7               	movwf	tblptrh,c
  4844  001050                     	endif
  4845  001050                     	if	0	;tblptru may be non-zero
  4846  001050                     	endif
  4847  001050                     	if	0	;tblptru may be non-zero
  4848  001050                     	endif
  4849  001050  0008               	tblrd		*
  4850  001052  50F5               	movf	tablat,w,c
  4851  001054  0A64               	xorlw	100
  4852  001056  B4D8               	btfsc	status,2,c
  4853  001058  D00D               	goto	i2u409_40
  4854                           
  4855                           ; BSR set to: 0
  4856  00105A  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4857  00105E  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4858  001062  CFDF FFF6          	movff	indf2,tblptrl
  4859  001066                     	if	1	;There is more than 1 active tblptr byte
  4860  001066  0E06               	movlw	high __smallconst
  4861  001068  6EF7               	movwf	tblptrh,c
  4862  00106A                     	endif
  4863  00106A                     	if	0	;tblptru may be non-zero
  4864  00106A                     	endif
  4865  00106A                     	if	0	;tblptru may be non-zero
  4866  00106A                     	endif
  4867  00106A  0008               	tblrd		*
  4868  00106C  50F5               	movf	tablat,w,c
  4869  00106E  0A69               	xorlw	105
  4870  001070  A4D8               	btfss	status,2,c
  4871  001072  D03D               	goto	i2l3976
  4872  001074                     i2u409_40:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 849:             ++*fmt;
  4876  001074  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4877  001078  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4878  00107C  2ADF               	incf	indf2,f,c
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 850:             ll = (long long)(*(int *)__v
      +                          a_arg(*(int **)ap, (int)0));
  4882  00107E  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4883  001082  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4884  001086  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  4885  00108A  0E02               	movlw	2
  4886  00108C  26DE               	addwf	postinc2,f,c
  4887  00108E  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  4888  001092  0E00               	movlw	0
  4889  001094  22DD               	addwfc	postdec2,f,c
  4890  001096  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4891  00109A  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4892  00109E  CFDE F048          	movff	postinc2,i2vfpfcnvrt@ll
  4893  0010A2  CFDD F049          	movff	postdec2,i2vfpfcnvrt@ll+1
  4894  0010A6  0E00               	movlw	0
  4895  0010A8  BE49               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  4896  0010AA  0EFF               	movlw	-1
  4897  0010AC  6E4A               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  4898  0010AE  6E4B               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  4899  0010B0  6E4C               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  4900  0010B2  6E4D               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  4901  0010B4  6E4E               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  4902  0010B6  6E4F               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 852:             return dtoa(fp, ll);
  4906  0010B8  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  4907  0010BC  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  4908  0010C0  C048  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  4909  0010C4  C049  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  4910  0010C8  C04A  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  4911  0010CC  C04B  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  4912  0010D0  C04C  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  4913  0010D4  C04D  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  4914  0010D8  C04E  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  4915  0010DC  C04F  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  4916  0010E0  EC25  F006         	call	i2_dtoa	;wreg free
  4917  0010E4  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  4918  0010E8  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  4919  0010EC  0012               	return	
  4920  0010EE                     i2l3976:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1372:         if ((*fmt)[0] == '%') {
  4924  0010EE  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4925  0010F2  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4926  0010F6  CFDF FFF6          	movff	indf2,tblptrl
  4927  0010FA                     	if	1	;There is more than 1 active tblptr byte
  4928  0010FA  0E06               	movlw	high __smallconst
  4929  0010FC  6EF7               	movwf	tblptrh,c
  4930  0010FE                     	endif
  4931  0010FE                     	if	0	;tblptru may be non-zero
  4932  0010FE                     	endif
  4933  0010FE                     	if	0	;tblptru may be non-zero
  4934  0010FE                     	endif
  4935  0010FE  0008               	tblrd		*
  4936  001100  50F5               	movf	tablat,w,c
  4937  001102  0A25               	xorlw	37
  4938  001104  A4D8               	btfss	status,2,c
  4939  001106  D014               	goto	i2l3986
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1373:             ++*fmt;
  4943  001108  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4944  00110C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4945  001110  2ADF               	incf	indf2,f,c
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1374:             fputc((int)'%', fp);
  4949  001112  0E00               	movlw	0
  4950  001114  6E02               	movwf	(i2fputc@c+1)^0,c
  4951  001116  0E25               	movlw	37
  4952  001118  6E01               	movwf	i2fputc@c^0,c
  4953  00111A  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4954  00111E  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4955  001122  ECF3  F00D         	call	i2_fputc	;wreg free
  4956  001126                     i2l3982:
  4957                           
  4958                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1375:             return 1;
  4959  001126  0E00               	movlw	0
  4960  001128  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4961  00112A  0E01               	movlw	1
  4962  00112C  6E40               	movwf	?i2_vfpfcnvrt^0,c
  4963  00112E  0012               	return	
  4964  001130                     i2l3986:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  4968  001130  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4969  001134  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4970  001138  2ADF               	incf	indf2,f,c
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1380:         return 0;
  4974  00113A  0E00               	movlw	0
  4975  00113C  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4976  00113E  0E00               	movlw	0
  4977  001140  6E40               	movwf	?i2_vfpfcnvrt^0,c
  4978  001142  0012               	return	
  4979  001144                     i2l3992:
  4980                           
  4981                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(*fmt)[0], fp);
  4982  001144  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4983  001148  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4984  00114C  CFDF FFF6          	movff	indf2,tblptrl
  4985  001150                     	if	1	;There is more than 1 active tblptr byte
  4986  001150  0E06               	movlw	high __smallconst
  4987  001152  6EF7               	movwf	tblptrh,c
  4988  001154                     	endif
  4989  001154                     	if	0	;tblptru may be non-zero
  4990  001154                     	endif
  4991  001154                     	if	0	;tblptru may be non-zero
  4992  001154                     	endif
  4993  001154  0008               	tblrd		*
  4994  001156  50F5               	movf	tablat,w,c
  4995  001158  6E01               	movwf	i2fputc@c^0,c
  4996  00115A  6A02               	clrf	(i2fputc@c+1)^0,c
  4997  00115C  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4998  001160  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4999  001164  ECF3  F00D         	call	i2_fputc	;wreg free
  5000                           
  5001                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5002  001168  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5003  00116C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5004  001170  2ADF               	incf	indf2,f,c
  5005  001172  D7D9               	goto	i2l3982
  5006  001174                     __end_ofi2_vfpfcnvrt:
  5007                           	callstack 0
  5008                           
  5009 ;; *************** function i2_dtoa *****************
  5010 ;; Defined at:
  5011 ;;		line 287 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5014 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5015 ;;  d               8   29[COMRAM] long long 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  n               8   53[COMRAM] long long 
  5018 ;;  i               2   61[COMRAM] int 
  5019 ;;  s               2   51[COMRAM] int 
  5020 ;;  w               2   49[COMRAM] int 
  5021 ;;  p               2   47[COMRAM] int 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  2   27[COMRAM] int 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 3F/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5031 ;;      Params:        10       0       0       0       0       0       0
  5032 ;;      Locals:        18       0       0       0       0       0       0
  5033 ;;      Temps:          8       0       0       0       0       0       0
  5034 ;;      Totals:        36       0       0       0       0       0       0
  5035 ;;Total ram usage:       36 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 4
  5038 ;; This function calls:
  5039 ;;		i2___aodiv
  5040 ;;		i2___aomod
  5041 ;;		i2_abs
  5042 ;;		i2_pad
  5043 ;; This function is called by:
  5044 ;;		i2_vfpfcnvrt
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text25
  5049  000C4A                     __ptext25:
  5050                           	callstack 0
  5051  000C4A                     i2_dtoa:
  5052                           	callstack 14
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 287: static int dtoa(FILE *fp, long long d);D
      +                          :\MPLAB\pic\sources\c99\common\doprnt.c: 288: {;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 289:     int i, p, s, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 290:     long long 
      +                          n;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 293:     n = d;
  5056                           
  5057                           ;incstack = 0
  5058  000C4A  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  5059  000C4E  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  5060  000C52  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  5061  000C56  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  5062  000C5A  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  5063  000C5E  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  5064  000C62  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  5065  000C66  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 294:     s = n < 0 ? 1 : 0;
  5069  000C6A  AE3D               	btfss	(i2dtoa@n+7)^0,7,c
  5070  000C6C  D002               	goto	i2u344_40
  5071  000C6E  0E01               	movlw	1
  5072  000C70  D001               	goto	i2u345_40
  5073  000C72                     i2u344_40:
  5074  000C72  0E00               	movlw	0
  5075  000C74                     i2u345_40:
  5076  000C74  6E34               	movwf	i2dtoa@s^0,c
  5077  000C76  6A35               	clrf	(i2dtoa@s+1)^0,c
  5078                           
  5079                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5080  000C78  5034               	movf	i2dtoa@s^0,w,c
  5081  000C7A  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  5082  000C7C  B4D8               	btfsc	status,2,c
  5083  000C7E  D010               	goto	i2l3388
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 296:         n = -n;
  5087  000C80  1E3D               	comf	(i2dtoa@n+7)^0,f,c
  5088  000C82  1E3C               	comf	(i2dtoa@n+6)^0,f,c
  5089  000C84  1E3B               	comf	(i2dtoa@n+5)^0,f,c
  5090  000C86  1E3A               	comf	(i2dtoa@n+4)^0,f,c
  5091  000C88  1E39               	comf	(i2dtoa@n+3)^0,f,c
  5092  000C8A  1E38               	comf	(i2dtoa@n+2)^0,f,c
  5093  000C8C  1E37               	comf	(i2dtoa@n+1)^0,f,c
  5094  000C8E  6C36               	negf	i2dtoa@n^0,c
  5095  000C90  0E00               	movlw	0
  5096  000C92  2237               	addwfc	(i2dtoa@n+1)^0,f,c
  5097  000C94  2238               	addwfc	(i2dtoa@n+2)^0,f,c
  5098  000C96  2239               	addwfc	(i2dtoa@n+3)^0,f,c
  5099  000C98  223A               	addwfc	(i2dtoa@n+4)^0,f,c
  5100  000C9A  223B               	addwfc	(i2dtoa@n+5)^0,f,c
  5101  000C9C  223C               	addwfc	(i2dtoa@n+6)^0,f,c
  5102  000C9E  223D               	addwfc	(i2dtoa@n+7)^0,f,c
  5103  000CA0                     i2l3388:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 300:     if (!(prec < 0)) {
  5107  000CA0  AFC1               	btfss	(_prec+1)& (0+255),7,b
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 301:         flags &= ~(1 << 1);
  5111  000CA2  93C2               	bcf	_flags& (0+255),1,b
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 303:     p = (0 < prec) ? prec : 1;
  5115  000CA4  BFC1               	btfsc	(_prec+1)& (0+255),7,b
  5116  000CA6  D005               	goto	i2u348_40
  5117  000CA8  51C1               	movf	(_prec+1)& (0+255),w,b
  5118  000CAA  E108               	bnz	i2l903
  5119  000CAC  05C0               	decf	_prec& (0+255),w,b
  5120  000CAE  B0D8               	btfsc	status,0,c
  5121  000CB0  D005               	goto	i2l903
  5122  000CB2                     i2u348_40:
  5123                           
  5124                           ; BSR set to: 0
  5125  000CB2  0E00               	movlw	0
  5126  000CB4  6E31               	movwf	(i2dtoa@p+1)^0,c
  5127  000CB6  0E01               	movlw	1
  5128  000CB8  6E30               	movwf	i2dtoa@p^0,c
  5129  000CBA  D004               	goto	i2l905
  5130  000CBC                     i2l903:
  5131                           
  5132                           ; BSR set to: 0
  5133  000CBC  C0C0  F030         	movff	_prec,i2dtoa@p
  5134  000CC0  C0C1  F031         	movff	_prec+1,i2dtoa@p+1
  5135  000CC4                     i2l905:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 304:     w = width;
  5139  000CC4  C0BE  F032         	movff	_width,i2dtoa@w
  5140  000CC8  C0BF  F033         	movff	_width+1,i2dtoa@w+1
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 305:     if (s || (flags & (1 << 2))) {
  5144  000CCC  5034               	movf	i2dtoa@s^0,w,c
  5145  000CCE  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  5146  000CD0  A4D8               	btfss	status,2,c
  5147  000CD2  D002               	goto	i2u350_40
  5148                           
  5149                           ; BSR set to: 0
  5150  000CD4  A5C2               	btfss	_flags& (0+255),2,b
  5151  000CD6  D003               	goto	i2l3402
  5152  000CD8                     i2u350_40:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 306:         --w;
  5156  000CD8  0632               	decf	i2dtoa@w^0,f,c
  5157  000CDA  A0D8               	btfss	status,0,c
  5158  000CDC  0633               	decf	(i2dtoa@w+1)^0,f,c
  5159  000CDE                     i2l3402:
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 310:     i = sizeof(dbuf) - 1;
  5163  000CDE  0E00               	movlw	0
  5164  000CE0  6E3F               	movwf	(i2dtoa@i+1)^0,c
  5165  000CE2  0E1F               	movlw	31
  5166  000CE4  6E3E               	movwf	i2dtoa@i^0,c
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] = '\0';
  5170  000CE6  0E00               	movlw	0
  5171  000CE8  0101               	movlb	1	; () banked
  5172  000CEA  6F8E               	movwf	(_dbuf+31)& (0+255),b
  5173                           
  5174                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  5175  000CEC  D07C               	goto	i2l3416
  5176  000CEE                     i2l3406:
  5177                           
  5178                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 313:         --i;
  5179  000CEE  063E               	decf	i2dtoa@i^0,f,c
  5180  000CF0  A0D8               	btfss	status,0,c
  5181  000CF2  063F               	decf	(i2dtoa@i+1)^0,f,c
  5182                           
  5183                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 314:         dbuf[i] = (char)((int)'0' + abs(
      +                          n % 10));
  5184  000CF4  0E6F               	movlw	low _dbuf
  5185  000CF6  243E               	addwf	i2dtoa@i^0,w,c
  5186  000CF8  6ED9               	movwf	fsr2l,c
  5187  000CFA  0E01               	movlw	high _dbuf
  5188  000CFC  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  5189  000CFE  6EDA               	movwf	fsr2h,c
  5190  000D00  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  5191  000D04  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  5192  000D08  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  5193  000D0C  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  5194  000D10  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  5195  000D14  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  5196  000D18  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  5197  000D1C  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  5198  000D20  0E0A               	movlw	10
  5199  000D22  6E09               	movwf	i2___aomod@divisor^0,c
  5200  000D24  0E00               	movlw	0
  5201  000D26  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  5202  000D28  0E00               	movlw	0
  5203  000D2A  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  5204  000D2C  0E00               	movlw	0
  5205  000D2E  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  5206  000D30  0E00               	movlw	0
  5207  000D32  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  5208  000D34  0E00               	movlw	0
  5209  000D36  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  5210  000D38  0E00               	movlw	0
  5211  000D3A  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  5212  000D3C  0E00               	movlw	0
  5213  000D3E  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  5214  000D40  ECE5  F00B         	call	i2___aomod	;wreg free
  5215  000D44  C001  F026         	movff	?i2___aomod,??i2_dtoa
  5216  000D48  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  5217  000D4C  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  5218  000D50  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  5219  000D54  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  5220  000D58  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  5221  000D5C  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  5222  000D60  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  5223  000D64  C026  F013         	movff	??i2_dtoa,i2abs@a
  5224  000D68  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  5225  000D6C  EC6E  F010         	call	i2_abs	;wreg free
  5226  000D70  5013               	movf	?i2_abs^0,w,c
  5227  000D72  0F30               	addlw	48
  5228  000D74  6EDF               	movwf	indf2,c
  5229                           
  5230                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 315:         --p;
  5231  000D76  0630               	decf	i2dtoa@p^0,f,c
  5232  000D78  A0D8               	btfss	status,0,c
  5233  000D7A  0631               	decf	(i2dtoa@p+1)^0,f,c
  5234                           
  5235                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 316:         --w;
  5236  000D7C  0632               	decf	i2dtoa@w^0,f,c
  5237  000D7E  A0D8               	btfss	status,0,c
  5238  000D80  0633               	decf	(i2dtoa@w+1)^0,f,c
  5239                           
  5240                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 317:         n = n / 10;
  5241  000D82  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  5242  000D86  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  5243  000D8A  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  5244  000D8E  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  5245  000D92  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  5246  000D96  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  5247  000D9A  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  5248  000D9E  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  5249  000DA2  0E0A               	movlw	10
  5250  000DA4  6E09               	movwf	i2___aodiv@divisor^0,c
  5251  000DA6  0E00               	movlw	0
  5252  000DA8  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  5253  000DAA  0E00               	movlw	0
  5254  000DAC  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  5255  000DAE  0E00               	movlw	0
  5256  000DB0  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  5257  000DB2  0E00               	movlw	0
  5258  000DB4  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  5259  000DB6  0E00               	movlw	0
  5260  000DB8  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  5261  000DBA  0E00               	movlw	0
  5262  000DBC  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  5263  000DBE  0E00               	movlw	0
  5264  000DC0  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  5265  000DC2  EC6D  F009         	call	i2___aodiv	;wreg free
  5266  000DC6  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  5267  000DCA  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  5268  000DCE  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  5269  000DD2  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  5270  000DD6  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  5271  000DDA  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  5272  000DDE  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  5273  000DE2  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  5274  000DE6                     i2l3416:
  5275                           
  5276                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  5277  000DE6  BE3F               	btfsc	(i2dtoa@i+1)^0,7,c
  5278  000DE8  D020               	goto	i2u355_40
  5279  000DEA  503F               	movf	(i2dtoa@i+1)^0,w,c
  5280  000DEC  E103               	bnz	i2u351_40
  5281  000DEE  043E               	decf	i2dtoa@i^0,w,c
  5282  000DF0  A0D8               	btfss	status,0,c
  5283  000DF2  D01B               	goto	i2u355_40
  5284  000DF4                     i2u351_40:
  5285  000DF4  5036               	movf	i2dtoa@n^0,w,c
  5286  000DF6  1037               	iorwf	(i2dtoa@n+1)^0,w,c
  5287  000DF8  1038               	iorwf	(i2dtoa@n+2)^0,w,c
  5288  000DFA  1039               	iorwf	(i2dtoa@n+3)^0,w,c
  5289  000DFC  103A               	iorwf	(i2dtoa@n+4)^0,w,c
  5290  000DFE  103B               	iorwf	(i2dtoa@n+5)^0,w,c
  5291  000E00  103C               	iorwf	(i2dtoa@n+6)^0,w,c
  5292  000E02  103D               	iorwf	(i2dtoa@n+7)^0,w,c
  5293  000E04  A4D8               	btfss	status,2,c
  5294  000E06  D773               	goto	i2l3406
  5295  000E08  BE31               	btfsc	(i2dtoa@p+1)^0,7,c
  5296  000E0A  D005               	goto	i2u353_40
  5297  000E0C  5031               	movf	(i2dtoa@p+1)^0,w,c
  5298  000E0E  E102               	bnz	i2u353_41
  5299  000E10  0430               	decf	i2dtoa@p^0,w,c
  5300  000E12  B0D8               	btfsc	status,0,c
  5301  000E14                     i2u353_41:
  5302  000E14  D76C               	goto	i2l3406
  5303  000E16                     i2u353_40:
  5304  000E16  BE33               	btfsc	(i2dtoa@w+1)^0,7,c
  5305  000E18  D008               	goto	i2u355_40
  5306  000E1A  5033               	movf	(i2dtoa@w+1)^0,w,c
  5307  000E1C  E103               	bnz	i2u354_40
  5308  000E1E  0432               	decf	i2dtoa@w^0,w,c
  5309  000E20  A0D8               	btfss	status,0,c
  5310  000E22  D003               	goto	i2u355_40
  5311  000E24                     i2u354_40:
  5312  000E24  0100               	movlb	0	; () banked
  5313  000E26  B3C2               	btfsc	_flags& (0+255),1,b
  5314  000E28  D762               	goto	i2l3406
  5315  000E2A                     i2u355_40:
  5316                           
  5317                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 321:     if (s || (flags & (1 << 2))) {
  5318  000E2A  5034               	movf	i2dtoa@s^0,w,c
  5319  000E2C  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  5320  000E2E  A4D8               	btfss	status,2,c
  5321  000E30  D003               	goto	i2u357_40
  5322  000E32  0100               	movlb	0	; () banked
  5323  000E34  A5C2               	btfss	_flags& (0+255),2,b
  5324  000E36  D017               	goto	i2l3440
  5325  000E38                     i2u357_40:
  5326                           
  5327                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 322:         --i;
  5328  000E38  063E               	decf	i2dtoa@i^0,f,c
  5329  000E3A  A0D8               	btfss	status,0,c
  5330  000E3C  063F               	decf	(i2dtoa@i+1)^0,f,c
  5331                           
  5332                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 323:         dbuf[i] = s ? '-' : '+';
  5333  000E3E  5034               	movf	i2dtoa@s^0,w,c
  5334  000E40  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  5335  000E42  A4D8               	btfss	status,2,c
  5336  000E44  D004               	goto	i2l3436
  5337  000E46  0E00               	movlw	0
  5338  000E48  6E2F               	movwf	(i2_dtoa$1121+1)^0,c
  5339  000E4A  0E2B               	movlw	43
  5340  000E4C  D003               	goto	L3
  5341  000E4E                     i2l3436:
  5342  000E4E  0E00               	movlw	0
  5343  000E50  6E2F               	movwf	(i2_dtoa$1121+1)^0,c
  5344  000E52  0E2D               	movlw	45
  5345  000E54                     L3:
  5346  000E54  6E2E               	movwf	i2_dtoa$1121^0,c
  5347  000E56  0E6F               	movlw	low _dbuf
  5348  000E58  243E               	addwf	i2dtoa@i^0,w,c
  5349  000E5A  6ED9               	movwf	fsr2l,c
  5350  000E5C  0E01               	movlw	high _dbuf
  5351  000E5E  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  5352  000E60  6EDA               	movwf	fsr2h,c
  5353  000E62  C02E  FFDF         	movff	i2_dtoa$1121,indf2
  5354  000E66                     i2l3440:
  5355                           
  5356                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 327:     return pad(fp, &dbuf[i], w);
  5357  000E66  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  5358  000E6A  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  5359  000E6E  0E6F               	movlw	low _dbuf
  5360  000E70  243E               	addwf	i2dtoa@i^0,w,c
  5361  000E72  6E13               	movwf	i2pad@buf^0,c
  5362  000E74  0E01               	movlw	high _dbuf
  5363  000E76  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  5364  000E78  6E14               	movwf	(i2pad@buf+1)^0,c
  5365  000E7A  C032  F015         	movff	i2dtoa@w,i2pad@p
  5366  000E7E  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  5367  000E82  EC43  F00E         	call	i2_pad	;wreg free
  5368  000E86  C011  F01C         	movff	?i2_pad,?i2_dtoa
  5369  000E8A  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  5370  000E8E  0012               	return		;funcret
  5371  000E90                     __end_ofi2_dtoa:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function i2_pad *****************
  5375 ;; Defined at:
  5376 ;;		line 72 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5379 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5380 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5381 ;;		 -> dbuf(32), 
  5382 ;;  p               2   20[COMRAM] int 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  w               2   25[COMRAM] int 
  5385 ;;  i               2   23[COMRAM] int 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  2   16[COMRAM] int 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5395 ;;      Params:         6       0       0       0       0       0       0
  5396 ;;      Locals:         4       0       0       0       0       0       0
  5397 ;;      Temps:          1       0       0       0       0       0       0
  5398 ;;      Totals:        11       0       0       0       0       0       0
  5399 ;;Total ram usage:       11 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 3
  5402 ;; This function calls:
  5403 ;;		i2_fputc
  5404 ;;		i2_fputs
  5405 ;;		i2_strlen
  5406 ;; This function is called by:
  5407 ;;		i2_dtoa
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text26
  5412  001C86                     __ptext26:
  5413                           	callstack 0
  5414  001C86                     i2_pad:
  5415                           	callstack 14
  5416                           
  5417                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, char *buf, int p
      +                          );D:\MPLAB\pic\sources\c99\common\doprnt.c: 73: {;D:\MPLAB\pic\sources\c99\common\doprnt
      +                          .c: 74:     int i, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 <
      +                          < 0)) {
  5418                           
  5419                           ;incstack = 0
  5420  001C86  0100               	movlb	0	; () banked
  5421  001C88  A1C2               	btfss	_flags& (0+255),0,b
  5422  001C8A  D00A               	goto	i2l3298
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *)buf, fp);
  5426  001C8C  C013  F00A         	movff	i2pad@buf,i2fputs@s
  5427  001C90  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  5428  001C94  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  5429  001C98  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  5430  001C9C  EC04  F010         	call	i2_fputs	;wreg free
  5431  001CA0                     i2l3298:
  5432                           
  5433                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
  5434  001CA0  BE16               	btfsc	(i2pad@p+1)^0,7,c
  5435  001CA2  D005               	goto	i2l3302
  5436  001CA4  C015  F01A         	movff	i2pad@p,i2pad@w
  5437  001CA8  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  5438  001CAC  D004               	goto	i2l892
  5439  001CAE                     i2l3302:
  5440  001CAE  0E00               	movlw	0
  5441  001CB0  6E1B               	movwf	(i2pad@w+1)^0,c
  5442  001CB2  0E00               	movlw	0
  5443  001CB4  6E1A               	movwf	i2pad@w^0,c
  5444  001CB6                     i2l892:
  5445                           
  5446                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5447  001CB6  0E00               	movlw	0
  5448  001CB8  6E19               	movwf	(i2pad@i+1)^0,c
  5449  001CBA  0E00               	movlw	0
  5450  001CBC  6E18               	movwf	i2pad@i^0,c
  5451                           
  5452                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  5453  001CBE  D00C               	goto	i2l3308
  5454  001CC0                     i2l3304:
  5455                           
  5456                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
  5457  001CC0  0E00               	movlw	0
  5458  001CC2  6E02               	movwf	(i2fputc@c+1)^0,c
  5459  001CC4  0E20               	movlw	32
  5460  001CC6  6E01               	movwf	i2fputc@c^0,c
  5461  001CC8  C011  F003         	movff	i2pad@fp,i2fputc@fp
  5462  001CCC  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  5463  001CD0  ECF3  F00D         	call	i2_fputc	;wreg free
  5464                           
  5465                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5466  001CD4  4A18               	infsnz	i2pad@i^0,f,c
  5467  001CD6  2A19               	incf	(i2pad@i+1)^0,f,c
  5468  001CD8                     i2l3308:
  5469                           
  5470                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  5471  001CD8  501A               	movf	i2pad@w^0,w,c
  5472  001CDA  5C18               	subwf	i2pad@i^0,w,c
  5473  001CDC  5019               	movf	(i2pad@i+1)^0,w,c
  5474  001CDE  0A80               	xorlw	128
  5475  001CE0  6E17               	movwf	??i2_pad^0,c
  5476  001CE2  501B               	movf	(i2pad@w+1)^0,w,c
  5477  001CE4  0A80               	xorlw	128
  5478  001CE6  5817               	subwfb	??i2_pad^0,w,c
  5479  001CE8  A0D8               	btfss	status,0,c
  5480  001CEA  D7EA               	goto	i2l3304
  5481                           
  5482                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))) {
  5483  001CEC  0100               	movlb	0	; () banked
  5484  001CEE  B1C2               	btfsc	_flags& (0+255),0,b
  5485  001CF0  D00A               	goto	i2l3312
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *)buf, fp);
  5489  001CF2  C013  F00A         	movff	i2pad@buf,i2fputs@s
  5490  001CF6  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  5491  001CFA  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  5492  001CFE  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  5493  001D02  EC04  F010         	call	i2_fputs	;wreg free
  5494  001D06                     i2l3312:
  5495                           
  5496                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 94:     return (int)(strlen(buf) + (size_t)w)
      +                          ;
  5497  001D06  C013  F001         	movff	i2pad@buf,i2strlen@s
  5498  001D0A  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  5499  001D0E  EC9E  F010         	call	i2_strlen	;wreg free
  5500  001D12  501A               	movf	i2pad@w^0,w,c
  5501  001D14  2401               	addwf	?i2_strlen^0,w,c
  5502  001D16  6E11               	movwf	?i2_pad^0,c
  5503  001D18  501B               	movf	(i2pad@w+1)^0,w,c
  5504  001D1A  2002               	addwfc	(?i2_strlen+1)^0,w,c
  5505  001D1C  6E12               	movwf	(?i2_pad+1)^0,c
  5506  001D1E  0012               	return		;funcret
  5507  001D20                     __end_ofi2_pad:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function i2_strlen *****************
  5511 ;; Defined at:
  5512 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\strlen.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5515 ;;		 -> dbuf(32), isr@str_598(20), isr@str(20), main@str(8), 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5518 ;;		 -> dbuf(32), isr@str_598(20), isr@str(20), main@str(8), 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  2    0[COMRAM] unsigned int 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/1
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5528 ;;      Params:         2       0       0       0       0       0       0
  5529 ;;      Locals:         2       0       0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0
  5531 ;;      Totals:         4       0       0       0       0       0       0
  5532 ;;Total ram usage:        4 bytes
  5533 ;; Hardware stack levels used: 1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		i2_pad
  5538 ;;		i2_strcat
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text27
  5543  00213C                     __ptext27:
  5544                           	callstack 0
  5545  00213C                     i2_strlen:
  5546                           	callstack 20
  5547                           
  5548                           ;incstack = 0
  5549  00213C  C001  F003         	movff	i2strlen@s,i2strlen@a
  5550  002140  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  5551  002144  D002               	goto	i2l3102
  5552  002146                     i2l3100:
  5553  002146  4A01               	infsnz	i2strlen@s^0,f,c
  5554  002148  2A02               	incf	(i2strlen@s+1)^0,f,c
  5555  00214A                     i2l3102:
  5556  00214A  C001  FFD9         	movff	i2strlen@s,fsr2l
  5557  00214E  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  5558  002152  50DF               	movf	indf2,w,c
  5559  002154  A4D8               	btfss	status,2,c
  5560  002156  D7F7               	goto	i2l3100
  5561  002158  5003               	movf	i2strlen@a^0,w,c
  5562  00215A  5C01               	subwf	i2strlen@s^0,w,c
  5563  00215C  6E01               	movwf	?i2_strlen^0,c
  5564  00215E  5004               	movf	(i2strlen@a+1)^0,w,c
  5565  002160  5802               	subwfb	(i2strlen@s+1)^0,w,c
  5566  002162  6E02               	movwf	(?i2_strlen+1)^0,c
  5567  002164  0012               	return		;funcret
  5568  002166                     __end_ofi2_strlen:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function i2_fputs *****************
  5572 ;; Defined at:
  5573 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputs.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5576 ;;		 -> dbuf(32), 
  5577 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5578 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  i               2   14[COMRAM] int 
  5581 ;;  c               1   13[COMRAM] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  2    9[COMRAM] int 
  5584 ;; Registers used:
  5585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 3F/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5591 ;;      Params:         4       0       0       0       0       0       0
  5592 ;;      Locals:         3       0       0       0       0       0       0
  5593 ;;      Temps:          0       0       0       0       0       0       0
  5594 ;;      Totals:         7       0       0       0       0       0       0
  5595 ;;Total ram usage:        7 bytes
  5596 ;; Hardware stack levels used: 1
  5597 ;; Hardware stack levels required when called: 2
  5598 ;; This function calls:
  5599 ;;		i2_fputc
  5600 ;; This function is called by:
  5601 ;;		i2_pad
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text28
  5606  002008                     __ptext28:
  5607                           	callstack 0
  5608  002008                     i2_fputs:
  5609                           	callstack 14
  5610                           
  5611                           ; BSR set to: 0
  5612                           
  5613                           ;incstack = 0
  5614  002008  0E00               	movlw	0
  5615  00200A  6E10               	movwf	(i2fputs@i+1)^0,c
  5616  00200C  0E00               	movlw	0
  5617  00200E  6E0F               	movwf	i2fputs@i^0,c
  5618  002010  D00B               	goto	i2l3096
  5619  002012                     i2l3092:
  5620  002012  C00E  F001         	movff	i2fputs@c,i2fputc@c
  5621  002016  6A02               	clrf	(i2fputc@c+1)^0,c
  5622  002018  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  5623  00201C  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  5624  002020  ECF3  F00D         	call	i2_fputc	;wreg free
  5625  002024  4A0F               	infsnz	i2fputs@i^0,f,c
  5626  002026  2A10               	incf	(i2fputs@i+1)^0,f,c
  5627  002028                     i2l3096:
  5628  002028  500F               	movf	i2fputs@i^0,w,c
  5629  00202A  240A               	addwf	i2fputs@s^0,w,c
  5630  00202C  6ED9               	movwf	fsr2l,c
  5631  00202E  5010               	movf	(i2fputs@i+1)^0,w,c
  5632  002030  200B               	addwfc	(i2fputs@s+1)^0,w,c
  5633  002032  6EDA               	movwf	fsr2h,c
  5634  002034  50DF               	movf	indf2,w,c
  5635  002036  6E0E               	movwf	i2fputs@c^0,c
  5636  002038  500E               	movf	i2fputs@c^0,w,c
  5637  00203A  B4D8               	btfsc	status,2,c
  5638  00203C  0012               	return	
  5639  00203E  D7E9               	goto	i2l3092
  5640  002040                     __end_ofi2_fputs:
  5641                           	callstack 0
  5642                           
  5643 ;; *************** function i2_fputc *****************
  5644 ;; Defined at:
  5645 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputc.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  c               2    0[COMRAM] int 
  5648 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5649 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  2    0[COMRAM] int 
  5654 ;; Registers used:
  5655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5661 ;;      Params:         4       0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0
  5663 ;;      Temps:          5       0       0       0       0       0       0
  5664 ;;      Totals:         9       0       0       0       0       0       0
  5665 ;;Total ram usage:        9 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; Hardware stack levels required when called: 1
  5668 ;; This function calls:
  5669 ;;		i2_putch
  5670 ;; This function is called by:
  5671 ;;		i2_pad
  5672 ;;		i2_vfpfcnvrt
  5673 ;;		i2_fputs
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text29
  5678  001BE6                     __ptext29:
  5679                           	callstack 0
  5680  001BE6                     i2_fputc:
  5681                           	callstack 17
  5682                           
  5683                           ;incstack = 0
  5684  001BE6  5003               	movf	i2fputc@fp^0,w,c
  5685  001BE8  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  5686  001BEA  B4D8               	btfsc	status,2,c
  5687  001BEC  D004               	goto	i2u286_40
  5688  001BEE  5003               	movf	i2fputc@fp^0,w,c
  5689  001BF0  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  5690  001BF2  A4D8               	btfss	status,2,c
  5691  001BF4  D004               	goto	i2l3064
  5692  001BF6                     i2u286_40:
  5693  001BF6  5001               	movf	i2fputc@c^0,w,c
  5694  001BF8  EC08  F011         	call	i2_putch
  5695  001BFC  0012               	return	
  5696  001BFE                     i2l3064:
  5697  001BFE  EE20 F009          	lfsr	2,9
  5698  001C02  5003               	movf	i2fputc@fp^0,w,c
  5699  001C04  26D9               	addwf	fsr2l,f,c
  5700  001C06  5004               	movf	(i2fputc@fp+1)^0,w,c
  5701  001C08  22DA               	addwfc	fsr2h,f,c
  5702  001C0A  50DE               	movf	postinc2,w,c
  5703  001C0C  10DE               	iorwf	postinc2,w,c
  5704  001C0E  B4D8               	btfsc	status,2,c
  5705  001C10  D016               	goto	i2u288_40
  5706  001C12  EE20 F009          	lfsr	2,9
  5707  001C16  5003               	movf	i2fputc@fp^0,w,c
  5708  001C18  26D9               	addwf	fsr2l,f,c
  5709  001C1A  5004               	movf	(i2fputc@fp+1)^0,w,c
  5710  001C1C  22DA               	addwfc	fsr2h,f,c
  5711  001C1E  EE10 F003          	lfsr	1,3
  5712  001C22  5003               	movf	i2fputc@fp^0,w,c
  5713  001C24  26E1               	addwf	fsr1l,f,c
  5714  001C26  5004               	movf	(i2fputc@fp+1)^0,w,c
  5715  001C28  22E2               	addwfc	fsr1h,f,c
  5716  001C2A  50DE               	movf	postinc2,w,c
  5717  001C2C  5CE6               	subwf	postinc1,w,c
  5718  001C2E  50E6               	movf	postinc1,w,c
  5719  001C30  0A80               	xorlw	128
  5720  001C32  6E09               	movwf	(??i2_fputc+4)^0,c
  5721  001C34  50DE               	movf	postinc2,w,c
  5722  001C36  0A80               	xorlw	128
  5723  001C38  5809               	subwfb	(??i2_fputc+4)^0,w,c
  5724  001C3A  B0D8               	btfsc	status,0,c
  5725  001C3C  0012               	return	
  5726  001C3E                     i2u288_40:
  5727  001C3E  EE20 F003          	lfsr	2,3
  5728  001C42  5003               	movf	i2fputc@fp^0,w,c
  5729  001C44  26D9               	addwf	fsr2l,f,c
  5730  001C46  5004               	movf	(i2fputc@fp+1)^0,w,c
  5731  001C48  22DA               	addwfc	fsr2h,f,c
  5732  001C4A  CFDE F005          	movff	postinc2,??i2_fputc
  5733  001C4E  CFDD F006          	movff	postdec2,??i2_fputc+1
  5734  001C52  C003  FFD9         	movff	i2fputc@fp,fsr2l
  5735  001C56  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  5736  001C5A  CFDE F007          	movff	postinc2,??i2_fputc+2
  5737  001C5E  CFDD F008          	movff	postdec2,??i2_fputc+3
  5738  001C62  5005               	movf	??i2_fputc^0,w,c
  5739  001C64  2407               	addwf	(??i2_fputc+2)^0,w,c
  5740  001C66  6ED9               	movwf	fsr2l,c
  5741  001C68  5006               	movf	(??i2_fputc+1)^0,w,c
  5742  001C6A  2008               	addwfc	(??i2_fputc+3)^0,w,c
  5743  001C6C  6EDA               	movwf	fsr2h,c
  5744  001C6E  C001  FFDF         	movff	i2fputc@c,indf2
  5745  001C72  EE20 F003          	lfsr	2,3
  5746  001C76  5003               	movf	i2fputc@fp^0,w,c
  5747  001C78  26D9               	addwf	fsr2l,f,c
  5748  001C7A  5004               	movf	(i2fputc@fp+1)^0,w,c
  5749  001C7C  22DA               	addwfc	fsr2h,f,c
  5750  001C7E  2ADE               	incf	postinc2,f,c
  5751  001C80  0E00               	movlw	0
  5752  001C82  22DD               	addwfc	postdec2,f,c
  5753  001C84  0012               	return		;funcret
  5754  001C86                     __end_ofi2_fputc:
  5755                           	callstack 0
  5756                           
  5757 ;; *************** function i2_putch *****************
  5758 ;; Defined at:
  5759 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\putch.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  c               1    wreg     unsigned char 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  c               1  (no storage) unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      void 
  5766 ;; Registers used:
  5767 ;;		wreg
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5773 ;;      Params:         0       0       0       0       0       0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0
  5776 ;;      Totals:         0       0       0       0       0       0       0
  5777 ;;Total ram usage:        0 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		i2_fputc
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text30
  5787  002210                     __ptext30:
  5788                           	callstack 0
  5789  002210                     i2_putch:
  5790                           	callstack 17
  5791                           
  5792                           ;incstack = 0
  5793  002210  0012               	return		;funcret
  5794  002212                     __end_ofi2_putch:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function i2_abs *****************
  5798 ;; Defined at:
  5799 ;;		line 1 in file "D:\MPLAB\pic\sources\c99\common\abs.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  a               2   18[COMRAM] int 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;		None
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  2   18[COMRAM] int 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/1
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5813 ;;      Params:         2       0       0       0       0       0       0
  5814 ;;      Locals:         0       0       0       0       0       0       0
  5815 ;;      Temps:          2       0       0       0       0       0       0
  5816 ;;      Totals:         4       0       0       0       0       0       0
  5817 ;;Total ram usage:        4 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		i2_dtoa
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text31
  5827  0020DC                     __ptext31:
  5828                           	callstack 0
  5829  0020DC                     i2_abs:
  5830                           	callstack 17
  5831                           
  5832                           ;incstack = 0
  5833  0020DC  BE14               	btfsc	(i2abs@a+1)^0,7,c
  5834  0020DE  D005               	goto	i2u328_40
  5835  0020E0  5014               	movf	(i2abs@a+1)^0,w,c
  5836  0020E2  E110               	bnz	i2l941
  5837  0020E4  0413               	decf	i2abs@a^0,w,c
  5838  0020E6  B0D8               	btfsc	status,0,c
  5839  0020E8  D00D               	goto	i2l941
  5840  0020EA                     i2u328_40:
  5841  0020EA  C013  F015         	movff	i2abs@a,??i2_abs
  5842  0020EE  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  5843  0020F2  1E15               	comf	??i2_abs^0,f,c
  5844  0020F4  1E16               	comf	(??i2_abs+1)^0,f,c
  5845  0020F6  4A15               	infsnz	??i2_abs^0,f,c
  5846  0020F8  2A16               	incf	(??i2_abs+1)^0,f,c
  5847  0020FA  C015  F013         	movff	??i2_abs,?i2_abs
  5848  0020FE  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  5849  002102  0012               	return	
  5850  002104                     i2l941:
  5851  002104  C013  F013         	movff	i2abs@a,?i2_abs
  5852  002108  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  5853  00210C  0012               	return		;funcret
  5854  00210E                     __end_ofi2_abs:
  5855                           	callstack 0
  5856                           
  5857 ;; *************** function i2___aomod *****************
  5858 ;; Defined at:
  5859 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aomod.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  dividend        8    0[COMRAM] long long 
  5862 ;;  divisor         8    8[COMRAM] long long 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  sign            1   17[COMRAM] unsigned char 
  5865 ;;  counter         1   16[COMRAM] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  8    0[COMRAM] long long 
  5868 ;; Registers used:
  5869 ;;		wreg, status,2, status,0
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/1
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5875 ;;      Params:        16       0       0       0       0       0       0
  5876 ;;      Locals:         2       0       0       0       0       0       0
  5877 ;;      Temps:          0       0       0       0       0       0       0
  5878 ;;      Totals:        18       0       0       0       0       0       0
  5879 ;;Total ram usage:       18 bytes
  5880 ;; Hardware stack levels used: 1
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		i2_dtoa
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text32
  5889  0017CA                     __ptext32:
  5890                           	callstack 0
  5891  0017CA                     i2___aomod:
  5892                           	callstack 17
  5893                           
  5894                           ;incstack = 0
  5895  0017CA  0E00               	movlw	0
  5896  0017CC  6E12               	movwf	i2___aomod@sign^0,c
  5897  0017CE  AE08               	btfss	(i2___aomod@dividend+7)^0,7,c
  5898  0017D0  D012               	goto	i2l3266
  5899  0017D2  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  5900  0017D4  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  5901  0017D6  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  5902  0017D8  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  5903  0017DA  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  5904  0017DC  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  5905  0017DE  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  5906  0017E0  6C01               	negf	i2___aomod@dividend^0,c
  5907  0017E2  0E00               	movlw	0
  5908  0017E4  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  5909  0017E6  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  5910  0017E8  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  5911  0017EA  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  5912  0017EC  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  5913  0017EE  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  5914  0017F0  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  5915  0017F2  0E01               	movlw	1
  5916  0017F4  6E12               	movwf	i2___aomod@sign^0,c
  5917  0017F6                     i2l3266:
  5918  0017F6  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  5919  0017F8  D010               	goto	i2l3270
  5920  0017FA  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  5921  0017FC  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  5922  0017FE  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  5923  001800  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  5924  001802  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  5925  001804  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  5926  001806  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  5927  001808  6C09               	negf	i2___aomod@divisor^0,c
  5928  00180A  0E00               	movlw	0
  5929  00180C  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  5930  00180E  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  5931  001810  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  5932  001812  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  5933  001814  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  5934  001816  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  5935  001818  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  5936  00181A                     i2l3270:
  5937  00181A  5009               	movf	i2___aomod@divisor^0,w,c
  5938  00181C  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  5939  00181E  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  5940  001820  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  5941  001822  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  5942  001824  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  5943  001826  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  5944  001828  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  5945  00182A  B4D8               	btfsc	status,2,c
  5946  00182C  D03C               	goto	i2l3286
  5947  00182E  0E01               	movlw	1
  5948  001830  6E11               	movwf	i2___aomod@counter^0,c
  5949  001832  D00A               	goto	i2l3276
  5950  001834                     i2l3274:
  5951  001834  90D8               	bcf	status,0,c
  5952  001836  3609               	rlcf	i2___aomod@divisor^0,f,c
  5953  001838  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  5954  00183A  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  5955  00183C  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  5956  00183E  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  5957  001840  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  5958  001842  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  5959  001844  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  5960  001846  2A11               	incf	i2___aomod@counter^0,f,c
  5961  001848                     i2l3276:
  5962  001848  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  5963  00184A  D7F4               	goto	i2l3274
  5964  00184C                     i2u321_40:
  5965  00184C  5009               	movf	i2___aomod@divisor^0,w,c
  5966  00184E  5C01               	subwf	i2___aomod@dividend^0,w,c
  5967  001850  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  5968  001852  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  5969  001854  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  5970  001856  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  5971  001858  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  5972  00185A  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  5973  00185C  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  5974  00185E  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  5975  001860  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  5976  001862  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  5977  001864  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  5978  001866  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  5979  001868  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  5980  00186A  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  5981  00186C  A0D8               	btfss	status,0,c
  5982  00186E  D010               	goto	i2l3282
  5983  001870  5009               	movf	i2___aomod@divisor^0,w,c
  5984  001872  5E01               	subwf	i2___aomod@dividend^0,f,c
  5985  001874  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  5986  001876  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  5987  001878  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  5988  00187A  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  5989  00187C  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  5990  00187E  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  5991  001880  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  5992  001882  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  5993  001884  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  5994  001886  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  5995  001888  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  5996  00188A  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  5997  00188C  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  5998  00188E  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  5999  001890                     i2l3282:
  6000  001890  90D8               	bcf	status,0,c
  6001  001892  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  6002  001894  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  6003  001896  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  6004  001898  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  6005  00189A  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  6006  00189C  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  6007  00189E  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  6008  0018A0  3209               	rrcf	i2___aomod@divisor^0,f,c
  6009  0018A2  2E11               	decfsz	i2___aomod@counter^0,f,c
  6010  0018A4  D7D3               	goto	i2u321_40
  6011  0018A6                     i2l3286:
  6012  0018A6  5012               	movf	i2___aomod@sign^0,w,c
  6013  0018A8  B4D8               	btfsc	status,2,c
  6014  0018AA  D010               	goto	i2l3290
  6015  0018AC  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  6016  0018AE  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  6017  0018B0  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  6018  0018B2  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  6019  0018B4  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  6020  0018B6  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  6021  0018B8  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  6022  0018BA  6C01               	negf	i2___aomod@dividend^0,c
  6023  0018BC  0E00               	movlw	0
  6024  0018BE  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  6025  0018C0  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  6026  0018C2  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  6027  0018C4  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  6028  0018C6  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  6029  0018C8  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  6030  0018CA  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  6031  0018CC                     i2l3290:
  6032  0018CC  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  6033  0018D0  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  6034  0018D4  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  6035  0018D8  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  6036  0018DC  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  6037  0018E0  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  6038  0018E4  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  6039  0018E8  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  6040  0018EC  0012               	return		;funcret
  6041  0018EE                     __end_ofi2___aomod:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function i2___aodiv *****************
  6045 ;; Defined at:
  6046 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aodiv.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  dividend        8    0[COMRAM] long long 
  6049 ;;  divisor         8    8[COMRAM] long long 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  quotient        8   18[COMRAM] long long 
  6052 ;;  sign            1   17[COMRAM] unsigned char 
  6053 ;;  counter         1   16[COMRAM] unsigned char 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  8    0[COMRAM] long long 
  6056 ;; Registers used:
  6057 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/1
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6063 ;;      Params:        16       0       0       0       0       0       0
  6064 ;;      Locals:        10       0       0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0
  6066 ;;      Totals:        26       0       0       0       0       0       0
  6067 ;;Total ram usage:       26 bytes
  6068 ;; Hardware stack levels used: 1
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		i2_dtoa
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text33
  6077  0012DA                     __ptext33:
  6078                           	callstack 0
  6079  0012DA                     i2___aodiv:
  6080                           	callstack 17
  6081                           
  6082                           ;incstack = 0
  6083  0012DA  0E00               	movlw	0
  6084  0012DC  6E12               	movwf	i2___aodiv@sign^0,c
  6085  0012DE  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  6086  0012E0  D012               	goto	i2l3222
  6087  0012E2  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  6088  0012E4  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  6089  0012E6  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  6090  0012E8  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  6091  0012EA  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  6092  0012EC  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  6093  0012EE  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  6094  0012F0  6C09               	negf	i2___aodiv@divisor^0,c
  6095  0012F2  0E00               	movlw	0
  6096  0012F4  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  6097  0012F6  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  6098  0012F8  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  6099  0012FA  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  6100  0012FC  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  6101  0012FE  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  6102  001300  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  6103  001302  0E01               	movlw	1
  6104  001304  6E12               	movwf	i2___aodiv@sign^0,c
  6105  001306                     i2l3222:
  6106  001306  AE08               	btfss	(i2___aodiv@dividend+7)^0,7,c
  6107  001308  D012               	goto	i2l3228
  6108  00130A  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  6109  00130C  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  6110  00130E  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  6111  001310  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  6112  001312  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  6113  001314  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  6114  001316  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  6115  001318  6C01               	negf	i2___aodiv@dividend^0,c
  6116  00131A  0E00               	movlw	0
  6117  00131C  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  6118  00131E  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  6119  001320  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  6120  001322  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  6121  001324  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  6122  001326  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  6123  001328  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  6124  00132A  0E01               	movlw	1
  6125  00132C  1A12               	xorwf	i2___aodiv@sign^0,f,c
  6126  00132E                     i2l3228:
  6127  00132E  EE20  F013         	lfsr	2,i2___aodiv@quotient
  6128  001332  0E07               	movlw	7
  6129  001334                     i2u313_41:
  6130  001334  6ADE               	clrf	postinc2,c
  6131  001336  06E8               	decf	wreg,f,c
  6132  001338  E2FD               	bc	i2u313_41
  6133  00133A  5009               	movf	i2___aodiv@divisor^0,w,c
  6134  00133C  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  6135  00133E  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  6136  001340  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  6137  001342  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  6138  001344  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  6139  001346  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  6140  001348  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  6141  00134A  B4D8               	btfsc	status,2,c
  6142  00134C  D046               	goto	i2l3250
  6143  00134E  0E01               	movlw	1
  6144  001350  6E11               	movwf	i2___aodiv@counter^0,c
  6145  001352  D00A               	goto	i2l3236
  6146  001354                     i2l3234:
  6147  001354  90D8               	bcf	status,0,c
  6148  001356  3609               	rlcf	i2___aodiv@divisor^0,f,c
  6149  001358  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  6150  00135A  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  6151  00135C  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  6152  00135E  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  6153  001360  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  6154  001362  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  6155  001364  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  6156  001366  2A11               	incf	i2___aodiv@counter^0,f,c
  6157  001368                     i2l3236:
  6158  001368  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  6159  00136A  D7F4               	goto	i2l3234
  6160  00136C                     i2u315_40:
  6161  00136C  90D8               	bcf	status,0,c
  6162  00136E  3613               	rlcf	i2___aodiv@quotient^0,f,c
  6163  001370  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  6164  001372  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  6165  001374  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  6166  001376  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  6167  001378  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  6168  00137A  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  6169  00137C  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  6170  00137E  5009               	movf	i2___aodiv@divisor^0,w,c
  6171  001380  5C01               	subwf	i2___aodiv@dividend^0,w,c
  6172  001382  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  6173  001384  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  6174  001386  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  6175  001388  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  6176  00138A  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  6177  00138C  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  6178  00138E  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  6179  001390  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  6180  001392  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  6181  001394  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  6182  001396  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  6183  001398  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  6184  00139A  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  6185  00139C  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  6186  00139E  A0D8               	btfss	status,0,c
  6187  0013A0  D011               	goto	i2l3246
  6188  0013A2  5009               	movf	i2___aodiv@divisor^0,w,c
  6189  0013A4  5E01               	subwf	i2___aodiv@dividend^0,f,c
  6190  0013A6  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  6191  0013A8  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  6192  0013AA  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  6193  0013AC  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  6194  0013AE  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  6195  0013B0  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  6196  0013B2  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  6197  0013B4  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  6198  0013B6  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  6199  0013B8  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  6200  0013BA  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  6201  0013BC  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  6202  0013BE  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  6203  0013C0  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  6204  0013C2  8013               	bsf	i2___aodiv@quotient^0,0,c
  6205  0013C4                     i2l3246:
  6206  0013C4  90D8               	bcf	status,0,c
  6207  0013C6  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  6208  0013C8  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  6209  0013CA  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  6210  0013CC  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  6211  0013CE  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  6212  0013D0  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  6213  0013D2  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  6214  0013D4  3209               	rrcf	i2___aodiv@divisor^0,f,c
  6215  0013D6  2E11               	decfsz	i2___aodiv@counter^0,f,c
  6216  0013D8  D7C9               	goto	i2u315_40
  6217  0013DA                     i2l3250:
  6218  0013DA  5012               	movf	i2___aodiv@sign^0,w,c
  6219  0013DC  B4D8               	btfsc	status,2,c
  6220  0013DE  D010               	goto	i2l3254
  6221  0013E0  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  6222  0013E2  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  6223  0013E4  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  6224  0013E6  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  6225  0013E8  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  6226  0013EA  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  6227  0013EC  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  6228  0013EE  6C13               	negf	i2___aodiv@quotient^0,c
  6229  0013F0  0E00               	movlw	0
  6230  0013F2  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  6231  0013F4  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  6232  0013F6  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  6233  0013F8  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  6234  0013FA  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  6235  0013FC  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  6236  0013FE  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  6237  001400                     i2l3254:
  6238  001400  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  6239  001404  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  6240  001408  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  6241  00140C  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  6242  001410  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  6243  001414  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  6244  001418  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  6245  00141C  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  6246  001420  0012               	return		;funcret
  6247  001422                     __end_ofi2___aodiv:
  6248                           	callstack 0
  6249                           
  6250 ;; *************** function i2_UART_Print *****************
  6251 ;; Defined at:
  6252 ;;		line 81 in file "pwm.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  data            2    1[COMRAM] PTR const unsigned char 
  6255 ;;		 -> isr@str_598(20), isr@str(20), main@str(8), 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  i               3    3[COMRAM] unsigned um
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/1
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6267 ;;      Params:         2       0       0       0       0       0       0
  6268 ;;      Locals:         3       0       0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0
  6270 ;;      Totals:         5       0       0       0       0       0       0
  6271 ;;Total ram usage:        5 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; Hardware stack levels required when called: 1
  6274 ;; This function calls:
  6275 ;;		i2_UART_PutC
  6276 ;; This function is called by:
  6277 ;;		_isr
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text34
  6282  001FC8                     __ptext34:
  6283                           	callstack 0
  6284  001FC8                     i2_UART_Print:
  6285                           	callstack 20
  6286                           
  6287                           ;pwm.c: 81:             correspondencia = 0b00000110;;pwm.c: 82:         break;;pwm.c: 8
      +                          3: 
  6288                           
  6289                           ;incstack = 0
  6290  001FC8  0E00               	movlw	0
  6291  001FCA  6E04               	movwf	i2UART_Print@i^0,c
  6292  001FCC  0E00               	movlw	0
  6293  001FCE  6E05               	movwf	(i2UART_Print@i+1)^0,c
  6294  001FD0  0E00               	movlw	0
  6295  001FD2  6E06               	movwf	(i2UART_Print@i+2)^0,c
  6296                           
  6297                           ;pwm.c: 84:         case 2:
  6298  001FD4  D00F               	goto	i2l2756
  6299  001FD6                     i2l2752:
  6300                           
  6301                           ;pwm.c: 85:             correspondencia = 0b01011011;
  6302  001FD6  5004               	movf	i2UART_Print@i^0,w,c
  6303  001FD8  2402               	addwf	i2UART_Print@data^0,w,c
  6304  001FDA  6ED9               	movwf	fsr2l,c
  6305  001FDC  5005               	movf	(i2UART_Print@i+1)^0,w,c
  6306  001FDE  2003               	addwfc	(i2UART_Print@data+1)^0,w,c
  6307  001FE0  6EDA               	movwf	fsr2h,c
  6308  001FE2  50DF               	movf	indf2,w,c
  6309  001FE4  EC01  F011         	call	i2_UART_PutC
  6310  001FE8  0E01               	movlw	1
  6311  001FEA  2604               	addwf	i2UART_Print@i^0,f,c
  6312  001FEC  0E00               	movlw	0
  6313  001FEE  2205               	addwfc	(i2UART_Print@i+1)^0,f,c
  6314  001FF0  0E00               	movlw	0
  6315  001FF2  2206               	addwfc	(i2UART_Print@i+2)^0,f,c
  6316  001FF4                     i2l2756:
  6317                           
  6318                           ;pwm.c: 84:         case 2:
  6319  001FF4  5004               	movf	i2UART_Print@i^0,w,c
  6320  001FF6  2402               	addwf	i2UART_Print@data^0,w,c
  6321  001FF8  6ED9               	movwf	fsr2l,c
  6322  001FFA  5005               	movf	(i2UART_Print@i+1)^0,w,c
  6323  001FFC  2003               	addwfc	(i2UART_Print@data+1)^0,w,c
  6324  001FFE  6EDA               	movwf	fsr2h,c
  6325  002000  50DF               	movf	indf2,w,c
  6326  002002  B4D8               	btfsc	status,2,c
  6327  002004  0012               	return	
  6328  002006  D7E7               	goto	i2l2752
  6329  002008                     __end_ofi2_UART_Print:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function i2_UART_PutC *****************
  6333 ;; Defined at:
  6334 ;;		line 75 in file "pwm.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  data            1    wreg     const unsigned char 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  data            1    0[COMRAM] const unsigned char 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/1
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6348 ;;      Params:         0       0       0       0       0       0       0
  6349 ;;      Locals:         1       0       0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0
  6351 ;;      Totals:         1       0       0       0       0       0       0
  6352 ;;Total ram usage:        1 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		i2_UART_Print
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text35
  6362  002202                     __ptext35:
  6363                           	callstack 0
  6364  002202                     i2_UART_PutC:
  6365                           	callstack 20
  6366                           
  6367                           ;incstack = 0
  6368                           ;i2UART_PutC@data stored from wreg
  6369  002202  6E01               	movwf	i2UART_PutC@data^0,c
  6370  002204                     
  6371                           ;pwm.c: 75:     switch (val) {;pwm.c: 76:         case 0:;pwm.c: 77:             corresp
      +                          ondencia = 0b00111111;
  6372  002204  A2AC               	btfss	4012,1,c	;volatile
  6373  002206  D7FE               	goto	i2l2560
  6374                           
  6375                           ;pwm.c: 78:         break;
  6376  002208  C001  FFAD         	movff	i2UART_PutC@data,4013	;volatile
  6377  00220C  0012               	return		;funcret
  6378  00220E                     __end_ofi2_UART_PutC:
  6379                           	callstack 0
  6380                           
  6381 ;; *************** function _valor_equivalente *****************
  6382 ;; Defined at:
  6383 ;;		line 88 in file "pwm.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  dig             2    0[COMRAM] int 
  6386 ;;  val             2    2[COMRAM] int 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  corresponden    1    6[COMRAM] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6398 ;;      Params:         4       0       0       0       0       0       0
  6399 ;;      Locals:         1       0       0       0       0       0       0
  6400 ;;      Temps:          2       0       0       0       0       0       0
  6401 ;;      Totals:         7       0       0       0       0       0       0
  6402 ;;Total ram usage:        7 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_isr
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text36
  6412  0018EE                     __ptext36:
  6413                           	callstack 0
  6414  0018EE                     _valor_equivalente:
  6415                           	callstack 21
  6416                           
  6417                           ;pwm.c: 89:             correspondencia = 0b01001111;;pwm.c: 90:         break;
  6418                           
  6419                           ;incstack = 0
  6420  0018EE  D015               	goto	i2l2626
  6421  0018F0                     i2l2604:
  6422                           
  6423                           ;pwm.c: 92:         case 4:
  6424  0018F0  0E3F               	movlw	63
  6425  0018F2  D011               	goto	L12
  6426  0018F4                     i2l2606:
  6427                           
  6428                           ;pwm.c: 96:         case 5:
  6429  0018F4  0E06               	movlw	6
  6430  0018F6  D00F               	goto	L12
  6431  0018F8                     i2l2608:
  6432                           
  6433                           ;pwm.c: 100:         case 6:
  6434  0018F8  0E5B               	movlw	91
  6435  0018FA  D00D               	goto	L12
  6436  0018FC                     i2l2610:
  6437                           
  6438                           ;pwm.c: 104:         case 7:
  6439  0018FC  0E4F               	movlw	79
  6440  0018FE  D00B               	goto	L12
  6441  001900                     i2l2612:
  6442                           
  6443                           ;pwm.c: 108:         case 8:
  6444  001900  0E66               	movlw	102
  6445  001902  D009               	goto	L12
  6446  001904                     i2l2614:
  6447                           
  6448                           ;pwm.c: 112:         case 9:
  6449  001904  0E6D               	movlw	109
  6450  001906  D007               	goto	L12
  6451  001908                     i2l2616:
  6452                           
  6453                           ;pwm.c: 116:         default:
  6454  001908  0E7D               	movlw	125
  6455  00190A  D005               	goto	L12
  6456  00190C                     i2l2618:
  6457                           
  6458                           ;pwm.c: 120:         case 0:
  6459  00190C  0E07               	movlw	7
  6460  00190E  D003               	goto	L12
  6461  001910                     i2l2620:
  6462                           
  6463                           ;pwm.c: 124:             PORTBbits.RB7 = 1;
  6464  001910  0E7F               	movlw	127
  6465  001912  D001               	goto	L12
  6466  001914                     i2l2622:
  6467                           
  6468                           ;pwm.c: 128: 
  6469  001914  0E67               	movlw	103
  6470  001916                     L12:
  6471  001916  6E07               	movwf	valor_equivalente@correspondencia^0,c
  6472                           
  6473                           ;pwm.c: 129:         case 1:
  6474  001918  D044               	goto	i2l2638
  6475  00191A                     i2l2626:
  6476  00191A  C003  F005         	movff	valor_equivalente@val,??_valor_equivalente
  6477  00191E  C004  F006         	movff	valor_equivalente@val+1,??_valor_equivalente+1
  6478                           
  6479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6480                           ; Switch size 1, requested type "simple"
  6481                           ; Number of cases is 1, Range of values is 0 to 0
  6482                           ; switch strategies available:
  6483                           ; Name         Instructions Cycles
  6484                           ; simple_byte            4     3 (average)
  6485                           ;	Chosen strategy is simple_byte
  6486  001922  5006               	movf	(??_valor_equivalente+1)^0,w,c
  6487  001924  0A00               	xorlw	0	; case 0
  6488  001926  A4D8               	btfss	status,2,c
  6489  001928  D7E3               	goto	i2l2604
  6490                           
  6491                           ; Switch size 1, requested type "simple"
  6492                           ; Number of cases is 10, Range of values is 0 to 9
  6493                           ; switch strategies available:
  6494                           ; Name         Instructions Cycles
  6495                           ; simple_byte           31    16 (average)
  6496                           ;	Chosen strategy is simple_byte
  6497  00192A  5005               	movf	??_valor_equivalente^0,w,c
  6498  00192C  0A00               	xorlw	0	; case 0
  6499  00192E  B4D8               	btfsc	status,2,c
  6500  001930  D7DF               	goto	i2l2604
  6501  001932  0A01               	xorlw	1	; case 1
  6502  001934  B4D8               	btfsc	status,2,c
  6503  001936  D7DE               	goto	i2l2606
  6504  001938  0A03               	xorlw	3	; case 2
  6505  00193A  B4D8               	btfsc	status,2,c
  6506  00193C  D7DD               	goto	i2l2608
  6507  00193E  0A01               	xorlw	1	; case 3
  6508  001940  B4D8               	btfsc	status,2,c
  6509  001942  D7DC               	goto	i2l2610
  6510  001944  0A07               	xorlw	7	; case 4
  6511  001946  B4D8               	btfsc	status,2,c
  6512  001948  D7DB               	goto	i2l2612
  6513  00194A  0A01               	xorlw	1	; case 5
  6514  00194C  B4D8               	btfsc	status,2,c
  6515  00194E  D7DA               	goto	i2l2614
  6516  001950  0A03               	xorlw	3	; case 6
  6517  001952  B4D8               	btfsc	status,2,c
  6518  001954  D7D9               	goto	i2l2616
  6519  001956  0A01               	xorlw	1	; case 7
  6520  001958  B4D8               	btfsc	status,2,c
  6521  00195A  D7D8               	goto	i2l2618
  6522  00195C  0A0F               	xorlw	15	; case 8
  6523  00195E  B4D8               	btfsc	status,2,c
  6524  001960  D7D7               	goto	i2l2620
  6525  001962  0A01               	xorlw	1	; case 9
  6526  001964  B4D8               	btfsc	status,2,c
  6527  001966  D7D6               	goto	i2l2622
  6528  001968  D7C3               	goto	i2l2604
  6529  00196A                     i2l138:
  6530                           
  6531                           ;pwm.c: 136:             break;
  6532  00196A  9881               	bcf	129,4,c	;volatile
  6533                           
  6534                           ;pwm.c: 137: 
  6535  00196C  9A81               	bcf	129,5,c	;volatile
  6536                           
  6537                           ;pwm.c: 138:         case 2:
  6538  00196E  9C81               	bcf	129,6,c	;volatile
  6539                           
  6540                           ;pwm.c: 139:             PORTBbits.RB4 = 0;
  6541  001970  8E81               	bsf	129,7,c	;volatile
  6542  001972                     L13:
  6543                           
  6544                           ;pwm.c: 140:             PORTBbits.RB5 = 1;
  6545  001972  C007  FF83         	movff	valor_equivalente@correspondencia,3971	;volatile
  6546                           
  6547                           ;pwm.c: 141:             PORTBbits.RB6 = 0;
  6548  001976  0E06               	movlw	6
  6549  001978  6E05               	movwf	??_valor_equivalente^0,c
  6550  00197A  0E30               	movlw	48
  6551  00197C                     i2u443_47:
  6552  00197C  2EE8               	decfsz	wreg,f,c
  6553  00197E  D7FE               	bra	i2u443_47
  6554  001980  2E05               	decfsz	??_valor_equivalente^0,f,c
  6555  001982  D7FC               	bra	i2u443_47
  6556  001984  D000               	nop2	
  6557                           
  6558                           ;pwm.c: 142:             PORTBbits.RB7 = 0;
  6559  001986  0012               	return	
  6560  001988                     i2l140:
  6561                           
  6562                           ;pwm.c: 145:             break;
  6563  001988  9881               	bcf	129,4,c	;volatile
  6564                           
  6565                           ;pwm.c: 146:         case 3:
  6566  00198A  9A81               	bcf	129,5,c	;volatile
  6567                           
  6568                           ;pwm.c: 147:             PORTBbits.RB4 = 1;
  6569  00198C  8C81               	bsf	129,6,c	;volatile
  6570  00198E  D003               	goto	L14
  6571  001990                     i2l141:
  6572                           
  6573                           ;pwm.c: 154:         default:
  6574  001990  9881               	bcf	129,4,c	;volatile
  6575                           
  6576                           ;pwm.c: 155:             break;
  6577  001992  8A81               	bsf	129,5,c	;volatile
  6578  001994  D004               	goto	L15
  6579  001996                     L14:
  6580                           
  6581                           ;pwm.c: 157:     return;
  6582  001996  9E81               	bcf	129,7,c	;volatile
  6583  001998  D7EC               	goto	L13
  6584  00199A                     i2l142:
  6585                           
  6586                           ;pwm.c: 162: 
  6587  00199A  8881               	bsf	129,4,c	;volatile
  6588                           
  6589                           ;pwm.c: 163:     TRISD = 0x00;
  6590  00199C  9A81               	bcf	129,5,c	;volatile
  6591  00199E                     L15:
  6592                           
  6593                           ;pwm.c: 164:     TRISB = 0b00000001;
  6594  00199E  9C81               	bcf	129,6,c	;volatile
  6595  0019A0  D7FA               	goto	L14
  6596  0019A2                     i2l2638:
  6597  0019A2  C001  F005         	movff	valor_equivalente@dig,??_valor_equivalente
  6598  0019A6  C002  F006         	movff	valor_equivalente@dig+1,??_valor_equivalente+1
  6599                           
  6600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6601                           ; Switch size 1, requested type "simple"
  6602                           ; Number of cases is 1, Range of values is 0 to 0
  6603                           ; switch strategies available:
  6604                           ; Name         Instructions Cycles
  6605                           ; simple_byte            4     3 (average)
  6606                           ;	Chosen strategy is simple_byte
  6607  0019AA  5006               	movf	(??_valor_equivalente+1)^0,w,c
  6608  0019AC  0A00               	xorlw	0	; case 0
  6609  0019AE  A4D8               	btfss	status,2,c
  6610  0019B0  0012               	return	
  6611                           
  6612                           ; Switch size 1, requested type "simple"
  6613                           ; Number of cases is 4, Range of values is 0 to 3
  6614                           ; switch strategies available:
  6615                           ; Name         Instructions Cycles
  6616                           ; simple_byte           13     7 (average)
  6617                           ;	Chosen strategy is simple_byte
  6618  0019B2  5005               	movf	??_valor_equivalente^0,w,c
  6619  0019B4  0A00               	xorlw	0	; case 0
  6620  0019B6  B4D8               	btfsc	status,2,c
  6621  0019B8  D7D8               	goto	i2l138
  6622  0019BA  0A01               	xorlw	1	; case 1
  6623  0019BC  B4D8               	btfsc	status,2,c
  6624  0019BE  D7E4               	goto	i2l140
  6625  0019C0  0A03               	xorlw	3	; case 2
  6626  0019C2  B4D8               	btfsc	status,2,c
  6627  0019C4  D7E5               	goto	i2l141
  6628  0019C6  0A01               	xorlw	1	; case 3
  6629  0019C8  A4D8               	btfss	status,2,c
  6630  0019CA  0012               	return	
  6631  0019CC  D7E6               	goto	i2l142
  6632  0019CE                     __end_of_valor_equivalente:
  6633                           	callstack 0
  6634                           
  6635 ;; *************** function ___wmul *****************
  6636 ;; Defined at:
  6637 ;;		line 15 in file "D:\MPLAB\pic\sources\c99\common\Umul16.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  multiplier      2    0[COMRAM] unsigned int 
  6640 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  product         2    4[COMRAM] unsigned int 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  2    0[COMRAM] unsigned int 
  6645 ;; Registers used:
  6646 ;;		wreg, status,2, status,0, prodl, prodh
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/1
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6652 ;;      Params:         4       0       0       0       0       0       0
  6653 ;;      Locals:         2       0       0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0
  6655 ;;      Totals:         6       0       0       0       0       0       0
  6656 ;;Total ram usage:        6 bytes
  6657 ;; Hardware stack levels used: 1
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		_isr
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text37
  6666  00218C                     __ptext37:
  6667                           	callstack 0
  6668  00218C                     ___wmul:
  6669                           	callstack 21
  6670                           
  6671                           ;incstack = 0
  6672  00218C  5001               	movf	___wmul@multiplier^0,w,c
  6673  00218E  0203               	mulwf	___wmul@multiplicand^0,c
  6674  002190  CFF3 F005          	movff	prodl,___wmul@product
  6675  002194  CFF4 F006          	movff	prodh,___wmul@product+1
  6676  002198  5001               	movf	___wmul@multiplier^0,w,c
  6677  00219A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6678  00219C  50F3               	movf	243,w,c
  6679  00219E  2606               	addwf	(___wmul@product+1)^0,f,c
  6680  0021A0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6681  0021A2  0203               	mulwf	___wmul@multiplicand^0,c
  6682  0021A4  50F3               	movf	243,w,c
  6683  0021A6  2606               	addwf	(___wmul@product+1)^0,f,c
  6684  0021A8  C005  F001         	movff	___wmul@product,?___wmul
  6685  0021AC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6686  0021B0  0012               	return		;funcret
  6687  0021B2                     __end_of___wmul:
  6688                           	callstack 0
  6689                           
  6690 ;; *************** function ___awmod *****************
  6691 ;; Defined at:
  6692 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\awmod.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  dividend        2    0[COMRAM] int 
  6695 ;;  divisor         2    2[COMRAM] int 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  sign            1    5[COMRAM] unsigned char 
  6698 ;;  counter         1    4[COMRAM] unsigned char 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  2    0[COMRAM] int 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6708 ;;      Params:         4       0       0       0       0       0       0
  6709 ;;      Locals:         2       0       0       0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0
  6711 ;;      Totals:         6       0       0       0       0       0       0
  6712 ;;Total ram usage:        6 bytes
  6713 ;; Hardware stack levels used: 1
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_isr
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text38
  6722  001DA4                     __ptext38:
  6723                           	callstack 0
  6724  001DA4                     ___awmod:
  6725                           	callstack 21
  6726                           
  6727                           ;incstack = 0
  6728  001DA4  0E00               	movlw	0
  6729  001DA6  6E06               	movwf	___awmod@sign^0,c
  6730  001DA8  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  6731  001DAA  D006               	goto	i2l2722
  6732  001DAC  6C01               	negf	___awmod@dividend^0,c
  6733  001DAE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6734  001DB0  B0D8               	btfsc	status,0,c
  6735  001DB2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6736  001DB4  0E01               	movlw	1
  6737  001DB6  6E06               	movwf	___awmod@sign^0,c
  6738  001DB8                     i2l2722:
  6739  001DB8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6740  001DBA  D004               	goto	i2l2726
  6741  001DBC  6C03               	negf	___awmod@divisor^0,c
  6742  001DBE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6743  001DC0  B0D8               	btfsc	status,0,c
  6744  001DC2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6745  001DC4                     i2l2726:
  6746  001DC4  5003               	movf	___awmod@divisor^0,w,c
  6747  001DC6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6748  001DC8  B4D8               	btfsc	status,2,c
  6749  001DCA  D018               	goto	i2l2742
  6750  001DCC  0E01               	movlw	1
  6751  001DCE  6E05               	movwf	___awmod@counter^0,c
  6752  001DD0  D004               	goto	i2l2732
  6753  001DD2                     i2l2730:
  6754  001DD2  90D8               	bcf	status,0,c
  6755  001DD4  3603               	rlcf	___awmod@divisor^0,f,c
  6756  001DD6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6757  001DD8  2A05               	incf	___awmod@counter^0,f,c
  6758  001DDA                     i2l2732:
  6759  001DDA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6760  001DDC  D7FA               	goto	i2l2730
  6761  001DDE                     i2u254_40:
  6762  001DDE  5003               	movf	___awmod@divisor^0,w,c
  6763  001DE0  5C01               	subwf	___awmod@dividend^0,w,c
  6764  001DE2  5004               	movf	(___awmod@divisor+1)^0,w,c
  6765  001DE4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6766  001DE6  A0D8               	btfss	status,0,c
  6767  001DE8  D004               	goto	i2l2738
  6768  001DEA  5003               	movf	___awmod@divisor^0,w,c
  6769  001DEC  5E01               	subwf	___awmod@dividend^0,f,c
  6770  001DEE  5004               	movf	(___awmod@divisor+1)^0,w,c
  6771  001DF0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6772  001DF2                     i2l2738:
  6773  001DF2  90D8               	bcf	status,0,c
  6774  001DF4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6775  001DF6  3203               	rrcf	___awmod@divisor^0,f,c
  6776  001DF8  2E05               	decfsz	___awmod@counter^0,f,c
  6777  001DFA  D7F1               	goto	i2u254_40
  6778  001DFC                     i2l2742:
  6779  001DFC  5006               	movf	___awmod@sign^0,w,c
  6780  001DFE  B4D8               	btfsc	status,2,c
  6781  001E00  D004               	goto	i2l2746
  6782  001E02  6C01               	negf	___awmod@dividend^0,c
  6783  001E04  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6784  001E06  B0D8               	btfsc	status,0,c
  6785  001E08  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6786  001E0A                     i2l2746:
  6787  001E0A  C001  F001         	movff	___awmod@dividend,?___awmod
  6788  001E0E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6789  001E12  0012               	return		;funcret
  6790  001E14                     __end_of___awmod:
  6791                           	callstack 0
  6792                           
  6793 ;; *************** function ___awdiv *****************
  6794 ;; Defined at:
  6795 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\awdiv.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  dividend        2    6[COMRAM] int 
  6798 ;;  divisor         2    8[COMRAM] int 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  quotient        2   12[COMRAM] int 
  6801 ;;  sign            1   11[COMRAM] unsigned char 
  6802 ;;  counter         1   10[COMRAM] unsigned char 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  2    6[COMRAM] int 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6812 ;;      Params:         4       0       0       0       0       0       0
  6813 ;;      Locals:         4       0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0
  6815 ;;      Totals:         8       0       0       0       0       0       0
  6816 ;;Total ram usage:        8 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_isr
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text39
  6826  001D20                     __ptext39:
  6827                           	callstack 0
  6828  001D20                     ___awdiv:
  6829                           	callstack 21
  6830                           
  6831                           ;incstack = 0
  6832  001D20  0E00               	movlw	0
  6833  001D22  6E0C               	movwf	___awdiv@sign^0,c
  6834  001D24  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6835  001D26  D006               	goto	i2l2678
  6836  001D28  6C09               	negf	___awdiv@divisor^0,c
  6837  001D2A  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  6838  001D2C  B0D8               	btfsc	status,0,c
  6839  001D2E  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  6840  001D30  0E01               	movlw	1
  6841  001D32  6E0C               	movwf	___awdiv@sign^0,c
  6842  001D34                     i2l2678:
  6843  001D34  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  6844  001D36  D006               	goto	i2l2684
  6845  001D38  6C07               	negf	___awdiv@dividend^0,c
  6846  001D3A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  6847  001D3C  B0D8               	btfsc	status,0,c
  6848  001D3E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  6849  001D40  0E01               	movlw	1
  6850  001D42  1A0C               	xorwf	___awdiv@sign^0,f,c
  6851  001D44                     i2l2684:
  6852  001D44  0E00               	movlw	0
  6853  001D46  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  6854  001D48  0E00               	movlw	0
  6855  001D4A  6E0D               	movwf	___awdiv@quotient^0,c
  6856  001D4C  5009               	movf	___awdiv@divisor^0,w,c
  6857  001D4E  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  6858  001D50  B4D8               	btfsc	status,2,c
  6859  001D52  D01C               	goto	i2l2706
  6860  001D54  0E01               	movlw	1
  6861  001D56  6E0B               	movwf	___awdiv@counter^0,c
  6862  001D58  D004               	goto	i2l2692
  6863  001D5A                     i2l2690:
  6864  001D5A  90D8               	bcf	status,0,c
  6865  001D5C  3609               	rlcf	___awdiv@divisor^0,f,c
  6866  001D5E  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  6867  001D60  2A0B               	incf	___awdiv@counter^0,f,c
  6868  001D62                     i2l2692:
  6869  001D62  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6870  001D64  D7FA               	goto	i2l2690
  6871  001D66                     i2u248_40:
  6872  001D66  90D8               	bcf	status,0,c
  6873  001D68  360D               	rlcf	___awdiv@quotient^0,f,c
  6874  001D6A  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  6875  001D6C  5009               	movf	___awdiv@divisor^0,w,c
  6876  001D6E  5C07               	subwf	___awdiv@dividend^0,w,c
  6877  001D70  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6878  001D72  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  6879  001D74  A0D8               	btfss	status,0,c
  6880  001D76  D005               	goto	i2l2702
  6881  001D78  5009               	movf	___awdiv@divisor^0,w,c
  6882  001D7A  5E07               	subwf	___awdiv@dividend^0,f,c
  6883  001D7C  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6884  001D7E  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  6885  001D80  800D               	bsf	___awdiv@quotient^0,0,c
  6886  001D82                     i2l2702:
  6887  001D82  90D8               	bcf	status,0,c
  6888  001D84  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  6889  001D86  3209               	rrcf	___awdiv@divisor^0,f,c
  6890  001D88  2E0B               	decfsz	___awdiv@counter^0,f,c
  6891  001D8A  D7ED               	goto	i2u248_40
  6892  001D8C                     i2l2706:
  6893  001D8C  500C               	movf	___awdiv@sign^0,w,c
  6894  001D8E  B4D8               	btfsc	status,2,c
  6895  001D90  D004               	goto	i2l2710
  6896  001D92  6C0D               	negf	___awdiv@quotient^0,c
  6897  001D94  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  6898  001D96  B0D8               	btfsc	status,0,c
  6899  001D98  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  6900  001D9A                     i2l2710:
  6901  001D9A  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6902  001D9E  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6903  001DA2  0012               	return		;funcret
  6904  001DA4                     __end_of___awdiv:
  6905                           	callstack 0
  6906                           
  6907                           	psect	rparam
  6908  0000                     
  6909                           	psect	temp
  6910  000076                     btemp:
  6911                           	callstack 0
  6912  000076                     	ds	1
  6913  0000                     int$flags	set	btemp
  6914  0000                     wtemp8	set	btemp+1
  6915  0000                     ttemp5	set	btemp+1
  6916  0000                     ttemp6	set	btemp+4
  6917  0000                     ttemp7	set	btemp+8
  6918                           
  6919                           	psect	idloc
  6920                           
  6921                           ;Config register IDLOC0 @ 0x200000
  6922                           ;	unspecified, using default values
  6923  200000                     	org	2097152
  6924  200000  FF                 	db	255
  6925                           
  6926                           ;Config register IDLOC1 @ 0x200001
  6927                           ;	unspecified, using default values
  6928  200001                     	org	2097153
  6929  200001  FF                 	db	255
  6930                           
  6931                           ;Config register IDLOC2 @ 0x200002
  6932                           ;	unspecified, using default values
  6933  200002                     	org	2097154
  6934  200002  FF                 	db	255
  6935                           
  6936                           ;Config register IDLOC3 @ 0x200003
  6937                           ;	unspecified, using default values
  6938  200003                     	org	2097155
  6939  200003  FF                 	db	255
  6940                           
  6941                           ;Config register IDLOC4 @ 0x200004
  6942                           ;	unspecified, using default values
  6943  200004                     	org	2097156
  6944  200004  FF                 	db	255
  6945                           
  6946                           ;Config register IDLOC5 @ 0x200005
  6947                           ;	unspecified, using default values
  6948  200005                     	org	2097157
  6949  200005  FF                 	db	255
  6950                           
  6951                           ;Config register IDLOC6 @ 0x200006
  6952                           ;	unspecified, using default values
  6953  200006                     	org	2097158
  6954  200006  FF                 	db	255
  6955                           
  6956                           ;Config register IDLOC7 @ 0x200007
  6957                           ;	unspecified, using default values
  6958  200007                     	org	2097159
  6959  200007  FF                 	db	255
  6960                           
  6961                           	psect	config
  6962                           
  6963                           ; Padding undefined space
  6964  300000                     	org	3145728
  6965  300000  FF                 	db	255
  6966                           
  6967                           ;Config register CONFIG1H @ 0x300001
  6968                           ;	Oscillator Selection bits
  6969                           ;	OSC = HS, HS oscillator
  6970                           ;	Fail-Safe Clock Monitor Enable bit
  6971                           ;	FCMEN = 0x0, unprogrammed default
  6972                           ;	Internal/External Oscillator Switchover bit
  6973                           ;	IESO = 0x0, unprogrammed default
  6974  300001                     	org	3145729
  6975  300001  02                 	db	2
  6976                           
  6977                           ;Config register CONFIG2L @ 0x300002
  6978                           ;	Power-up Timer Enable bit
  6979                           ;	PWRT = 0x1, unprogrammed default
  6980                           ;	Brown-out Reset Enable bits
  6981                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6982                           ;	Brown Out Reset Voltage bits
  6983                           ;	BORV = 0x3, unprogrammed default
  6984  300002                     	org	3145730
  6985  300002  19                 	db	25
  6986                           
  6987                           ;Config register CONFIG2H @ 0x300003
  6988                           ;	Watchdog Timer Enable bit
  6989                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6990                           ;	Watchdog Timer Postscale Select bits
  6991                           ;	WDTPS = 0xF, unprogrammed default
  6992  300003                     	org	3145731
  6993  300003  1E                 	db	30
  6994                           
  6995                           ; Padding undefined space
  6996  300004                     	org	3145732
  6997  300004  FF                 	db	255
  6998                           
  6999                           ;Config register CONFIG3H @ 0x300005
  7000                           ;	CCP2 MUX bit
  7001                           ;	CCP2MX = 0x1, unprogrammed default
  7002                           ;	PORTB A/D Enable bit
  7003                           ;	PBADEN = 0x1, unprogrammed default
  7004                           ;	Low-Power Timer1 Oscillator Enable bit
  7005                           ;	LPT1OSC = 0x0, unprogrammed default
  7006                           ;	MCLR Pin Enable bit
  7007                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7008  300005                     	org	3145733
  7009  300005  83                 	db	131
  7010                           
  7011                           ;Config register CONFIG4L @ 0x300006
  7012                           ;	unspecified, using default values
  7013                           ;	Stack Full/Underflow Reset Enable bit
  7014                           ;	STVREN = 0x1, unprogrammed default
  7015                           ;	Single-Supply ICSP Enable bit
  7016                           ;	LVP = 0x1, unprogrammed default
  7017                           ;	Extended Instruction Set Enable bit
  7018                           ;	XINST = 0x0, unprogrammed default
  7019                           ;	Background Debugger Enable bit
  7020                           ;	DEBUG = 0x1, unprogrammed default
  7021  300006                     	org	3145734
  7022  300006  85                 	db	133
  7023                           
  7024                           ; Padding undefined space
  7025  300007                     	org	3145735
  7026  300007  FF                 	db	255
  7027                           
  7028                           ;Config register CONFIG5L @ 0x300008
  7029                           ;	unspecified, using default values
  7030                           ;	Code Protection bit
  7031                           ;	CP0 = 0x1, unprogrammed default
  7032                           ;	Code Protection bit
  7033                           ;	CP1 = 0x1, unprogrammed default
  7034                           ;	Code Protection bit
  7035                           ;	CP2 = 0x1, unprogrammed default
  7036                           ;	Code Protection bit
  7037                           ;	CP3 = 0x1, unprogrammed default
  7038  300008                     	org	3145736
  7039  300008  0F                 	db	15
  7040                           
  7041                           ;Config register CONFIG5H @ 0x300009
  7042                           ;	unspecified, using default values
  7043                           ;	Boot Block Code Protection bit
  7044                           ;	CPB = 0x1, unprogrammed default
  7045                           ;	Data EEPROM Code Protection bit
  7046                           ;	CPD = 0x1, unprogrammed default
  7047  300009                     	org	3145737
  7048  300009  C0                 	db	192
  7049                           
  7050                           ;Config register CONFIG6L @ 0x30000A
  7051                           ;	unspecified, using default values
  7052                           ;	Write Protection bit
  7053                           ;	WRT0 = 0x1, unprogrammed default
  7054                           ;	Write Protection bit
  7055                           ;	WRT1 = 0x1, unprogrammed default
  7056                           ;	Write Protection bit
  7057                           ;	WRT2 = 0x1, unprogrammed default
  7058                           ;	Write Protection bit
  7059                           ;	WRT3 = 0x1, unprogrammed default
  7060  30000A                     	org	3145738
  7061  30000A  0F                 	db	15
  7062                           
  7063                           ;Config register CONFIG6H @ 0x30000B
  7064                           ;	unspecified, using default values
  7065                           ;	Configuration Register Write Protection bit
  7066                           ;	WRTC = 0x1, unprogrammed default
  7067                           ;	Boot Block Write Protection bit
  7068                           ;	WRTB = 0x1, unprogrammed default
  7069                           ;	Data EEPROM Write Protection bit
  7070                           ;	WRTD = 0x1, unprogrammed default
  7071  30000B                     	org	3145739
  7072  30000B  E0                 	db	224
  7073                           
  7074                           ;Config register CONFIG7L @ 0x30000C
  7075                           ;	unspecified, using default values
  7076                           ;	Table Read Protection bit
  7077                           ;	EBTR0 = 0x1, unprogrammed default
  7078                           ;	Table Read Protection bit
  7079                           ;	EBTR1 = 0x1, unprogrammed default
  7080                           ;	Table Read Protection bit
  7081                           ;	EBTR2 = 0x1, unprogrammed default
  7082                           ;	Table Read Protection bit
  7083                           ;	EBTR3 = 0x1, unprogrammed default
  7084  30000C                     	org	3145740
  7085  30000C  0F                 	db	15
  7086                           
  7087                           ;Config register CONFIG7H @ 0x30000D
  7088                           ;	unspecified, using default values
  7089                           ;	Boot Block Table Read Protection bit
  7090                           ;	EBTRB = 0x1, unprogrammed default
  7091  30000D                     	org	3145741
  7092  30000D  40                 	db	64
  7093                           tosu	equ	0xFFF
  7094                           tosh	equ	0xFFE
  7095                           tosl	equ	0xFFD
  7096                           stkptr	equ	0xFFC
  7097                           pclatu	equ	0xFFB
  7098                           pclath	equ	0xFFA
  7099                           pcl	equ	0xFF9
  7100                           tblptru	equ	0xFF8
  7101                           tblptrh	equ	0xFF7
  7102                           tblptrl	equ	0xFF6
  7103                           tablat	equ	0xFF5
  7104                           prodh	equ	0xFF4
  7105                           prodl	equ	0xFF3
  7106                           indf0	equ	0xFEF
  7107                           postinc0	equ	0xFEE
  7108                           postdec0	equ	0xFED
  7109                           preinc0	equ	0xFEC
  7110                           plusw0	equ	0xFEB
  7111                           fsr0h	equ	0xFEA
  7112                           fsr0l	equ	0xFE9
  7113                           wreg	equ	0xFE8
  7114                           indf1	equ	0xFE7
  7115                           postinc1	equ	0xFE6
  7116                           postdec1	equ	0xFE5
  7117                           preinc1	equ	0xFE4
  7118                           plusw1	equ	0xFE3
  7119                           fsr1h	equ	0xFE2
  7120                           fsr1l	equ	0xFE1
  7121                           bsr	equ	0xFE0
  7122                           indf2	equ	0xFDF
  7123                           postinc2	equ	0xFDE
  7124                           postdec2	equ	0xFDD
  7125                           preinc2	equ	0xFDC
  7126                           plusw2	equ	0xFDB
  7127                           fsr2h	equ	0xFDA
  7128                           fsr2l	equ	0xFD9
  7129                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     117
    BANK0           128     58      84
    BANK1           256    101     143
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2sprintf@f...source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f...buffer	PTR unsigned char  size(2) Largest target is 0

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    strcpy@s	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 20
		 -> isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(BANK1[1]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1039$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1039$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 20
		 -> isr@str_598(BANK0[20]), isr@str(BANK0[20]), main@str(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->i2_sprintf
    i2_strcat->i2_strcpy
    i2_strcpy->i2_strlen
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_UART_Print->i2_UART_PutC
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _UART_Print->_UART_PutC
    _UART_Init->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   12126
                                             92 BANK1      9     9      0
                          _UART_Init
                         _UART_Print
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               3     0      3    1058
                                             55 BANK0      3     0      3
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               7     4      3     248
                                             48 BANK0      7     4      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    9430
                                             74 BANK1     18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    8478
                                             68 BANK1      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7764
                                             52 BANK1     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5773
                                             16 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3507
                                             57 BANK0      1     1      0
                                              3 BANK1     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     310
                                             44 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             53 BANK0      4     0      4
                                              0 BANK1      3     3      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             44 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             46 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             44 BANK0      2     2      0
                                              0 BANK1     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             44 BANK0     10    10      0
                                              0 BANK1     16     0     16
 ---------------------------------------------------------------------------------
 (1) _UART_Print                                           5     3      2     288
                                             45 BANK0      5     3      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (2) _UART_PutC                                            1     1      0      22
                                             44 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     7      3    1124
                                              0 BANK1     10     7      3
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                             44 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                 58    58      0   10876
                                            103 COMRAM    14    14      0
                                              0 BANK0     44    44      0
                            ___awdiv
                            ___awmod
                             ___wmul
                  _valor_equivalente
                       i2_UART_Print
                          i2_sprintf
                           i2_strcat
 ---------------------------------------------------------------------------------
 (10) i2_strcat                                            3     0      3     588
                                             11 COMRAM     3     0      3
                           i2_strcpy
                           i2_strlen
 ---------------------------------------------------------------------------------
 (11) i2_strcpy                                            7     4      3     148
                                              4 COMRAM     7     4      3
                           i2_strlen (ARG)
 ---------------------------------------------------------------------------------
 (10) i2_sprintf                                          20    15      5    6458
                                             85 COMRAM    18    13      5
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (11) i2_vfprintf                                          6     1      5    5828
                                             79 COMRAM     6     1      5
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) i2_vfpfcnvrt                                        42    36      6    5384
                                             63 COMRAM    16    10      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (13) i2_dtoa                                             36    26     10    4013
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (14) i2_pad                                              11     5      6    2132
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (11) i2_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) i2_fputs                                             7     3      4     877
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (13) i2_fputc                                             9     5      4     597
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (14) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (14) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (14) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (10) i2_UART_Print                                        5     3      2     164
                                              1 COMRAM     5     3      2
                        i2_UART_PutC
 ---------------------------------------------------------------------------------
 (11) i2_UART_PutC                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _valor_equivalente                                   7     3      4     751
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     555
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___awdiv                                             8     4      4     908
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Print
     _UART_PutC
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen

 _isr (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___wmul
   _valor_equivalente
   i2_UART_Print
     i2_UART_PutC
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
             i2_fputs
               i2_fputc
             i2_strlen
         i2_fputc
   i2_strcat
     i2_strcpy
       i2_strlen (ARG)
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     65      8F       7       55.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3A      54       5       65.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      75       1       92.9%
BITBIGSFRhhhhl      18      0       0      17        0.0%
BITBIGSFRhl         11      0       0      20        0.0%
BITBIGSFRlllhhl      F      0       0      23        0.0%
BITBIGSFRhhhhh       D      0       0      16        0.0%
BITBIGSFRllh         C      0       0      21        0.0%
BITBIGSFRhhll        B      0       0      19        0.0%
BITBIGSFRlllhhh      8      0       0      22        0.0%
BITBIGSFRhhlhh       4      0       0      18        0.0%
BITBIGSFRllll        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     158      25        0.0%
DATA                 0      0     158       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 04 18:26:12 2022

                              l92 17BC                      ___awdiv@sign 000C  
             ___wmul@multiplicand 0003                               l151 1524  
                             l903 0A64                               l905 0A6C  
                             l941 209E                               l892 1ACC  
              i2___aodiv@quotient 0013                               _abs 2074  
                             _pad 1A9A                               _isr 0008  
                    ___awmod@sign 0006                               wreg 000FE8  
             __end_ofi2_vfpfcnvrt 1174                     i2UART_Print@i 0004  
                            ?_abs 00AE                              l3130 1212  
                            l3122 11D2                              l3050 1B5E  
                            l3202 1AF0                              l2500 21F8  
                            l3140 1276                              l3116 11A6  
                            l4004 1E72                              l3206 1B22  
                            l4006 1E96                              l4102 14EC  
                            l2600 1FB4                              l3128 11FC  
                            l3144 1290                              l3160 1598  
                            l3170 15F0                              l3074 1F08  
                            l3082 2118                              l3148 12B8  
                            l3180 1654                              l3164 15BE  
                            l3084 211E                              l3340 0A8C  
                            l3078 1F22                              l3326 0A44  
                            l4118 1532                              l3184 167E  
                            l3176 163C                              l3168 15DA  
                            l3192 1AB4                              l3344 0A9C  
                            l3354 0B98                              l3540 19EA  
                            l3196 1AC4                              l3606 17B4  
                            l3198 1AD6                              l3374 0C06  
                            l2558 204C                              l4086 1482  
                            l3552 1A24                              l3554 1A30  
                            l3546 1A02                              l3378 0C1E  
                            l3572 1A88                              l3564 1A64  
                            l2596 1F94                              ?_pad 0103  
                            l3568 1A72                              l3932 0F7A  
                            l3598 171E                              l3942 0FBE  
                            l3938 0FB2                              l3948 0FD4  
                            ?_isr 0001                              STR_1 0604  
                            STR_2 0601                              STR_3 0604  
                            STR_4 0601                              STR_5 0604  
                            STR_6 0601                              u3100 2084  
                            u3030 15F6                              u3300 0A18  
                            u3400 0BDE                              u3330 0A58  
                            u4050 0EFE                              u3420 0BEE  
                            u3350 0A84                              u3360 0BA8  
                            u3290 0A16                              u3700 1A34  
                            u2820 1B56                              u3380 0BCA  
                            u3381 0BC8                              u3390 0BD8  
                            u2840 1B9E                              u3750 16D0  
                            u2951 11D8                              u4367 1498  
                            u4377 1502                              u3770 172C  
                            u2970 1218                              u3755 16C8  
                            u4387 151A                              u3780 175C  
                            _RCIF 007CF5                              u4397 1548  
                            u3790 17A8                              u3785 1754  
                            _TRMT 007D61                              abs@a 00AE  
                            _dbuf 016F                              _main 1422  
                            _dtoa 09EE                 _valor_equivalente 18EE  
                            _valX 00C8                              _valY 00C6  
                            _valZ 00C4                              _prec 00C0  
                            _nout 0165                              pad@i 0109  
                            pad@p 0107                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 010B  
                            fsr2l 000FD9                              btemp 0076  
                            prodh 000FF4                              prodl 000FF3  
                            start 000E                ?_valor_equivalente 0001  
                 __end_ofi2_fputc 1C86                   __end_ofi2_fputs 2040  
                 __end_ofi2_putch 2212                       i2_dtoa$1121 002E  
                    ___param_bank 000000                             ??_abs 00B0  
                           ??_pad 00B9                             ??_isr 0068  
             ??_valor_equivalente 0005                        i2_vfprintf 1E14  
                 __end_of___aldiv 1A9A                   __end_of___aodiv 12DA  
                           ?_main 0001                             ?_dtoa 0110  
                 __end_of___aomod 16A0                   __end_of___awdiv 1DA4  
                 __end_of___awmod 1E14                   ___awdiv@divisor 0009  
                           _T1CON 000FCD                             i2l140 1988  
                           i2l141 1990                             i2l142 199A  
                           i2l138 196A                             i2l163 065A  
                           i2l166 06D4                             i2l184 09C2  
                           i2l903 0CBC                             i2l905 0CC4  
                           i2l941 2104                             i2l892 1CB6  
                 ___awdiv@counter 000B                             _RCREG 000FAE  
                           _RCSTA 000FAB                      vfpfcnvrt@fmt 0136  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _PORTD 000F83  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             i2_abs 20DC  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           i2_pad 1C86                       ?_UART_Print 00AD  
                           _flags 00C2                             _fputc 1B46  
                           _fputs 1EFC                             pad@fp 0103  
                           _width 00BE                             _putch 220E  
                           dtoa@d 0112                             dtoa@i 0132  
                           dtoa@n 012A                             dtoa@p 0124  
                           dtoa@s 0128                             dtoa@w 0126  
       __end_of_valor_equivalente 19CE                             tablat 000FF5  
                           ttemp5 0077                             ttemp6 007A  
                           ttemp7 007E                             status 000FD8  
                           wtemp8 0077                   __end_of_sprintf 1EFC  
                 i2UART_PutC@data 0001  valor_equivalente@correspondencia 0007  
                __end_ofi2_strcat 21F6                  __end_ofi2_strcpy 20DC  
                __end_ofi2_strlen 2166                   __initialization 2166  
                    __end_of_main 1566                      __end_of_dtoa 0C4A  
                     i2_vfpfcnvrt 1006                      ?i2_UART_PutC 0001  
                   i2vfpfcnvrt@ap 0044                     i2vfpfcnvrt@fp 0040  
                   i2vfpfcnvrt@ll 0048                            ??_main 015C  
                          ??_dtoa 011A                     __activetblptr 000002  
                      i2sprintf@f 005D                        i2sprintf@s 0056  
                          ?i2_abs 0013                            ?i2_pad 0011  
                          _ADCON1 000FC1                            ?_fputc 00AC  
                          ?_fputs 00B5                  ___awdiv@dividend 0007  
                          ?_putch 0001                            i2l3100 2146  
                          i2l3102 214A                            i2l4012 1E24  
                          i2l3222 1306                            i2l3302 1CAE  
                          i2l4014 1E48                            i2l3064 1BFE  
                          i2l3312 1D06                            i2l3304 1CC0  
                          i2l2610 18FC                            i2l3234 1354  
                          i2l3250 13DA                            i2l3402 0CDE  
                          i2l2620 1910                            i2l2612 1900  
                          i2l2604 18F0                            i2l3236 1368  
                          i2l3228 132E                            i2l3092 2012  
                          i2l3308 1CD8                            i2l4212 0846  
                          i2l2710 1D9A                            i2l2702 1D82  
                          i2l2622 1914                            i2l2614 1904  
                          i2l2606 18F4                            i2l3254 1400  
                          i2l3246 13C4                            i2l3270 181A  
                          i2l3406 0CEE                            i2l4230 0906  
                          i2l2616 1908                            i2l2608 18F8  
                          i2l2560 2204                            i2l3096 2028  
                          i2l3440 0E66                            i2l3416 0DE6  
                          i2l4232 094C                            i2l4216 084A  
                          i2l2706 1D8C                            i2l2730 1DD2  
                          i2l2722 1DB8                            i2l2618 190C  
                          i2l2626 191A                            i2l3290 18CC  
                          i2l3282 1890                            i2l3274 1834  
                          i2l3266 17F6                            i2l4226 0872  
                          i2l4170 071C                            i2l2732 1DDA  
                          i2l3276 1848                            i2l3436 0E4E  
                          i2l4228 08C0                            i2l4236 097E  
                          i2l4244 09C0                            i2l4164 0702  
                          i2l2742 1DFC                            i2l2726 1DC4  
                          i2l2638 19A2                            i2l3286 18A6  
                          i2l2574 20B4                            i2l4238 09A8  
                          i2l4190 07C0                            i2l4158 06E8  
                          i2l2752 1FD6                            i2l4176 0734  
                          i2l2690 1D5A                            i2l2746 1E0A  
                          i2l2738 1DF2                            i2l3298 1CA0  
                          i2l2692 1D62                            i2l2684 1D44  
                          i2l2756 1FF4                            i2l3388 0CA0  
                          i2l2678 1D34                            i2l4198 07FE  
                          i2l3982 1126                            i2l3976 10EE  
                          i2l3992 1144                            i2l3986 1130  
                       ??i2_fputc 0005                         ??i2_fputs 000E  
                       ??i2_putch 0001                            _TMR1ON 007E68  
                  i2___aodiv@sign 0012                            i2abs@a 0013  
                          i2_dtoa 0C4A                            i2pad@i 0018  
                          i2pad@p 0015                            i2pad@w 001A  
                    vfprintf@cfmt 0149                 __end_of_UART_Init 17CA  
               __end_of_UART_PutC 2202                    i2___aomod@sign 0012  
                       ??___aldiv 00B4                         ??___aodiv 00AC  
                   i2vfprintf@fmt 0052                         ??___aomod 00AC  
                          ___wmul 218C                         ??___awdiv 000B  
                       ??___awmod 0005                       ?i2_vfprintf 0050  
                          _indice 00D0                            clear_0 216C  
                          clear_1 2178                  ___awdiv@quotient 000D  
                 ___awmod@divisor 0003                            isa$std 000001  
                 ___awmod@counter 0005                            pad@buf 0105  
                          _strcat 21B2                            dtoa@fp 0110  
                          _strcpy 2040                            _strlen 210E  
                          fputc@c 00AC                            isr@str 0080  
                          fputs@c 0100                            fputs@i 0101  
               __end_ofi2___aodiv 1422                            fputs@s 00B5  
               __end_ofi2___aomod 18EE                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                            putch@c 0001  
              i2___aomod@dividend 0001                  __end_of_vfprintf 1EB2  
                       ??_sprintf 00BA                        __accesstop 0080  
         __end_of__initialization 217E                     ___rparam_used 000001  
               __end_ofi2_sprintf 1F86                     __end_ofi2_abs 210E  
                   __end_ofi2_pad 1D20                  i2UART_Print@data 0002  
                  __pcstackCOMRAM 0001                     __end_of_fputc 1BE6  
                   __end_of_fputs 1F42                     __end_of_putch 2210  
                         ??i2_abs 0015                           ??i2_pad 0017  
                   ?i2_UART_Print 0002                    i2vfpfcnvrt@fmt 0042  
                       ?i2_strcat 000C                         ?i2_strcpy 0005  
                       ?i2_strlen 0001                           ??_fputc 00B0  
                         ??_fputs 00B9                           ??_putch 00AC  
                      __pbssBANK0 00BA                        __pbssBANK1 0165  
                     i2sprintf@ap 005B                       i2strcat@src 000E  
                         ?i2_dtoa 001C                       i2strcpy@src 0007  
                      _flag_MEDIR 016B                           ?___wmul 0001  
                         ?_strcat 00B7                           ?_strcpy 00B0  
                         ?_strlen 00AC                    ??i2_UART_Print 0004  
                    ??_UART_Print 00AF                        ??i2_strcat 000F  
                      ??i2_strcpy 0008                        ??i2_strlen 0003  
                         i2_fputc 1BE6                           i2_fputs 2008  
                         i2pad@fp 0011                           i2_putch 2210  
                         i2dtoa@d 001E                           i2dtoa@i 003E  
                         i2dtoa@n 0036                           i2dtoa@p 0030  
                         i2dtoa@s 0034                           i2dtoa@w 0032  
                         __Hparam 0000                           __Lparam 0000  
                         ___aldiv 19CE                           ___aodiv 1174  
                         ___aomod 1566                __end_of_UART_Print 1FC8  
                         ___awdiv 1D20                           ___awmod 1DA4  
                       ?_vfprintf 0144                    i2vfprintf@cfmt 0055  
                    __psmallconst 0600                      ?i2_vfpfcnvrt 0040  
                         __pcinit 2166                           _dig_val 00CC  
                         __ramtop 0600              valor_equivalente@dig 0001  
                         __ptext0 1422                           __ptext1 21B2  
                         __ptext2 2040                           __ptext3 1EB2  
                         __ptext4 1E64                           __ptext5 0E90  
                         __ptext6 09EE                           __ptext7 1A9A  
                         __ptext8 210E                           __ptext9 1EFC  
            valor_equivalente@val 0003                         _T0CONbits 000FD5  
                       _T1CONbits 000FCD                           _medindo 00CE  
                ___awmod@dividend 0001                       UART_Print@i 00AF  
                ___aldiv@dividend 00AC                    UART_Print@data 00AD  
                         _sprintf 1EB2                           main@str 015D  
                  __pintcode_body 0608              end_of_initialization 217E  
                         fputc@fp 00AE                     __Lmediumconst 0000  
                         int_func 0608                           fputs@fp 00B7  
               __end_of_vfpfcnvrt 1006                  ___aldiv@quotient 00B6  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                    ??i2_vfprintf 0055                        ??_vfprintf 00BA  
                      _tempo_echo 00BA                        _valor_tara 00CA  
                         strcpy@d 00B4                           strlen@a 00AE  
                         strcpy@s 00B6                           strlen@s 00AC  
                       _UART_Init 16A0                         _UART_PutC 21F6  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
               i2___aodiv@divisor 0009                UART_Init@baud_rate 0100  
               i2___aodiv@counter 0011                         i2___aodiv 12DA  
                       i2___aomod 17CA                __end_ofi2_vfprintf 1E64  
                  __end_ofi2_dtoa 0E90              __end_ofi2_UART_Print 2008  
                       i2_sprintf 1F42                       vfpfcnvrt@ap 0138  
                     vfpfcnvrt@fp 0134                       vfpfcnvrt@ll 013C  
                  __end_of___wmul 21B2                        ?_UART_Init 0100  
                      ?_UART_PutC 0001                         i2fputc@fp 0003  
                       i2fputs@fp 000C                    __end_of_strcat 21D4  
                  __end_of_strcpy 2074                    __end_of_strlen 213C  
             start_initialization 2166                       __end_of_abs 20A8  
                     __end_of_pad 1B46                       __end_of_isr 09EE  
                      ?i2___aodiv 0001                        ?i2___aomod 0001  
                       i2strcpy@d 0009                         i2strlen@a 0003  
                       i2strcpy@s 000B                         i2strlen@s 0001  
                        ??i2_dtoa 0026                       vfprintf@fmt 0146  
                      isr@str_598 0094                      i2vfprintf@ap 0053  
                    i2vfprintf@fp 0050                          ??___wmul 0005  
                      ?i2_sprintf 0056                 i2___aomod@divisor 0009  
                        ??_strcat 00BA                          ??_strcpy 00B3  
                        ??_strlen 00AE                 i2___aomod@counter 0011  
                    i2sprintf@fmt 0058                      i2strcat@dest 000C  
                   __pcstackBANK0 0080                     __pcstackBANK1 0100  
                ___aodiv@dividend 0100                          ?i2_fputc 0001  
                        ?i2_fputs 000A                      i2strcpy@dest 0005  
                        ?i2_putch 0001                     _flag_MENSURAR 0167  
                       _dtoa$1121 0122                         _flag_TARA 0169  
                       __pintcode 0008                          ?___aldiv 00AC  
                        ?___aodiv 0100                          ?___aomod 0100  
                        ?___awdiv 0007                  ___aodiv@quotient 00AE  
                        ?___awmod 0001                       ??_UART_Init 0103  
                   ??i2_UART_PutC 0001                       ??_UART_PutC 00AC  
                     __smallconst 0600                     UART_PutC@data 00AC  
                     ??i2___aodiv 0011                       ??i2___aomod 0011  
                        ?_sprintf 014A                        UART_Init@n 0107  
                 ___aldiv@divisor 00B0                   ___aldiv@counter 00B4  
                  ___wmul@product 0005                          i2u321_40 184C  
                        i2u313_41 1334                          i2u315_40 136C  
                        i2u254_40 1DDE                          i2u350_40 0CD8  
                        i2u351_40 0DF4                          i2u248_40 1D66  
                        i2u328_40 20EA                          i2u344_40 0C72  
                        i2u440_47 0786                          i2u353_40 0E16  
                        i2u345_40 0C74                          i2u409_40 1074  
                        i2u353_41 0E14                          i2u441_47 07C6  
                        i2u354_40 0E24                          i2u426_40 06C2  
                        i2u442_47 083E                          i2u355_40 0E2A  
                        i2u443_47 197C                          i2u348_40 0CB2  
                        i2u357_40 0E38                         _valorAMos 00D2  
                        i2u286_40 1BF6                          i2u288_40 1C3E  
                        _RCONbits 000FD0                       ??i2_sprintf 005B  
                       _vfpfcnvrt 0E90                 ___wmul@multiplier 0001  
             __end_ofi2_UART_PutC 220E                      i2_UART_Print 1FC8  
                        i2pad@buf 0013                          i2_strcat 21D4  
                        i2dtoa@fp 001C                          i2_strcpy 20A8  
                        i2_strlen 213C                       _INTCON2bits 000FF1  
                     _INTCON3bits 000FF0                          i2fputc@c 0001  
                        i2fputs@c 000E                          i2fputs@i 000F  
                        i2fputs@s 000A                          __Hrparam 0000  
                      vfprintf@ap 0147                          __Lrparam 0000  
                      vfprintf@fp 0144                     _valor_display 016D  
                      ?_vfpfcnvrt 0134                   ___aodiv@divisor 0108  
                 ___aodiv@counter 00AC                        sprintf@fmt 014C  
                      strcat@dest 00B7                          _isr$1401 00A8  
                        _isr$1402 00AA                          __ptext10 1B46  
                        __ptext11 220E                          __ptext20 21D4  
                        __ptext12 2074                          __ptext21 20A8  
                        __ptext13 1566                          __ptext30 2210  
                        __ptext22 1F42                          __ptext14 1174  
                        __ptext31 20DC                          __ptext23 1E14  
                        __ptext15 1F86                          __ptext32 17CA  
                        __ptext24 1006                          __ptext16 21F6  
                        __ptext33 12DA                          __ptext25 0C4A  
                        __ptext17 16A0                          __ptext34 1FC8  
                        __ptext26 1C86                          __ptext18 19CE  
                        __ptext35 2202                          __ptext27 213C  
                        __ptext36 18EE                          __ptext28 2008  
                        __ptext37 218C                          __ptext29 1BE6  
                        __ptext38 1DA4                          __ptext39 1D20  
                      strcpy@dest 00B0                          isa$xinst 000000  
                        int$flags 0076                          _vfprintf 1E64  
                     i2_UART_PutC 2202                  ___aomod@dividend 0100  
                      _INTCONbits 000FF2                          intlevel2 0000  
                       sprintf@ap 014F                         strcat@src 00B9  
                       strcpy@src 00B2                   ___aomod@divisor 0108  
                   ??i2_vfpfcnvrt 0046                       ??_vfpfcnvrt 013A  
                 ___aomod@counter 00AC                          sprintf@f 0151  
                        sprintf@s 014A                        _UART_Print 1F86  
                    ___aldiv@sign 00B5                      ___aodiv@sign 00AD  
              i2___aodiv@dividend 0001                      ___aomod@sign 00AD  
